import warnings
warnings.filterwarnings("ignore")

import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from streamlit_plotly_events import plotly_events
from datetime import datetime, timedelta
import pytz
import feedparser
import urllib.parse
import html
import re
import time
import locale

# Set locale for proper number formatting
try:
    locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
except:
    pass

# --------------------------
# ML libraries
# --------------------------
HAS_PROPHET = False
HAS_ARIMA = False
HAS_SKLEARN = False
HAS_TF = False

try:
    from prophet import Prophet
    HAS_PROPHET = True
except:
    Prophet = None

try:
    from statsmodels.tsa.arima.model import ARIMA
    HAS_ARIMA = True
except:
    ARIMA = None

try:
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.preprocessing import MinMaxScaler
    HAS_SKLEARN = True
except:
    RandomForestRegressor = None
    MinMaxScaler = None

try:
    import tensorflow as tf
    from tensorflow import keras
    from tensorflow.keras import layers
    from tensorflow.keras.models import Sequential
    from tensorflow.keras.layers import LSTM, Dense, Dropout, BatchNormalization, Bidirectional
    from tensorflow.keras import optimizers
    from tensorflow.keras import callbacks
    HAS_TF = True
except:
    tf = None
    keras = None
    layers = None

# --------------------------
# Translation Dictionaries
# --------------------------
translations = {
    "en": {
        "disclaimer_title": "DISCLAIMER",
        "disclaimer_text": """Point blank provides stock market data, analysis, and predictive tools for **educational and informational purposes only**.  

- Point blank does **not** provide financial, investment, trading, or legal advice.  
- All information, forecasts, and analytics generated by Point blank are **estimates only** and may be inaccurate, incomplete, or outdated.  
- Stock market investments are inherently **risky and volatile**. Past performance is not indicative of future results.  
- Users are solely responsible for any investment or trading decisions made based on Point blank's content.  
- The developers, owners, affiliates, and contributors of Point blank shall **not be held liable** for any financial losses, damages, or consequences arising directly or indirectly from its use.  

By using Point blank, you acknowledge that you understand these risks and agree to use the website at your own discretion and responsibility.  
For personalized financial guidance, please consult a licensed financial advisor.""",
        "accept_disclaimer": "I have read and accept the disclaimer",
        "title": "POINT.BLANK",
        "ticker_label": "Ticker",
        "period_label": "History period",
        "interval_label": "Interval",
        "indicators_label": "Show Indicators",
        "run_button": "Run All",
        "fetching_data": "Fetching stock data and computing indicators...",
        "no_data": "No data retrieved. Check ticker or network connection.",
        "price_chart": "Price Chart & Technical Indicators",
        "ai_forecasts": "AI Forecasts",
        "running_models": "Running forecasting models...",
        "news": "NEWS",
        "fetching_news": "Fetching latest news...",
        "no_articles": "No recent articles found.",
        "export_data": "Export Data",
        "download_csv": "Download Raw Data (CSV)",
        "search_any_ticker": "Or Search Any Yahoo Finance Ticker",
        "enter_yahoo_symbol": "Enter any Yahoo Finance symbol",
        "ticker_placeholder": "e.g., AAPL, BTC-USD, NIFTY, TSLA",
        "using_custom_ticker": "Using custom ticker",
        "using_selected_ticker": "Using selected ticker",
        "download_json": "Download Historical Data (JSON)",
        "download_news": "Download News Data (CSV)",
        "recent_data": "Recent Historical Data",
        "select_ticker": "Select a ticker and press **'Run'** to fetch comprehensive stock analysis with forecasts and news!",
        "model_status": "Model Availability Status",
        "available": "Available",
        "missing": "Missing",
        "date": "Date",
        "open": "Open",
        "high": "High",
        "low": "Low",
        "close": "Close",
        "prophet": "Prophet",
        "arima": "ARIMA",
        "random_forest": "Random Forest",
        "lstm": "LSTM",
        "historical": "Historical",
        "forecast": "Forecast",
        "lower_bound": "Lower Bound",
        "upper_bound": "Upper Bound",
        "download": "Download",
        "warning": "Please accept the disclaimer to use the app.",
        "error_fetching": "Error fetching data",
        "error_computing": "Error computing indicators",
        "error_chart": "Error creating chart",
        "error_metrics": "Error displaying metrics",
        "error_forecasts": "Error displaying forecasts",
        "error_news": "Error displaying news",
        "error_export": "Error creating export section",
        "prophet_error": "Enhanced Prophet error",
        "arima_error": "ARIMA error",
        "rf_error": "RandomForest error",
        "lstm_error": "Enhanced LSTM error",
        "no_models": "No forecasting models available. Install required libraries (prophet, statsmodels, sklearn, tensorflow).",
        "lstm_warning1": "Dataset too small for LSTM. Skipping LSTM forecasting.",
        "lstm_warning2": "Not enough sequences for LSTM training. Skipping LSTM.",
        "language_select": "Select your preferred language",
        "city_select": "Select your city on the globe",
        "current_time": "Current Time"
    },
    "es": {
        "disclaimer_title": "DESCARGO DE RESPONSABILIDAD",
        "disclaimer_text": """Point blank proporciona datos del mercado de valores, análisis y herramientas predictivas únicamente con **fines educativos e informativos**.  

- Point blank **no** proporciona asesoramiento financiero, de inversión, comercial o legal.  
- Toda la información, pronósticos y análisis generados por Point blank son **solo estimaciones** and pueden ser inexactos, incompletos o obsoletos.  
- Las inversiones en el mercado de valores son inherentemente **riesgosas y volátiles**. El rendimiento pasado no es indicativo de resultados futuros.  
- Los usuarios son los únicos responsables de cualquier decisión de inversión o negociación tomada basándose en el contenido de Point blank.  
- Los desarrolladores, propietarios, afiliados y colaboradores de Point blank **no serán responsables** de ninguna pérdida financiera, daño o consecuencia que surja directa o indirectamente de su uso.  

Al utilizar Point blank, usted reconoce que comprende estos riesgos y acepta utilizar el sitio web bajo su propia discreción y responsabilidad.  
Para orientación financiera personalizada, consulte a un asesor financiero autorizado.""",
        "accept_disclaimer": "He leído y acepto el descargo de responsabilidad",
        "title": "PUNTO.BLANCO",
        "ticker_label": "Ticker",
        "period_label": "Período de historial",
        "interval_label": "Intervalo",
        "indicators_label": "Mostrar indicadores",
        "run_button": "Ejecutar todo",
        "fetching_data": "Obteniendo datos de acciones and calculando indicadores...",
        "no_data": "No se recuperaron datos. Verifique el ticker o la conexión de red.",
        "price_chart": "Gráfico de precios e indicadores técnicos",
        "ai_forecasts": "Pronósticos de IA",
        "running_models": "Ejecutando modelos de pronóstico...",
        "news": "NOTICIAS",
        "fetching_news": "Obteniendo noticias recientes...",
        "no_articles": "No se encontraron artículos recientes.",
        "export_data": "Exportar datos",
        "download_csv": "Descargar datos brutos (CSV)",
        "download_json": "Descargar datos históricos (JSON)",
        "download_news": "Descargar datos de noticias (CSV)",
        "recent_data": "Datos históricos recientes",
        "select_ticker": "¡Seleccione un ticker and presione **'Ejecutar'** para obtener un análisis completo de acciones con pronósticos and noticias!",
        "model_status": "Estado de disponibilidad del modelo",
        "available": "Disponible",
        "missing": "Falta",
        "date": "Fecha",
        "open": "Apertura",
        "high": "Máximo",
        "low": "Mínimo",
        "close": "Cierre",
        "prophet": "Profeta",
        "arima": "ARIMA",
        "random_forest": "Bosque Aleatorio",
        "lstm": "LSTM",
        "historical": "Histórico",
        "forecast": "Pronóstico",
        "lower_bound": "Límite inferior",
        "upper_bound": "Límite superior",
        "download": "Descargar",
        "warning": "Por favor, acepte el descargo de responsabilidad para usar la aplicación.",
        "error_fetching": "Error al obtener datos",
        "error_computing": "Error al calcular indicadores",
        "error_chart": "Error al crear gráfico",
        "error_metrics": "Error al mostrar métricas",
        "error_forecasts": "Error al mostrar pronósticos",
        "error_news": "Error al mostrar noticias",
        "error_export": "Error al crear sección de exportación",
        "prophet_error": "Error de Profeta mejorado",
        "arima_error": "Error de ARIMA",
        "rf_error": "Error de Bosque Aleatorio",
        "lstm_error": "Error de LSTM mejorado",
        "no_models": "No hay modelos de pronóstico disponibles. Instale las bibliotecas requeridas (prophet, statsmodels, sklearn, tensorflow).",
        "lstm_warning1": "Conjunto de datos demasiado pequeño para LSTM. Omitiendo pronóstico LSTM.",
        "lstm_warning2": "No hay suficientes secuencias para el entrenamiento LSTM. Omitiendo LSTM.",
        "language_select": "Seleccione su idioma preferido",
        "city_select": "Seleccione su ciudad en el globo",
        "current_time": "Hora Actual"
    },
    "fr": {
        "disclaimer_title": "AVERTISSEMENT",
        "disclaimer_text": """Point blank fournit des données boursières, des analyses and des outils prédictifs à des **fins éducatives and informatives uniquement**.  

- Point blank **ne fournit pas** de conseils financiers, d'investissement, de trading ou juridiques.  
- Toutes les informations, prévisions and analyses générées par Point blank sont **seulement des estimations** and peuvent être inexactes, incomplètes ou obsolètes.  
- Les investissements boursiers sont intrinsèquement **risqués and volatils**. Les performances passées ne sont pas indicatives des résultats futurs.  
- Les utilisadores sont seuls responsables de toute décision d'investissement ou de trading prise sur la basis du contenu de Point blank.  
- Les développeurs, propriétaires, affiliés and contributeurs de Point blank **ne pourront être tenus responsables** de toute perte financière, dommage ou conséquence découlant directement ou indirectlement de son utilisation.  

En utilisant Point blank, vous reconnaissez que vous comprenez ces risques and acceptez d'utiliser le site Web à vos propres risques and responsabilités.  
Pour des conseils financiers personnalisés, veuillez consulter un conseiller financier agréé.""",
        "accept_disclaimer": "J'ai lu and accepté l'avertissement",
        "title": "POINT.BLANC",
        "ticker_label": "Symbole",
        "period_label": "Période historique",
        "interval_label": "Intervalle",
        "indicators_label": "Afficher les indicateurs",
        "run_button": "Tout exécuter",
        "fetching_data": "Récupération des données boursières and calcul des indicateurs...",
        "no_data": "Aucune donnée récupérée. Vérifiez le symbole ou la connexion réseau.",
        "price_chart": "Graphique des prix and indicateurs techniques",
        "ai_forecasts": "Prévisions IA",
        "running_models": "Exécution des modèles de prévision...",
        "news": "ACTUALITÉS",
        "fetching_news": "Récupération des dernières actualités...",
        "no_articles": "Aucun article récent trouvé.",
        "export_data": "Exporter les données",
        "download_csv": "Télécharger les données brutes (CSV)",
        "download_json": "Télécharger les données historiques (JSON)",
        "download_news": "Télécharger les données d'actualités (CSV)",
        "recent_data": "Données historiques récentes",
        "select_ticker": "Sélectionnez un symbole and appuyez sur **'Exécuter'** pour obtenir une analyse complète des actions avec prévisions and actualités !",
        "model_status": "État de disponibilité du modèle",
        "available": "Disponible",
        "missing": "Manquant",
        "date": "Date",
        "open": "Ouverture",
        "high": "Haut",
        "low": "Bas",
        "close": "Clôture",
        "prophet": "Prophète",
        "arima": "ARIMA",
        "random_forest": "Forêt Aléatoire",
        "lstm": "LSTM",
        "historical": "Historique",
        "forecast": "Prévision",
        "lower_bound": "Limite inférieure",
        "upper_bound": "Limite supérieure",
        "download": "Télécharger",
        "warning": "Veuillez accepté l'avertissement pour utiliser l'application.",
        "error_fetching": "Erreur lors de la récupération des données",
        "error_computing": "Erreur lors du calcul des indicateurs",
        "error_chart": "Erreur lors de la création du graphique",
        "error_metrics": "Erreur lors de l'affichage des métriques",
        "error_forecasts": "Erreur lors de l'affichage des prévisions",
        "error_news": "Erreur lors de l'affichage des actualités",
        "error_export": "Erreur lors de la création de la section d'exportation",
        "prophet_error": "Erreur de Prophète amélioré",
        "arima_error": "Erreur ARIMA",
        "rf_error": "Erreur de Forêt Aléatoire",
        "lstm_error": "Erreur LSTM améliorée",
        "no_models": "Aucun modèle de prévision disponible. Installez les bibliothèques requises (prophet, statsmodels, sklearn, tensorflow).",
        "lstm_warning1": "Jeu de données trop petit pour LSTM. Ignorer la prévision LSTM.",
        "lstm_warning2": "Pas assez de séquences pour l'entraînement LSTM. Ignorer LSTM.",
        "language_select": "Sélectionnez votre langue préférée",
        "city_select": "Seleccione su ciudad en el globo",
        "current_time": "Heure Actuelle"
    },
    "pt": {
        "disclaimer_title": "AVISO LEGAL",
        "disclaimer_text": """Point blank fornece dados do mercado de ações, análises e ferramentas preditivas apenas para **fins educacionais e informativos**.  

- Point blank **não** fornece aconselhamento financeiro, de investimento, de negociação ou jurídico.  
- Todas as informações, previsões e análises geradas pelo Point blank são **apenas estimativas** e podem ser imprecisas, incompletas ou desatualizadas.  
- Investimentos no mercado de ações são inerentemente **arriscados e voláteis**. O desempenho passado não é indicativo de resultados futuros.  
- Os usuários são os únicos responsáveis por quaisquer decisões de investimento ou negociação tomadas com base no conteúdo do Point blank.  
- Os desenvolvedores, proprietários, afiliados e colaboradores do Point blank **não serão responsabilizados** por quaisquer perdas financeiras, danos ou consequências decorrentes direta ou indiretamente de seu uso.  

Ao usar o Point blank, você reconhece que entende esses riscos e concorda em usar o site por sua própria conta e risco.  
Para orientação financiera personalizada, consulte um consultor financeiro licenciado.""",
        "accept_disclaimer": "Eu li e aceito o aviso legal",
        "title": "PONTO.BRANCO",
        "ticker_label": "Ticker",
        "period_label": "Período histórico",
        "interval_label": "Intervalo",
        "indicators_label": "Mostrar indicadores",
        "run_button": "Executar tudo",
        "fetching_data": "Obtendo dados de ações e calculando indicadores...",
        "no_data": "Nenhum dado recuperado. Verifique o ticker ou a conexão de réseau.",
        "price_chart": "Gráfico de preços e indicadores técnicos",
        "ai_forecasts": "Previsões de IA",
        "running_models": "Executando modelos de previsão...",
        "news": "NOTÍCIAS",
        "fetching_news": "Obtendo notícias recentes...",
        "no_articles": "Nenhum artigo recente encontrado.",
        "export_data": "Exportar dados",
        "download_csv": "Baixar dados brutos (CSV)",
        "download_json": "Baixar dados históricos (JSON)",
        "download_news": "Baixar dados de notícias (CSV)",
        "recent_data": "Datos históricos recientes",
        "select_ticker": "Selecione a ticker e pressione **'Executar'** para obter uma análise completa de ações com previsões e notícias!",
        "model_status": "Status de disponibilidade do modelo",
        "available": "Disponível",
        "missing": "Faltando",
        "date": "Data",
        "open": "Abertura",
        "high": "Alta",
        "low": "Baixa",
        "close": "Fechamento",
        "prophet": "Profeta",
        "arima": "ARIMA",
        "random_forest": "Floresta Aleatória",
        "lstm": "LSTM",
        "historical": "Histórico",
        "forecast": "Prevision",
        "lower_bound": "Limite inferior",
        "upper_bound": "Limite superior",
        "download": "Baixar",
        "warning": "Por favor, aceite o aviso legal para usar o aplicativo.",
        "error_fetching": "Erro ao obter dados",
        "error_computing": "Erro ao calcular indicadores",
        "error_chart": "Erro ao criar gráfico",
        "error_metrics": "Erro ao exibir métricas",
        "error_forecasts": "Erro ao exibir previsões",
        "error_news": "Erro ao exibir notícias",
        "error_export": "Erro ao criar seção de exportação",
        "prophet_error": "Erro de Profeta aprimorado",
        "arima_error": "Erro ARIMA",
        "rf_error": "Erro de Floresta Aleatória",
        "lstm_error": "Erro LSTM aprimorado",
        "no_models": "Nenhum modelo de previsão disponível. Instale as bibliotecas necessárias (prophet, statsmodels, sklearn, tensorflow).",
        "lstm_warning1": "Conjunto de dados muito pequeno para LSTM. Ignorando previsão LSTM.",
        "lstm_warning2": "Sequências insuficientes para treinamento LSTM. Ignorando LSTM.",
        "language_select": "Selecione seu idioma preferido",
        "city_select": "Selecione sua cidade no globo",
        "current_time": "Hora Atual"
    },
    "ta": {
        "disclaimer_title": "மறுப்பு விதி",
        "disclaimer_text": """Point blank பங்குச் சந்தை தரவு, பகுப்பாய்வு மற்றும் கணிப்பு கருவிகளை **கல்வி மற்றும் தகவல் நோக்கங்களுக்காக மட்டுமே** வழங்குகிறது.  

- Point blank நிதி, முதலீட்டு, வர்த்தக அல்லது சட்ட ஆலோசனையை **வழங்காது**.  
- Point blank உருவாக்கிய அனைத்து தகவல்கள், கணிப்புகள் மற்றும் பகுப்பாய்வுகள் **வெறும் மதிப்பீடுகள் மட்டுமே** மற்றும் தவறான, முழுமையற்ற அல்லது காலாவதியானதாக இருக்கலாம்.  
- பங்குச் சந்தை முதலீடுகள் இயல்பாகவே **ஆபத்தானவை மற்றும் ஏற்ற இறக்கமுடையவை**. கடந்த செயல்திறன் எதிர்கால முடிவுகளுக்கு அறிகுறியாக இல்லை.  
- Point blank இன் உள்ளடக்கத்தின் அடிப்படையில் எடுக்கப்பட்ட எந்த முதலீட்டு அல்லது வர்த்தக முடிவுகளுக்கும் பயனர்கள் மட்டுமே பொறுப்பு.  
- Point blank இன் உருவாக்குநர்கள், உரிமையாளர்கள், இணை நிறுவனங்கள் மற்றும் பங்களிப்பாளர்கள் அதன் பயன்பாட்டிலிருந்து நேரடியாகவோ அல்லது மறைமுகமாகவோ எழும் எந்த நிதி இழப்புகள், சேதங்கள் அல்லது விளைவுகளுக்கும் **பொறுப்பாக இருக்க மாட்டார்கள்**.  

Point blank ஐப் பயன்படுத்துவதன் மூலம், இந்த அபாயங்களை நீங்கள் புரிந்துகொள்கிறீர்கள் என்பதையும், வலைத்தளத்தை உங்கள் சொந்த விருப்பத்தின்படி மற்றும் பொறுப்புடன் பயன்படுத்த ஒப்புக்கொள்கிறீர்கள் என்பதையும் ஒப்புக்கொள்கிறீர்கள்.  
தனிப்பட்ட நிதி வழிகாட்டுதலுக்கு, தயவுசெய்து உரிமம் பெற்ற நிதி ஆலோசகரை அணுகவும்.""",
        "accept_disclaimer": "நான் மறுப்பு விதியைப் படித்து ஏற்றுக்கொள்கிறேன்",
        "title": "பாயிண்ட்.பிளாங்க்",
        "ticker_label": "டிக்கர்",
        "period_label": "வரலாற்று காலம்",
        "interval_label": "இடைவெளி",
        "indicators_label": "குறிகாட்டிகளைக் காட்டு",
        "run_button": "அனைத்தையும் இயக்கு",
        "fetching_data": "பங்குத் தரவைப் பெறுதல் மற்றும் குறிகாட்டிகளைக் கணக்கிடுகிறது...",
        "no_data": "தரவு பெறப்படவில்லை. டிக்கர் அல்லது நெட்வொர்க் இணைப்பைச் சரிபார்க்கவும்.",
        "price_chart": "விலை விளக்கப்படம் & தொழில்நுட்ப குறிகாட்டிகள்",
        "ai_forecasts": "AI கணிப்புகள்",
        "running_models": "கணிப்பு மாதிரிகளை இயக்குகிறது...",
        "news": "செய்திகள்",
        "fetching_news": "சமீபத்திய செய்திகளைப் பெறுகிறது...",
        "no_articles": "சமீபத்திய கட்டுரைகள் எதுவும் கிடைக்கவில்லை.",
        "export_data": "தரவை ஏற்றுமதி செய்",
        "download_csv": "மூல தரவைப் பதிவிறக்கு (CSV)",
        "download_json": "வரலாற்றுத் தரவைப் பதிவிறக்கு (JSON)",
        "download_news": "செய்தித் தரவைப் பதிவிறக்கு (CSV)",
        "recent_data": "சமீபத்திய வரலாற்றுத் தரவு",
        "select_ticker": "ஒரு டிக்கரைத் தேர்ந்தெடுத்து **'இயக்கு'** என்பதை அழுத்துங்கள், கணிப்புகள் மற்றும் செய்திகளுடன் முழுமையான பங்கு பகுப்பாய்வைப் பெற!",
        "model_status": "மாதிரி கிடைக்கும் நிலை",
        "available": "கிடைக்கிறது",
        "missing": "காணவில்லை",
        "date": "தேதி",
        "open": "திறப்பு",
        "high": "உயர்",
        "low": "தாழ்",
        "close": "மூடுதல்",
        "prophet": "பிராபெட்",
        "arima": "ARIMA",
        "random_forest": "ரேண்டம் ஃபாரஸ்ட்",
        "lstm": "LSTM",
        "historical": "வரலாற்று",
        "forecast": "கணிப்பு",
        "lower_bound": "கீழ் வரம்பு",
        "upper_bound": "மேல் வரம்பு",
        "download": "பதிவிறக்கம்",
        "warning": "பயன்பாட்டைப் பயன்படுத்த மறுப்பு விதியை ஏற்றுக்கொள்ளவும்.",
        "error_fetching": "தரவைப் பெறுவதில் பிழை",
        "error_computing": "குறிகாட்டிகளைக் கணக்கிடுவதில் பிழை",
        "error_chart": "விளக்கப்படத்தை உருவாக்குவதில் பிழை",
        "error_metrics": "அளவீடுகளைக் காண்பிப்பதில் பிழை",
        "error_forecasts": "கணிப்புகளைக் காண்பிப்பதில் பிழை",
        "error_news": "செய்திகளைக் காண்பிப்பதில் பிழை",
        "error_export": "ஏற்றுமதி பிரிவை உருவாக்குவதில் பிழை",
        "prophet_error": "மேம்படுத்தப்பட்ட பிராபெட் பிழை",
        "arima_error": "ARIMA பிழை",
        "rf_error": "ரேண்டம் ஃபாரஸ்ட் பிழை",
        "lstm_error": "மேம்படுத்தப்பட்ட LSTM பிழை",
        "no_models": "கணிப்பு மாதிரிகள் எதுவும் கிடைக்கவில்லை. தேவையான நூலகங்களை நிறுவவும் (prophet, statsmodels, sklearn, tensorflow).",
        "lstm_warning1": "LSTM க்கு தரவுத் தொகுப்பு மிகச் சிறியது. LSTM கணிப்பைத் தவிர்க்கிறது.",
        "lstm_warning2": "LSTM பயிற்சிக்கு போதுமான வரிசைகள் இல்லை. LSTM ஐத் தவிர்க்கிறது.",
        "language_select": "உங்களுக்கு விருப்பமான மொழியைத் தேர்ந்தெடுக்கவும்",
        "city_select": "கோளத்தில் உங்கள் நகரத்தைத் தேர்ந்தெடுக்கவும்",
        "current_time": "தற்போதைய நேரம்"
    },
    "de": {
    "disclaimer_title": "HAFTUNGSAUSSCHLUSS",
    "disclaimer_text": """Point blank bietet Börsendaten, Analysen und Prognosetools ausschließlich zu **Bildungs- und Informationszwecken**.  

- Point blank bietet **keine** finanziellen, Anlage-, Handels- oder Rechtsberatung.  
- Alle von Point blank generierten Informationen, Prognosen und Analysen sind **nur Schätzungen** und können ungenau, unvollständig oder veraltet sein.  
- Börseninvestitionen sind von Natur aus **riskant und volatil**. Die vergangene Performance ist kein Indikator für zukünftige Ergebnisse.  
- Nutzer sind allein verantwortlich für alle Anlage- oder Handelsentscheidungen, die auf Point blank-Inhalten basieren.  
- Die Entwickler, Eigentümer, Partner und Mitwirkenden von Point blank **haften nicht** für finanzielle Verluste, Schäden oder Konsequenzen, die direkt oder indirekt aus der Nutzung entstehen.  

Durch die Nutzung von Point blank bestätigen Sie, dass Sie diese Risiken verstehen und der Website nach eigenem Ermessen und auf eigene Verantwortung nutzen.  
Für persönliche Finanzberatung konsultieren Sie bitte einen lizenzierten Finanzberater.""",
    "accept_disclaimer": "Ich habe den Haftungsausschluss gelesen und akzeptiere ihn",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Historiezeitraum",
    "interval_label": "Intervall",
    "indicators_label": "Indikatoren anzeigen",
    "run_button": "Alles ausführen",
    "fetching_data": "Aktiendaten werden abgerufen und Indikatoren berechnet...",
    "no_data": "Keine Daten abgerufen. Ticker oder Netzwerkverbindung prüfen.",
    "price_chart": "Preisdiagramm & Technische Indikatoren",
    "ai_forecasts": "KI-Prognosen",
    "running_models": "Prognosemodelle werden ausgeführt...",
    "news": "NACHRICHTEN",
    "fetching_news": "Aktuelle Nachrichten werden abgerufen...",
    "no_articles": "Keine aktuellen Artikel gefunden.",
    "export_data": "Daten exportieren",
    "download_csv": "Rohdaten herunterladen (CSV)",
    "download_json": "Historische Daten herunterladen (JSON)",
    "download_news": "Nachrichtendaten herunterladen (CSV)",
    "recent_data": "Aktuelle historische Daten",
    "select_ticker": "Wählen Sie einen Ticker aus und drücken Sie **'Ausführen'**, um umfassende Aktienanalysen mit Prognosen und Nachrichten zu erhalten!",
    "model_status": "Modellverfügbarkeitsstatus",
    "available": "Verfügbar",
    "missing": "Fehlt",
    "date": "Datum",
    "open": "Eröffnung",
    "high": "Hoch",
    "low": "Tief",
    "close": "Schluss",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Historisch",
    "forecast": "Prognose",
    "lower_bound": "Untere Grenze",
    "upper_bound": "Obere Grenze",
    "download": "Herunterladen",
    "warning": "Bitte akzeptieren Sie den Haftungsausschluss, um die App zu nutzen.",
    "error_fetching": "Fehler beim Abrufen der Daten",
    "error_computing": "Fehler beim Berechnen der Indikatoren",
    "error_chart": "Fehler beim Erstellen des Diagramms",
    "error_metrics": "Fehler beim Anzeigen der Metriken",
    "error_forecasts": "Fehler beim Anzeigen der Prognosen",
    "error_news": "Fehler beim Anzeigen der Nachrichten",
    "error_export": "Fehler beim Erstellen des Exportbereichs",
    "prophet_error": "Erweiterter Prophet-Fehler",
    "arima_error": "ARIMA-Fehler",
    "rf_error": "RandomForest-Fehler",
    "lstm_error": "Erweiterter LSTM-Fehler",
    "no_models": "Keine Prognosemodelle verfügbar. Installieren Sie die erforderlichen Bibliotheken (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Datensatz zu klein für LSTM. LSTM-Prognose wird übersprungen.",
    "lstm_warning2": "Nicht genügend Sequenzen für LSTM-Training. LSTM wird übersprungen.",
    "language_select": "Wählen Sie Ihre bevorzugte Sprache",
    "city_select": "Wählen Sie Ihre Stadt auf dem Globus",
    "current_time": "Aktuelle Zeit"
},
    "it": {
    "disclaimer_title": "ESCLUSIONE DI RESPONSABILITÀ",
    "disclaimer_text": """Point blank fornisce dati di borsa, analisi e strumenti predittivi solo a **scopo educativo e informativo**.  

- Point blank **non** fornisce consulenza finanziaria, di investimento, di trading o legale.  
- Tutte le informazioni, previsioni e analisi generate da Point blank sono **solo stime** e potrebbero essere inaccurate, incomplete o obsolete.  
- Gli investimenti in borsa sono intrinsecamente **rischiosi e volatili**. La performance passata non è indicativa dei risultati futuri.  
- Gli utenti sono i soli responsabili di qualsiasi decisione di investimento o trading basata sui contenuti di Point blank.  
- Gli sviluppatori, proprietari, affiliati e collaboratori di Point blank **non saranno ritenuti responsabili** per eventuali perdite finanziarie, danni o conseguenze derivanti direttamente o indirettamente dal suo utilizzo.  

Utilizzando Point blank, riconosci di comprendere questi rischi e accetti di utilizzare il sito a tua discrezione e responsabilità.  
Per una guida finanziaria personalizzata, consulta un consulente finanziario autorizzato.""",
    "accept_disclaimer": "Ho letto e accetto l'esclusione di responsabilità",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Periodo storico",
    "interval_label": "Intervallo",
    "indicators_label": "Mostra indicatori",
    "run_button": "Esegui tutto",
    "fetching_data": "Recupero dati azionari e calcolo indicatori...",
    "no_data": "Nessun dato recuperato. Controlla il ticker o la connessione di rete.",
    "price_chart": "Grafico prezzi e indicatori tecnici",
    "ai_forecasts": "Previsioni IA",
    "running_models": "Esecuzione modelli di previsione...",
    "news": "NOTIZIE",
    "fetching_news": "Recupero ultime notizie...",
    "no_articles": "Nessun articolo recente trovato.",
    "export_data": "Esporta dati",
    "download_csv": "Scarica dati grezzi (CSV)",
    "download_json": "Scarica dati storici (JSON)",
    "download_news": "Scarica dati notizie (CSV)",
    "recent_data": "Dati storici recenti",
    "select_ticker": "Seleziona un ticker e premi **'Esegui'** per ottenere un'analisi azionaria completa con previsioni e notizie!",
    "model_status": "Stato disponibilità modelli",
    "available": "Disponibile",
    "missing": "Mancante",
    "date": "Data",
    "open": "Apertura",
    "high": "Massimo",
    "low": "Minimo",
    "close": "Chiusura",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Storico",
    "forecast": "Previsione",
    "lower_bound": "Limite inferiore",
    "upper_bound": "Limite superiore",
    "download": "Scarica",
    "warning": "Si prega di accettare l'esclusione di responsabilità per utilizzare l'app.",
    "error_fetching": "Errore nel recupero dei dati",
    "error_computing": "Errore nel calcolo degli indicatori",
    "error_chart": "Errore nella creazione del grafico",
    "error_metrics": "Errore nella visualizzazione delle metriche",
    "error_forecasts": "Errore nella visualizzazione delle previsioni",
    "error_news": "Errore nella visualizzazione delle notizie",
    "error_export": "Errore nella creazione della sezione di esportazione",
    "prophet_error": "Errore Prophet migliorato",
    "arima_error": "Errore ARIMA",
    "rf_error": "Errore Random Forest",
    "lstm_error": "Errore LSTM migliorato",
    "no_models": "Nessun modello di previsione disponibile. Installa le librerie richieste (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Dataset troppo piccolo per LSTM. Saltata la previsione LSTM.",
    "lstm_warning2": "Sequenze insufficienti per l'addestramento LSTM. Saltato LSTM.",
    "language_select": "Seleziona la tua lingua preferita",
    "city_select": "Seleziona la tua città sul globo",
    "current_time": "Ora attuale"
},
    "el": {
    "disclaimer_title": "ΑΠΑΛΛΑΓΗ ΕΥΘΥΝΗΣ",
    "disclaimer_text": """Το Point blank παρέχει δεδομένα χρηματιστηρίου, ανάλυση και προγνωστικά εργαλεία **μόνο για εκπαιδευτικούς και ενημερωτικούς σκοπούς**.  

- Το Point blank **δεν** παρέχει χρηματοοικονομικές, επενδυτικές, συναλλαγματικές ή νομικές συμβουλές.  
- Όλες οι πληροφορίες, προβλέψεις και αναλύσεις που δημιουργούνται από το Point blank είναι **μόνο εκτιμήσεις** και μπορεί να είναι ανακριβείς, ελλιπείς ή ξεπερασμένες.  
- Οι επενδύσεις στο χρηματιστήριο είναι εγγενώς **επικίνδυνες και ασταθείς**. Η προηγούμενη απόδοση δεν είναι δείκτης μελλοντικών αποτελεσμάτων.  
- Οι χρήστες είναι αποκλειστικά υπεύθυνοι για οποιαδήποτε επενδυτική ή συναλλαγματική απόφαση που λαμβάνεται βάσει του περιεχομένου του Point blank.  
- Οι προγραμματιστές, ιδιοκτήτες, θυγατρικές και συνεισφέροντες του Point blank **δεν φέρουν ευθύνη** για οποιεσδήποτε χρηματικές απώλειες, ζημίες ή συνέπειες που προκύπτουν άμεσα ή έμμεσα από τη χρήση του.  

Χρησιμοποιώντας το Point blank, αναγνωρίζετε ότι κατανοείτε αυτούς τους κινδύνους και συμφωνείτε να χρησιμοποιείτε τον ιστότοπο με δική σας διακριτική ευχέρεια και ευθύνη.  
Για εξατομικευμένη χρηματοοικονομική καθοδήγηση, συμβουλευτείτε έναν αδειούχο χρηματοοικονομικό σύμβουλο.""",
    "accept_disclaimer": "Διάβασα και αποδέχομαι την απαλλαγή ευθύνης",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Ιστορική περίοδος",
    "interval_label": "Διάστημα",
    "indicators_label": "Εμφάνιση δεικτών",
    "run_button": "Εκτέλεση όλων",
    "fetching_data": "Ανάκτηση δεδομένων μετοχών και υπολογισμός δεικτών...",
    "no_data": "Δεν ανακτήθηκε δεδομένο. Ελέγξτε το ticker ή τη σύνδεση δικτύου.",
    "price_chart": "Διάγραμμα τιμής & Τεχνικοί δείκτες",
    "ai_forecasts": "Προβλέψεις ΤΝ",
    "running_models": "Εκτέλεση μοντέλων πρόβλεψης...",
    "news": "ΕΙΔΗΣΕΙΣ",
    "fetching_news": "Ανάκτηση πρόσφατων ειδήσεων...",
    "no_articles": "Δεν βρέθηκαν πρόσφατα άρθρα.",
    "export_data": "Εξαγωγή δεδομένων",
    "download_csv": "Λήψη ακατέργαστων δεδομένων (CSV)",
    "download_json": "Λήψη ιστορικών δεδομένων (JSON)",
    "download_news": "Λήψη δεδομένων ειδήσεων (CSV)",
    "recent_data": "Πρόσφατα ιστορικά δεδομένα",
    "select_ticker": "Επιλέξτε ένα ticker και πατήστε **'Εκτέλεση'** για να λάβετε ολοκληρωμένη ανάλυση μετοχών με προβλέψεις και ειδήσεις!",
    "model_status": "Κατάσταση διαθεσιμότητας μοντέλου",
    "available": "Διαθέσιμο",
    "missing": "Λείπει",
    "date": "Ημερομηνία",
    "open": "Άνοιγμα",
    "high": "Υψηλό",
    "low": "Χαμηλό",
    "close": "Κλείσιμο",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Ιστορικό",
    "forecast": "Πρόβλεψη",
    "lower_bound": "Κάτω όριο",
    "upper_bound": "Άνω όριο",
    "download": "Λήψη",
    "warning": "Παρακαλώ αποδεχτείτε την απαλλαγή ευθύνης για να χρησιμοποιήσετε την εφαρμογή.",
    "error_fetching": "Σφάλμα ανάκτησης δεδομένων",
    "error_computing": "Σφάλμα υπολογισμού δεικτών",
    "error_chart": "Σφάλμα δημιουργίας διαγράμματος",
    "error_metrics": "Σφάλμα εμφάνισης μετρήσεων",
    "error_forecasts": "Σφάλμα εμφάνισης προβλέψεων",
    "error_news": "Σφάλμα εμφάνισης ειδήσεων",
    "error_export": "Σφάλμα δημιουργίας τμήματος εξαγωγής",
    "prophet_error": "Βελτιωμένο σφάλμα Prophet",
    "arima_error": "Σφάλμα ARIMA",
    "rf_error": "Σφάλμα Random Forest",
    "lstm_error": "Βελτιωμένο σφάλμα LSTM",
    "no_models": "Δεν υπάρχουν διαθέσιμα μοντέλα πρόβλεψης. Εγκαταστήστε τις απαιτούμενες βιβλιοθήκες (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Σύνολο δεδομένων πολύ μικρό για LSTM. Παράλειψη πρόβλεψης LSTM.",
    "lstm_warning2": "Δεν υπάρχουν αρκετές ακολουθίες για εκπαίδευση LSTM. Παράλειψη LSTM.",
    "language_select": "Επιλέξτε την προτιμώμενη γλώσσα σας",
    "city_select": "Επιλέξτε την πόλη σας στον πλανήτη",
    "current_time": "Τρέχουσα ώρα"
},
    "fi": {
    "disclaimer_title": "VASTUUVAPUUSLAUSKE",
    "disclaimer_text": """Point blank tarjoaa osakemarkkinatietoja, analyyseja ja ennustetyökaluja **vain koulutus- ja tiedotusvälineinä**.  

- Point blank **ei** tarjoa rahoitus-, sijoitus-, kaupankäynti- tai oikeudellista neuvontaa.  
- Kaikki Point blankin luomat tiedot, ennusteet ja analyysit ovat **vain arvioita** ja voivat olla epätarkkoja, puutteellisia tai vanhentuneita.  
- Osakemarkkinasijoitukset ovat luonnostaan **riskaabelia ja epävakaita**. Aiempi tuotto ei ole indikaattori tulevista tuloksista.  
- Käyttäjät ovat yksin vastuussa kaikista Point blankin sisältöön perustuvista sijoitus- tai kaupankäyntipäätöksistä.  
- Point blankin kehittäjät, omistajat, tytäryhtiöt ja avustajat **eivät ole vastuussa** taloudellisista tappioista, vahingoista tai seurauksista, jotka johtuvat suoraan tai epäsuorasti sen käytöstä.  

Käyttämällä Point blankia, tunnistat ymmärtäväsi nämä riskit ja suostut käyttämään verkkosivustoa oman harkintasi ja vastuusi mukaan.  
Henkilökohtaista rahoitusneuvontaa varten ota yhteyttä lisensioituun rahoitusneuvojaan.""",
    "accept_disclaimer": "Olen lukenut ja hyväksyn vastuuvapauslausekkeen",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Historiajakso",
    "interval_label": "Aikaväli",
    "indicators_label": "Näytä indikaattorit",
    "run_button": "Suorita kaikki",
    "fetching_data": "Noudetaan osakedataa ja lasketaan indikaattoreita...",
    "no_data": "Tietoja ei noudettu. Tarkista ticker tai verkkoyhteys.",
    "price_chart": "Hintakaavio & Tekniset indikaattorit",
    "ai_forecasts": "Tekoälyennusteet",
    "running_models": "Suoritetaan ennustemalleja...",
    "news": "UUTISET",
    "fetching_news": "Noudetaan viimeisimpiä uutisia...",
    "no_articles": "Viimeisimpiä artikkeleita ei löytynyt.",
    "export_data": "Vie data",
    "download_csv": "Lataa raakadata (CSV)",
    "download_json": "Lataa historiallinen data (JSON)",
    "download_news": "Lataa uutisdata (CSV)",
    "recent_data": "Viimeisin historiallinen data",
    "select_ticker": "Valitse ticker ja paina **'Suorita'** saadaksesi kattavan osakeanalyysin ennusteilla ja uutisilla!",
    "model_status": "Mallin saatavuustila",
    "available": "Saatavilla",
    "missing": "Puuttuu",
    "date": "Päivämäärä",
    "open": "Avaus",
    "high": "Ylin",
    "low": "Alin",
    "close": "Päätös",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Historiallinen",
    "forecast": "Ennuste",
    "lower_bound": "Alaraja",
    "upper_bound": "Yläraja",
    "download": "Lataa",
    "warning": "Hyväksy vastuuvapauslauseke käyttääksesi sovellusta.",
    "error_fetching": "Virhe datan noudossa",
    "error_computing": "Virhe indikaattoreiden laskennassa",
    "error_chart": "Virhe kaavion luonnissa",
    "error_metrics": "Virhe mittareiden näyttämisessä",
    "error_forecasts": "Virhe ennusteiden näyttämisessä",
    "error_news": "Virhe uutisten näyttämisessä",
    "error_export": "Virhe vientiosion luonnissa",
    "prophet_error": "Paranneltu Prophet-virhe",
    "arima_error": "ARIMA-virhe",
    "rf_error": "RandomForest-virhe",
    "lstm_error": "Paranneltu LSTM-virhe",
    "no_models": "Ei ennustemalleja saatavilla. Asenna vaaditut kirjastot (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Datasetti liian pieni LSTM:lle. LSTM-ennuste ohitetaan.",
    "lstm_warning2": "Ei tarpeeksi sekvenssejä LSTM-koulutukseen. LSTM ohitetaan.",
    "language_select": "Valitse ensisijainen kielesi",
    "city_select": "Valitse kaupunkisi maapallolta",
    "current_time": "Nykyinen aika"
},
    "sv": {
    "disclaimer_title": "ANSAVARSFÖRSKRIVNING",
    "disclaimer_text": """Point blank tillhandahåller aktiemarknadsdata, analyser och prediktiva verktyg **enbart för utbildnings- och informationsändamål**.  

- Point blank ger **inte** finansiella, investerings-, handels- eller juridiska råd.  
- All information, prognoser och analyser genererade av Point blank är **endast uppskattningar** och kan vara felaktiga, ofullständiga eller föråldrade.  
- Aktiemarknadsinvesteringar är i sig **riskfyllda och volatila**. Tidigare resultat är inte en indikator på framtida utfall.  
- Användare är ensamma ansvariga för alla investerings- eller handelsbeslut baserade på Point blanks innehåll.  
- Utvecklarna, ägarna, dotterbolagen och bidragsgivarna till Point blank **ska inte hållas ansvariga** för eventuella finansiella förluster, skador eller konsekvenser som uppstår direkt eller indirekt från dess användning.  

Genom att använda Point blank bekräftar du att du förstår dessa risker och samtycker till att använda webbplatsen efter eget gottfinnande och ansvar.  
För personlig finansiell vägledning, vänligen konsultera en auktoriserad finansiell rådgivare.""",
    "accept_disclaimer": "Jag har läst och accepterar ansvarsfriskrivningen",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Historisk period",
    "interval_label": "Intervall",
    "indicators_label": "Visa indikatorer",
    "run_button": "Kör alla",
    "fetching_data": "Hämtar aktiedata och beräknar indikatorer...",
    "no_data": "Ingen data hämtad. Kontrollera ticker eller nätverksanslutning.",
    "price_chart": "Prisdiagram & Tekniska indikatorer",
    "ai_forecasts": "AI-prognoser",
    "running_models": "Kör prognosmodeller...",
    "news": "NYHETER",
    "fetching_news": "Hämtar senaste nyheterna...",
    "no_articles": "Inga senaste artiklar hittades.",
    "export_data": "Exportera data",
    "download_csv": "Ladda ner rådata (CSV)",
    "download_json": "Ladda ner historisk data (JSON)",
    "download_news": "Ladda ner nyhetsdata (CSV)",
    "recent_data": "Senaste historiska data",
    "select_ticker": "Välj en ticker och tryck på **'Kör'** för att få omfattande aktieanalys med prognoser och nyheter!",
    "model_status": "Modelltillgänglighetsstatus",
    "available": "Tillgänglig",
    "missing": "Saknas",
    "date": "Datum",
    "open": "Öppning",
    "high": "Hög",
    "low": "Låg",
    "close": "Stängning",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Historisk",
    "forecast": "Prognos",
    "lower_bound": "Nedre gräns",
    "upper_bound": "Övre gräns",
    "download": "Ladda ner",
    "warning": "Vänligen acceptera ansvarsfriskrivningen för att använda appen.",
    "error_fetching": "Fel vid hämtning av data",
    "error_computing": "Fel vid beräkning av indikatorer",
    "error_chart": "Fel vid skapande av diagram",
    "error_metrics": "Fel vid visning av mätvärden",
    "error_forecasts": "Fel vid visning av prognoser",
    "error_news": "Fel vid visning av nyheter",
    "error_export": "Fel vid skapande av exportsektion",
    "prophet_error": "Förbättrat Prophet-fel",
    "arima_error": "ARIMA-fel",
    "rf_error": "RandomForest-fel",
    "lstm_error": "Förbättrat LSTM-fel",
    "no_models": "Inga prognosmodeller tillgängliga. Installera nödvändiga bibliotek (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Dataset för litet för LSTM. Hoppar över LSTM-prognos.",
    "lstm_warning2": "Inte tillräckligt med sekvenser för LSTM-träning. Hoppar över LSTM.",
    "language_select": "Välj ditt föredragna språk",
    "city_select": "Välj din stad på jordklotet",
    "current_time": "Aktuell tid"
},
    "pl": {
    "disclaimer_title": "ZASTRZEŻENIE",
    "disclaimer_text": """Point blank dostarcza dane giełdowe, analizy i narzędzia prognostyczne **wyłącznie w celach edukacyjnych i informacyjnych**.  

- Point blank **nie** świadczy porad finansowych, inwestycyjnych, handlowych ani prawnych.  
- Wszystkie informacje, prognozy i analizy generowane przez Point blank są **tylko szacunkami** i mogą być niedokładne, niekompletne lub nieaktualne.  
- Inwestycje giełdowe są z natury **ryzykowne i zmienne**. Wyniki z przeszłości nie są wskaźnikiem przyszłych rezultatów.  
- Użytkownicy są wyłącznie odpowiedzialni za wszelkie decyzje inwestycyjne lub handlowe podjęte w oparciu o treści Point blank.  
- Programiści, właściciele, partnerzy i współpracownicy Point blank **nie ponoszą odpowiedzialności** za jakiekolwiek straty finansowe, szkody lub konsekwencje wynikające bezpośrednio lub pośrednio z jego użytkowania.  

Korzystając z Point blank, potwierdzasz, że rozumiesz te ryzyka i zgadzasz się korzystać z witryny według własnego uznania i na własną odpowiedzialność.  
W celu uzyskania spersonalizowanych porad finansowych skonsultuj się z licencjonowanym doradcą finansowym.""",
    "accept_disclaimer": "Przeczytałem/am i akceptuję zastrzeżenie",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Okres historii",
    "interval_label": "Interwał",
    "indicators_label": "Pokaż wskaźniki",
    "run_button": "Uruchom wszystko",
    "fetching_data": "Pobieranie danych giełdowych i obliczanie wskaźników...",
    "no_data": "Brak pobranych danych. Sprawdź ticker lub połączenie sieciowe.",
    "price_chart": "Wykres cenowy i wskaźniki techniczne",
    "ai_forecasts": "Prognozy SI",
    "running_models": "Uruchamianie modeli prognostycznych...",
    "news": "WIADOMOŚCI",
    "fetching_news": "Pobieranie najnowszych wiadomości...",
    "no_articles": "Nie znaleziono ostatnich artykułów.",
    "export_data": "Eksportuj dane",
    "download_csv": "Pobierz surowe dane (CSV)",
    "download_json": "Pobierz dane historyczne (JSON)",
    "download_news": "Pobierz dane wiadomości (CSV)",
    "recent_data": "Ostatnie dane historyczne",
    "select_ticker": "Wybierz ticker i naciśnij **'Uruchom'**, aby uzyskać kompleksową analizę akcji z prognozami i wiadomościami!",
    "model_status": "Status dostępności modelu",
    "available": "Dostępny",
    "missing": "Brakuje",
    "date": "Data",
    "open": "Otwarcie",
    "high": "Szczyt",
    "low": "Dołek",
    "close": "Zamknięcie",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Historyczny",
    "forecast": "Prognoza",
    "lower_bound": "Dolna granica",
    "upper_bound": "Górna granica",
    "download": "Pobierz",
    "warning": "Proszę zaakceptować zastrzeżenie, aby korzystać z aplikacji.",
    "error_fetching": "Błąd pobierania danych",
    "error_computing": "Błąd obliczania wskaźników",
    "error_chart": "Błąd tworzenia wykresu",
    "error_metrics": "Błąd wyświetlania metryk",
    "error_forecasts": "Błąd wyświetlania prognoz",
    "error_news": "Błąd wyświetlania wiadomości",
    "error_export": "Błąd tworzenia sekcji eksportu",
    "prophet_error": "Ulepszony błąd Prophet",
    "arima_error": "Błąd ARIMA",
    "rf_error": "Błąd Random Forest",
    "lstm_error": "Ulepszony błąd LSTM",
    "no_models": "Brak dostępnych modeli prognostycznych. Zainstaluj wymagane biblioteki (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Zbiór danych zbyt mały dla LSTM. Pomijanie prognozy LSTM.",
    "lstm_warning2": "Niewystarczająca liczba sekwencji do trenowania LSTM. Pomijanie LSTM.",
    "language_select": "Wybierz preferowany język",
    "city_select": "Wybierz swoje miasto na globie",
    "current_time": "Aktualny czas"
},
    "tr": {
    "disclaimer_title": "SORUMLULUK REDDİ",
    "disclaimer_text": """Point blank, borsa verileri, analizler ve tahmin araçlarını **yalnızca eğitim ve bilgilendirme amaçlı** sağlar.  

- Point blank **finansal, yatırım, ticari veya yasal tavsiye** sağlamaz.  
- Point blank tarafından oluşturulan tüm bilgiler, tahminler ve analizler **yalnızca tahminlerdir** ve yanlış, eksik veya güncel olmayabilir.  
- Borsa yatırımları doğası gereği **riskli ve oynaktır**. Geçmiş performans gelecekteki sonuçların göstergesi değildir.  
- Kullanıcılar, Point blank içeriğine dayalı olarak alınan herhangi bir yatırım veya ticaret kararından yalnızca kendileri sorumludur.  
- Point blank'ın geliştiricileri, sahipleri, bağlı kuruluşları ve katkıda bulunanları, kullanımından doğrudan veya dolaylı olarak kaynaklanan herhangi bir finansal kayıp, hasar veya sonuçtan **sorumlu tutulamaz**.  

Point blank'ı kullanarak, bu riskleri anladığınızı ve web sitesini kendi takdiriniz ve sorumluluğunuz altında kullanmayı kabul ettiğinizi beyan edersiniz.  
Kişiselleştirilmiş finansal rehberlik için lütfen lisanslı bir finansal danışmana başvurun.""",
    "accept_disclaimer": "Sorumluluk reddini okudum ve kabul ediyorum",
    "title": "POINT.BLANK",
    "ticker_label": "Sembol",
    "period_label": "Geçmiş dönem",
    "interval_label": "Aralık",
    "indicators_label": "Göstergeleri Göster",
    "run_button": "Tümünü Çalıştır",
    "fetching_data": "Hisse senedi verileri alınıyor ve göstergeler hesaplanıyor...",
    "no_data": "Veri alınamadı. Sembolü veya ağ bağlantısını kontrol edin.",
    "price_chart": "Fiyat Grafiği & Teknik Göstergeler",
    "ai_forecasts": "Yapay Zeka Tahminleri",
    "running_models": "Tahmin modelleri çalıştırılıyor...",
    "news": "HABERLER",
    "fetching_news": "Son haberler alınıyor...",
    "no_articles": "Son makaleler bulunamadı.",
    "export_data": "Veriyi Dışa Aktar",
    "download_csv": "Ham Veriyi İndir (CSV)",
    "download_json": "Geçmiş Veriyi İndir (JSON)",
    "download_news": "Haber Verisini İndir (CSV)",
    "recent_data": "Son Geçmiş Veriler",
    "select_ticker": "Kapsamlı hisse senedi analizi, tahminler ve haberler almak için bir sembol seçin ve **'Çalıştır'** düğmesine basın!",
    "model_status": "Model Kullanılabilirlik Durumu",
    "available": "Mevcut",
    "missing": "Eksik",
    "date": "Tarih",
    "open": "Açılış",
    "high": "Yüksek",
    "low": "Düşük",
    "close": "Kapanış",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Tarihsel",
    "forecast": "Tahmin",
    "lower_bound": "Alt Sınır",
    "upper_bound": "Üst Sınır",
    "download": "İndir",
    "warning": "Uygulamayı kullanmak için lütfen sorumluluk reddini kabul edin.",
    "error_fetching": "Veri alınırken hata",
    "error_computing": "Göstergeler hesaplanırken hata",
    "error_chart": "Grafik oluşturulurken hata",
    "error_metrics": "Metrikler görüntülenirken hata",
    "error_forecasts": "Tahminler görüntülenirken hata",
    "error_news": "Haberler görüntülenirken hata",
    "error_export": "Dışa aktarma bölümü oluşturulurken hata",
    "prophet_error": "Gelişmiş Prophet hatası",
    "arima_error": "ARIMA hatası",
    "rf_error": "RandomForest hatası",
    "lstm_error": "Gelişmiş LSTM hatası",
    "no_models": "Tahmin modelleri mevcut değil. Gerekli kütüphaneleri yükleyin (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM için veri seti çok küçük. LSTM tahmini atlanıyor.",
    "lstm_warning2": "LSTM eğitimi için yeterli dizi yok. LSTM atlanıyor.",
    "language_select": "Tercih ettiğiniz dili seçin",
    "city_select": "Küre üzerinde şehrinizi seçin",
    "current_time": "Şu Anki Saat"
},
    "ar": {
    "disclaimer_title": "إخلاء المسؤولية",
    "disclaimer_text": """تقدم Point blank بيانات سوق الأسهم والتحليلات وأدوات التنبؤ **لأغراض تعليمية وإعلامية فقط**.  

- Point blank **لا** تقدم المشورة المالية أو الاستثمارية أو التجارية أو القانونية.  
- جميع المعلومات والتنبؤات والتحليلات التي تم إنشاؤها بواسطة Point blank هي **تقديرات فقط** وقد تكون غير دقيقة أو غير كاملة أو قديمة.  
- استثمارات سوق الأسهم بطبيعتها **محفوفة بالمخاطر ومتقلبة**. الأداء السابق ليس مؤشراً على النتائج المستقبلية.  
- المستخدمون وحدهم مسؤولون عن أي قرارات استثمارية أو تجارية تتخذ بناءً على محتوى Point blank.  
- لن **يُتحمل المطورون والملاك والشركات التابعة والمساهمون** في Point blank المسؤولية عن أي خسائر مالية أو أضرار أو عواقب تنشأ بشكل مباشر أو غير مباشر من استخدامه.  

باستخدام Point blank، فإنك تقر بأنك تفهم هذه المخاطر وتوافق على استخدام الموقع وفقًا لتقديرك ومسؤوليتك الخاصة.  
للحصول على التوجيه المالي الشخصي، يرجى استشارة مستشار مالي مرخص.""",
    "accept_disclaimer": "لقد قرأت إخلاء المسؤولية وأوافق عليه",
    "title": "POINT.BLANK",
    "ticker_label": "الرمز",
    "period_label": "الفترة التاريخية",
    "interval_label": "الفاصل الزمني",
    "indicators_label": "إظهار المؤشرات",
    "run_button": "تشغيل الكل",
    "fetching_data": "جلب بيانات الأسهم وحساب المؤشرات...",
    "no_data": "لم يتم استرجاع أي بيانات. تحقق من الرمز أو اتصال الشبكة.",
    "price_chart": "مخطط الأسعار والمؤشرات الفنية",
    "ai_forecasts": "تنبؤات الذكاء الاصطناعي",
    "running_models": "تشغيل نماذج التنبؤ...",
    "news": "الأخبار",
    "fetching_news": "جلب أحدث الأخبار...",
    "no_articles": "لم يتم العثور على مقالات حديثة.",
    "export_data": "تصدير البيانات",
    "download_csv": "تنزيل البيانات الأولية (CSV)",
    "download_json": "تنزيل البيانات التاريخية (JSON)",
    "download_news": "تنزيل بيانات الأخبار (CSV)",
    "recent_data": "البيانات التاريخية الحديثة",
    "select_ticker": "حدد رمزًا واضغط على **'تشغيل'** لجلب تحليل أسهم شامل مع التنبؤات والأخبار!",
    "model_status": "حالة توفر النموذج",
    "available": "متاح",
    "missing": "مفقود",
    "date": "التاريخ",
    "open": "الافتتاح",
    "high": "الأعلى",
    "low": "الأدنى",
    "close": "الإغلاق",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "تاريخي",
    "forecast": "التنبؤ",
    "lower_bound": "الحد الأدنى",
    "upper_bound": "الحد الأعلى",
    "download": "تنزيل",
    "warning": "يرجى قبول إخلاء المسؤولية لاستخدام التطبيق.",
    "error_fetching": "خطأ في جلب البيانات",
    "error_computing": "خطأ في حساب المؤشرات",
    "error_chart": "خطأ في إنشاء المخطط",
    "error_metrics": "خطأ في عرض المقاييس",
    "error_forecasts": "خطأ في عرض التنبؤات",
    "error_news": "خطأ في عرض الأخبار",
    "error_export": "خطأ في إنشاء قسم التصدير",
    "prophet_error": "خطأ Prophet المحسن",
    "arima_error": "خطأ ARIMA",
    "rf_error": "خطأ Random Forest",
    "lstm_error": "خطأ LSTM المحسن",
    "no_models": "لا توجد نماذج تنبؤ متاحة. قم بتثبيت المكتبات المطلوبة (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "مجموعة البيانات صغيرة جدًا لـ LSTM. تخطي التنبؤ LSTM.",
    "lstm_warning2": "لا توجد تسلسلات كافية لتدريب LSTM. تخطي LSTM.",
    "language_select": "اختر لغتك المفضلة",
    "city_select": "اختر مدينتك على الكرة الأرضية",
    "current_time": "الوقت الحالي"
},
    "he": {
    "disclaimer_title": "הצהרת אחריות",
    "disclaimer_text": """Point blank מספק נתוני שוק מניות, ניתוחים וכלים חיזויים **למטרות חינוכיות ומידע בלבד**.  

- Point blank **אינו** מספק ייעוץ פיננסי, השקעה, מסחר או משפטי.  
- כל המידע, התחזיות והניתוחים שנוצרו על ידי Point blank הם **הערכות בלבד** ועלולים להיות לא מדויקים, לא מלאים או לא מעודכנים.  
- השקעות בשוק המניות הן מטבען **מסוכנות ותנודתיות**. ביצועי העבר אינם מעידים על תוצאות עתידיות.  
- המשתמשים אחראים בלבד לכל החלטות השקעה או מסחר המתבססות על תוכן Point blank.  
- המפתחים, הבעלים, השותפים והתורמים של Point blank **לא יישאו באחריות** לכל הפסדים פיננסיים, נזקים או השלכות הנובעים ישירות או בעקיפין משימוש בו.  

בשימוש ב-Point blank, אתה מאשר שהבנת סיכונים אלו ומסכים להשתמש באתר לפי שיקול דעתך ואחריותך.  
לקבלת הדרכה פיננסית מותאמת אישית, אנא פנה/י ליעוץ פיננסי מורשה.""",
    "accept_disclaimer": "קראתי ואני מקבל/ת את הצהרת האחריות",
    "title": "POINT.BLANK",
    "ticker_label": "סמל",
    "period_label": "תקופה היסטורית",
    "interval_label": "מרווח",
    "indicators_label": "הצג מחוונים",
    "run_button": "הפעל הכל",
    "fetching_data": "איחזור נתוני מניות וחישוב מחוונים...",
    "no_data": "לא התקבלו נתונים. בדוק את הסמל או חיבור הרשת.",
    "price_chart": "תרשים מחירים ומחוונים טכניים",
    "ai_forecasts": "תחזיות בינה מלאכותית",
    "running_models": "הפעלת מודלי חיזוי...",
    "news": "חדשות",
    "fetching_news": "איחזור חדשות אחרונות...",
    "no_articles": "לא נמצאו מאמרים אחרונים.",
    "export_data": "ייצוא נתונים",
    "download_csv": "הורד נתונים גולמיים (CSV)",
    "download_json": "הורד נתונים היסטוריים (JSON)",
    "download_news": "הורד נתוני חדשות (CSV)",
    "recent_data": "נתונים היסטוריים אחרונים",
    "select_ticker": "בחר סמל ולחץ **'הפעל'** כדי לקבל ניתוח מניות מקיף עם תחזיות וחדשות!",
    "model_status": "סטטוס זמינות מודל",
    "available": "זמין",
    "missing": "חסר",
    "date": "תאריך",
    "open": "פתיחה",
    "high": "גבוה",
    "low": "נמוך",
    "close": "סגירה",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "היסטורי",
    "forecast": "תחזית",
    "lower_bound": "גבול תחתון",
    "upper_bound": "גבול עליון",
    "download": "הורד",
    "warning": "אנא אשר את הצהרת האחריות כדי להשתמש באפליקציה.",
    "error_fetching": "שגיאה באיחזור נתונים",
    "error_computing": "שגיאה בחישוב מחוונים",
    "error_chart": "שגיאה ביצירת תרשים",
    "error_metrics": "שגיאה בהצגת מדדים",
    "error_forecasts": "שגיאה בהצגת תחזיות",
    "error_news": "שגיאה בהצגת חדשות",
    "error_export": "שגיאה ביצירת חלקת ייצוא",
    "prophet_error": "שגיאת Prophet משופרת",
    "arima_error": "שגיאת ARIMA",
    "rf_error": "שגיאת Random Forest",
    "lstm_error": "שגיאת LSTM משופרת",
    "no_models": "אין מודלי חיזוי זמינים. התקן את הספריות הנדרשות (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "מערך נתונים קטן מדי עבור LSTM. דילוג על חיזוי LSTM.",
    "lstm_warning2": "אין מספיק רצפים לאימון LSTM. דילוג על LSTM.",
    "language_select": "בחר את השפה המועדפת עליך",
    "city_select": "בחר את העיר שלך על הגלובוס",
    "current_time": "שעה נוכחית"
},
    "ur": {
    "disclaimer_title": "ذمہ داری سے انکار",
    "disclaimer_text": """Point blank صرف **تعلیمی اور معلوماتی مقاصد** کے لئے اسٹاک مارکیٹ ڈیٹا، تجزیے اور پیش گوئی کے ٹولز مہیا کرتا ہے۔  

- Point blank **مالی، سرمایہ کاری، تجارتی یا قانونی مشورہ** فراہم نہیں کرتا۔  
- Point blank کے ذریعے تیار کردہ تمام معلومات، پیش گوئیاں اور تجزیے **صرف تخمینے ہیں** اور غلط، نامکمل یا فرسودہ ہو سکتے ہیں۔  
- اسٹاک مارکیٹ میں سرمایہ کاری فطری طور پر **خطرناک اور متغیر** ہوتی ہے۔ ماضی کی کارکردگی مستقبل کے نتائج کی نشاندہی نہیں کرتی۔  
- صارفین Point blank کے مواد کی بنیاد پر لی گئی کسی بھی سرمایہ کاری یا تجارتی فیصلے کی ذمہ داری کے خود ذمہ دار ہیں۔  
- Point blank کے ڈویلپرز، مالکان، ملحقین اور شراکت داروں کو اس کے استعمال سے براہ راست یا بالواسطہ پیدا ہونے والے کسی بھی مالی نقصان، نقصان یا نتائج کے لئے **ذمہ دار نہیں ٹھہرایا جائے گا**۔  

Point blank استعمال کرکے، آپ تسلیم کرتے ہیں کہ آپ ان خطرات کو سمجھتے ہیں اور ویب سائٹ کو اپنی صوابدید اور ذمہ داری پر استعمال کرنے سے اتفاق کرتے ہیں۔  
ذاتی مالی رہنمائی کے لئے، براہ کرم لائسنس یافتہ مالی مشیر سے مشورہ کریں۔""",
    "accept_disclaimer": "میں نے ذمہ داری سے انکار پڑھ لیا ہے اور اسے قبول کرتا ہوں",
    "title": "POINT.BLANK",
    "ticker_label": "ٹکر",
    "period_label": "تاریخی مدت",
    "interval_label": "وقفہ",
    "indicators_label": "اشاریے دکھائیں",
    "run_button": "سب چلائیں",
    "fetching_data": "اسٹاک ڈیٹا حاصل کرنا اور اشاریے کمپیوٹ کر رہا ہے...",
    "no_data": "کوئی ڈیٹا بازیافت نہیں ہوا۔ ٹکر یا نیٹ ورک کنکشن چیک کریں۔",
    "price_chart": "قیمت کا چارٹ اور تکنیکی اشاریے",
    "ai_forecasts": "مصنوعی ذہانت کی پیش گوئیاں",
    "running_models": "پیش گوئی کے ماڈل چل رہے ہیں...",
    "news": "خبریں",
    "fetching_news": "تازہ ترین خبریں حاصل کی جا رہی ہیں...",
    "no_articles": "کوئی حالیہ مضامین نہیں ملے۔",
    "export_data": "ڈیٹا برآمد کریں",
    "download_csv": "خام ڈیٹا ڈاؤن لوڈ کریں (CSV)",
    "download_json": "تاریخی ڈیٹا ڈاؤن لوڈ کریں (JSON)",
    "download_news": "خبروں کا ڈیٹا ڈاؤن لوڈ کریں (CSV)",
    "recent_data": "حالیہ تاریخی ڈیٹا",
    "select_ticker": "جامع اسٹاک تجزیہ، پیش گوئیاں اور خبریں حاصل کرنے کے لئے ایک ٹکر منتخب کریں اور **'چلائیں'** دبائیں!",
    "model_status": "ماڈل کی دستیابی کی حیثیت",
    "available": "دستیاب",
    "missing": "غائب",
    "date": "تاریخ",
    "open": "اوپن",
    "high": "ہائی",
    "low": "لو",
    "close": "کلوز",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "تاریخی",
    "forecast": "پیش گوئی",
    "lower_bound": "کم تر حد",
    "upper_bound": "بالا تر حد",
    "download": "ڈاؤن لوڈ",
    "warning": "براہ کرم ایپ استعمال کرنے کے لئے ذمہ داری سے انکار قبول کریں۔",
    "error_fetching": "ڈیٹا حاصل کرنے میں خرابی",
    "error_computing": "اشاریے کمپیوٹ کرنے میں خرابی",
    "error_chart": "چارٹ بنانے میں خرابی",
    "error_metrics": "میٹرکس دکھانے میں خرابی",
    "error_forecasts": "پیش گوئیاں دکھانے میں خرابی",
    "error_news": "خبریں دکھانے میں خرابی",
    "error_export": "ایکسپورٹ سیکشن بنانے میں خرابی",
    "prophet_error": "بہتر Prophet خرابی",
    "arima_error": "ARIMA خرابی",
    "rf_error": "RandomForest خرابی",
    "lstm_error": "بہتر LSTM خرابی",
    "no_models": "کوئی پیش گوئی کے ماڈل دستیاب نہیں ہیں۔ ضروری لائبریریز انسٹال کریں (prophet, statsmodels, sklearn, tensorflow)۔",
    "lstm_warning1": "LSTM کے لئے ڈیٹا سیٹ بہت چھوٹا ہے۔ LSTM پیش گوئی چھوڑ دی جا رہی ہے۔",
    "lstm_warning2": "LSTM ٹریننگ کے لئے کافی سیکوئنسز نہیں ہیں۔ LSTM چھوڑا جا رہا ہے۔",
    "language_select": "اپنی پسندیدہ زبان منتخب کریں",
    "city_select": "جلوب پر اپنا شہر منتخب کریں",
    "current_time": "موجودہ وقت"
},
    "hi": {
    "disclaimer_title": "अस्वीकरण",
    "disclaimer_text": """Point blank स्टॉक मार्केट डेटा, विश्लेषण और पूर्वानुमान उपकरण **केवल शैक्षिक और सूचनात्मक उद्देश्यों** के लिए प्रदान करता है।  

- Point blank **वित्तीय, निवेश, व्यापार या कानूनी सलाह** प्रदान नहीं करता है।  
- Point blank द्वारा उत्पन्न सभी जानकारी, पूर्वानुमान और विश्लेषण **केवल अनुमान हैं** और गलत, अधूरे या पुराने हो सकते हैं।  
- स्टॉक मार्केट निवेश स्वाभाविक रूप से **जोखिम भरे और अस्थिर** होते हैं। पिछला प्रदर्शन भविष्य के परिणामों का संकेतक नहीं है।  
- Point blank की सामग्री के आधार पर लिए गए किसी भी निवेश या व्यापार निर्णय के लिए उपयोगकर्ता पूरी तरह से जिम्मेदार हैं।  
- Point blank के डेवलपर्स, मालिकों, सहयोगियों और योगदानकर्ताओं को इसके उपयोग से प्रत्यक्ष या अप्रत्यक्ष रूप से उत्पन्न किसी भी वित्तीय नुकसान, क्षति या परिणामों के लिए **उत्तरदायी नहीं ठहराया जाएगा**।  

Point blank का उपयोग करके, आप स्वीकार करते हैं कि आप इन जोखिमों को समझते हैं और वेबसाइट का उपयोग अपने विवेक और जिम्मेदारी पर करने के लिए सहमत हैं।  
व्यक्तिगत वित्तीय मार्गदर्शन के लिए, कृपया एक लाइसेंस प्राप्त वित्तीय सलाहकार से परामर्श लें।""",
    "accept_disclaimer": "मैंने अस्वीकरण पढ़ लिया है और स्वीकार करता हूं",
    "title": "POINT.BLANK",
    "ticker_label": "टिकर",
    "period_label": "इतिहास अवधि",
    "interval_label": "अंतराल",
    "indicators_label": "संकेतक दिखाएं",
    "run_button": "सभी चलाएं",
    "fetching_data": "स्टॉक डेटा प्राप्त करना और संकेतक गणना कर रहा है...",
    "no_data": "कोई डेटा प्राप्त नहीं हुआ। टिकर या नेटवर्क कनेक्शन जांचें।",
    "price_chart": "मूल्य चार्ट और तकनीकी संकेतक",
    "ai_forecasts": "एआई पूर्वानुमान",
    "running_models": "पूर्वानुमान मॉडल चल रहे हैं...",
    "news": "समाचार",
    "fetching_news": "नवीनतम समाचार प्राप्त कर रहा है...",
    "no_articles": "कोई हालिया लेख नहीं मिले।",
    "export_data": "डेटा निर्यात करें",
    "download_csv": "कच्चा डेटा डाउनलोड करें (CSV)",
    "download_json": "ऐतिहासिक डेटा डाउनलोड करें (JSON)",
    "download_news": "समाचार डेटा डाउनलोड करें (CSV)",
    "recent_data": "हालिया ऐतिहासिक डेटा",
    "select_ticker": "पूर्वानुमान और समाचारों के साथ व्यापक स्टॉक विश्लेषण प्राप्त करने के लिए एक टिकर चुनें और **'चलाएं'** दबाएं!",
    "model_status": "मॉडल उपलब्धता स्थिति",
    "available": "उपलब्ध",
    "missing": "गुम",
    "date": "तारीख",
    "open": "ओपन",
    "high": "हाई",
    "low": "लो",
    "close": "क्लोज",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "ऐतिहासिक",
    "forecast": "पूर्वानुमान",
    "lower_bound": "निचली सीमा",
    "upper_bound": "ऊपरी सीमा",
    "download": "डाउनलोड",
    "warning": "कृपया ऐप का उपयोग करने के लिए अस्वीकरण स्वीकार करें।",
    "error_fetching": "डेटा प्राप्त करने में त्रुटि",
    "error_computing": "संकेतक गणना में त्रुटि",
    "error_chart": "चार्ट बनाने में त्रुटि",
    "error_metrics": "मेट्रिक्स प्रदर्शित करने में त्रुटि",
    "error_forecasts": "पूर्वानुमान प्रदर्शित करने में त्रुटि",
    "error_news": "समाचार प्रदर्शित करने में त्रुटि",
    "error_export": "निर्यात अनुभाग बनाने में त्रुटि",
    "prophet_error": "उन्नत Prophet त्रुटि",
    "arima_error": "ARIMA त्रुटि",
    "rf_error": "RandomForest त्रुटि",
    "lstm_error": "उन्नत LSTM त्रुटि",
    "no_models": "कोई पूर्वानुमान मॉडल उपलब्ध नहीं हैं। आवश्यक लाइब्रेरी इंस्टॉल करें (prophet, statsmodels, sklearn, tensorflow)।",
    "lstm_warning1": "LSTM के लिए डेटासेट बहुत छोटा है। LSTM पूर्वानुमान छोड़ा जा रहा है।",
    "lstm_warning2": "LSTM प्रशिक्षण के लिए पर्याप्त अनुक्रम नहीं हैं। LSTM छोड़ा जा रहा है।",
    "language_select": "अपनी पसंदीदा भाषा चुनें",
    "city_select": "ग्लोब पर अपना शहर चुनें",
    "current_time": "वर्तमान समय"
},
    "ne": {
    "disclaimer_title": "दायित्व अस्वीकरण",
    "disclaimer_text": """Point blank ले शेयर बजार डाटा, विश्लेषण र पूर्वानुमान उपकरणहरू **केवल शैक्षिक र सूचनात्मक उद्देश्यका लागि** प्रदान गर्दछ।  

- Point blank ले **वित्तीय, लगानी, व्यापार वा कानूनी सल्लाह** प्रदान गर्दैन।  
- Point blank द्वारा उत्पन्न सबै जानकारी, पूर्वानुमानहरू र विश्लेषणहरू **केवल अनुमानहरू हुन्** र गलत, अपूर्ण वा पुरानो हुन सक्छन्।  
- शेयर बजारमा लगानीहरू स्वाभाविक रूपमा **जोखिमपूर्ण र अस्थिर** हुन्छन्। विगतको प्रदर्शन भविष्यको नतिजाको सूचक होइन।  
- प्रयोगकर्ताहरू Point blank को सामग्रीमा आधारित कुनै पनि लगानी वा व्यापार निर्णयको लागि एकमात्र जिम्मेवार हुन्छन्।  
- Point blank का विकासकर्ताहरू, मालिकहरू, सहयोगीहरू र योगदानकर्ताहरू यसको प्रयोगबाट प्रत्यक्ष वा अप्रत्यक्ष रूपमा उत्पन्न कुनै पनि वित्तीय हानि, क्षति वा परिणामहरूको लागि **जिम्मेवार हुने छैनन्**।  

Point blank प्रयोग गरेर, तपाईं यी जोखिमहरू बुझ्नुहुन्छ भनी स्वीकार्दछ र वेबसाइटलाई आफ्नो विवेक र जिम्मेवारीमा प्रयोग गर्न सहमत हुनुहुन्छ।  
व्यक्तिगत वित्तीय मार्गदर्शनको लागि, कृपया एक इजाजतपत्र प्राप्त वित्तीय सल्लाहकारसँग परामर्श गर्नुहोस्।""",
    "accept_disclaimer": "मैले दायित्व अस्वीकरण पढे र स्वीकार गर्छु",
    "title": "POINT.BLANK",
    "ticker_label": "टिकर",
    "period_label": "इतिहास अवधि",
    "interval_label": "अन्तराल",
    "indicators_label": "संकेतक देखाउनुहोस्",
    "run_button": "सबै चलाउनुहोस्",
    "fetching_data": "शेयर डाटा प्राप्त गर्दै र संकेतकहरू गणना गर्दै...",
    "no_data": "कुनै डाटा प्राप्त भएन। टिकर वा नेटवर्क जडान जाँच गर्नुहोस्।",
    "price_chart": "मूल्य चार्ट र प्राविधिक संकेतक",
    "ai_forecasts": "एआई पूर्वानुमानहरू",
    "running_models": "पूर्वानुमान मोडेलहरू चलिरहेका छन्...",
    "news": "समाचार",
    "fetching_news": "नवीनतम समाचारहरू प्राप्त गर्दै...",
    "no_articles": "कुनै हालैका लेखहरू फेला परेनन्।",
    "export_data": "डाटा निर्यात गर्नुहोस्",
    "download_csv": "कच्चा डाटा डाउनलोड गर्नुहोस् (CSV)",
    "download_json": "ऐतिहासिक डाटा डाउनलोड गर्नुहोस् (JSON)",
    "download_news": "समाचार डाटा डाउनलोड गर्नुहोस् (CSV)",
    "recent_data": "हालको ऐतिहासिक डाटा",
    "select_ticker": "पूर्वानुमान र समाचारसहित विस्तृत शेयर विश्लेषण प्राप्त गर्न एउटा टिकर चयन गर्नुहोस् र **'चलाउनुहोस्'** थिच्नुहोस्!",
    "model_status": "मोडेल उपलब्धता स्थिति",
    "available": "उपलब्ध",
    "missing": "हराएको",
    "date": "मिति",
    "open": "खुल्ने",
    "high": "उच्च",
    "low": "निम्न",
    "close": "बन्द",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "ऐतिहासिक",
    "forecast": "पूर्वानुमान",
    "lower_bound": "तल्लो सीमा",
    "upper_bound": "माथिल्लो सीमा",
    "download": "डाउनलोड",
    "warning": "कृपया अनुप्रयोग प्रयोग गर्न दायित्व अस्वीकरण स्वीकार गर्नुहोस्।",
    "error_fetching": "डाटा प्राप्त गर्दा त्रुटि",
    "error_computing": "संकेतक गणना गर्दा त्रुटि",
    "error_chart": "चार्ट सिर्जना गर्दा त्रुटि",
    "error_metrics": "मेट्रिक्स देखाउँदा त्रुटि",
    "error_forecasts": "पूर्वानुमान देखाउँदा त्रुटि",
    "error_news": "समाचार देखाउँदा त्रुटि",
    "error_export": "निर्यात खण्ड सिर्जना गर्दा त्रुटि",
    "prophet_error": "सुधारिएको Prophet त्रुटि",
    "arima_error": "ARIMA त्रुटि",
    "rf_error": "RandomForest त्रुटि",
    "lstm_error": "सुधारिएको LSTM त्रुटि",
    "no_models": "कुनै पूर्वानुमान मोडेलहरू उपलब्ध छैनन्। आवश्यक पुस्तकालयहरू स्थापना गर्नुहोस् (prophet, statsmodels, sklearn, tensorflow)।",
    "lstm_warning1": "LSTM को लागि डाटासेट धेरै सानो छ। LSTM पूर्वानुमान छोडिदैछ।",
    "lstm_warning2": "LSTM तालिमको लागि पर्याप्त अनुक्रमहरू छैनन्। LSTM छोडिदैछ।",
    "language_select": "आफ्नो मनपर्ने भाषा चयन गर्नुहोस्",
    "city_select": "ग्लोबमा आफ्नो शहर चयन गर्नुहोस्",
    "current_time": "वर्तमान समय"
},
    "bn": {
    "disclaimer_title": "দায়িত্ব অস্বীকার",
    "disclaimer_text": """Point blank স্টক মার্কেট ডেটা, বিশ্লেষণ এবং পূর্বাভাস সরঞ্জাম **শুধুমাত্র শিক্ষামূলক এবং তথ্যমূলক উদ্দেশ্যে** প্রদান করে।  

- Point blank **আর্থিক, বিনিয়োগ, ট্রেডিং বা আইনি পরামর্শ** প্রদান করে না।  
- Point blank দ্বারা উত্পন্ন সমস্ত তথ্য, পূর্বাভাস এবং বিশ্লেষণ **শুধুমাত্র অনুমান** এবং ভুল, অসম্পূর্ণ বা পুরানো হতে পারে।  
- স্টক মার্কেট বিনিয়োগ স্বভাবতই **ঝুঁকিপূর্ণ এবং অস্থির**। অতীতের পারফরম্যান্স ভবিষ্যতের ফলাফলের ইঙ্গিত দেয় না।  
- ব্যবহারকারীরা Point blank-এর বিষয়বস্তুর উপর ভিত্তি করে নেওয়া যেকোনো বিনিয়োগ বা ট্রেডিং সিদ্ধান্তের জন্য একমাত্র দায়ী।  
- Point blank-এর ডেভেলপার, মালিক, অ্যাফিলিয়েট এবং অবদানকারীরা এর ব্যবহার থেকে সরাসরি বা পরোক্ষভাবে উদ্ভূত যেকোনো আর্থিক ক্ষতি, ক্ষতি বা পরিণতির জন্য **দায়ী হবে না**।  

Point blank ব্যবহার করে, আপনি স্বীকার করেন যে আপনি এই ঝুঁকিগুলি বুঝতে পারেন এবং ওয়েবসাইটটি আপনার নিজের বিবেচনা এবং দায়িত্বে ব্যবহার করতে সম্মত হন।  
ব্যক্তিগত আর্থিক নির্দেশনার জন্য, দয়া করে একজন লাইসেন্সপ্রাপ্ত আর্থিক উপদেষ্টার সাথে পরামর্শ করুন।""",
    "accept_disclaimer": "আমি দায়িত্ব অস্বীকার পড়েছি এবং এটি গ্রহণ করছি",
    "title": "POINT.BLANK",
    "ticker_label": "টিকার",
    "period_label": "ইতিহাস সময়কাল",
    "interval_label": "ব্যবধান",
    "indicators_label": "সূচক দেখান",
    "run_button": "সব চালান",
    "fetching_data": "স্টক ডেটা আনয়ন এবং সূচক গণনা করা হচ্ছে...",
    "no_data": "কোনো ডেটা পাওয়া যায়নি। টিকার বা নেটওয়ার্ক সংযোগ পরীক্ষা করুন।",
    "price_chart": "মূল্য চার্ট এবং প্রযুক্তিগত সূচক",
    "ai_forecasts": "এআই পূর্বাভাস",
    "running_models": "পূর্বাভাস মডেল চালানো হচ্ছে...",
    "news": "খবর",
    "fetching_news": "সর্বশেষ খবর আনয়ন করা হচ্ছে...",
    "no_articles": "কোনো সাম্প্রতিক নিবন্ধ পাওয়া যায়নি।",
    "export_data": "ডেটা রপ্তানি করুন",
    "download_csv": "কাঁচা ডেটা ডাউনলোড করুন (CSV)",
    "download_json": "ঐতিহাসিক ডেটা ডাউনলোড করুন (JSON)",
    "download_news": "খবর ডেটা ডাউনলোড করুন (CSV)",
    "recent_data": "সাম্প্রতিক ঐতিহাসিক ডেটা",
    "select_ticker": "একটি টিকার নির্বাচন করুন এবং **'চালান'** টিপুন পূর্বাভাস এবং খবর সহ বিস্তৃত স্টক বিশ্লেষণ পেতে!",
    "model_status": "মডেল প্রাপ্যতা স্থিতি",
    "available": "উপলব্ধ",
    "missing": "অনুপস্থিত",
    "date": "তারিখ",
    "open": "ওপেন",
    "high": "হাই",
    "low": "লো",
    "close": "ক্লোজ",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "ঐতিহাসিক",
    "forecast": "পূর্বাভাস",
    "lower_bound": "নিম্ন সীমা",
    "upper_bound": "উচ্চ সীমা",
    "download": "ডাউনলোড",
    "warning": "অ্যাপ ব্যবহার করতে দায়িত্ব অস্বীকার গ্রহণ করুন।",
    "error_fetching": "ডেটা আনয়নে ত্রুটি",
    "error_computing": "সূচক গণনায় ত্রুটি",
    "error_chart": "চার্ট তৈরি করতে ত্রুটি",
    "error_metrics": "মেট্রিক্স প্রদর্শনে ত্রুটি",
    "error_forecasts": "পূর্বাভাস প্রদর্শনে ত্রুটি",
    "error_news": "খবর প্রদর্শনে ত্রুটি",
    "error_export": "রপ্তানি বিভাগ তৈরি করতে ত্রুটি",
    "prophet_error": "উন্নত Prophet ত্রুটি",
    "arima_error": "ARIMA ত্রুটি",
    "rf_error": "RandomForest ত্রুটি",
    "lstm_error": "উন্নত LSTM ত্রুটি",
    "no_models": "কোনো পূর্বাভাস মডেল উপলব্ধ নেই। প্রয়োজনীয় লাইব্রেরি ইনস্টল করুন (prophet, statsmodels, sklearn, tensorflow)।",
    "lstm_warning1": "LSTM-এর জন্য ডেটাসেট খুব ছোট। LSTM পূর্বাভাস বাদ দেওয়া হচ্ছে।",
    "lstm_warning2": "LSTM প্রশিক্ষণের জন্য পর্যাপ্ত সিকোয়েন্স নেই। LSTM বাদ দেওয়া হচ্ছে।",
    "language_select": "আপনার পছন্দের ভাষা নির্বাচন করুন",
    "city_select": "গ্লোবে আপনার শহর নির্বাচন করুন",
    "current_time": "বর্তমান সময়"
},
    "si": {
    "disclaimer_title": "වගකීම් නිෂේධනය",
    "disclaimer_text": """Point blank අලෙවිසැල් වෙළඳපල දත්ත, විශ්ලේෂණ සහ පුරෝකථන මෙවලම් **අධ්‍යාපනික සහ තොරතුරු අරමුණු සඳහා පමණක්** සපයයි.  

- Point blank **මූල්‍ය, ආයෝජන, වෙළඳාම් හෝ නීතිමය උපදෙස්** සපයන්නේ නැත.  
- Point blank මගින් ජනනය කරන ලද සියලු තොරතුරු, පුරෝකථන සහ විශ්ලේෂණ **පමණක් ඇස්තමේන්තු** වන අතර ඒවා වැරදි, අසම්පූර්ණ හෝ කල් ඉකුත් විය හැක.  
- අලෙවිසැල් වෙළඳපල ආයෝජන ස්වාභාවිකවම **අන්තරායකාරී සහ අස්ථාවර** වේ. අතීත කාර්ය සාධනය අනාගත ප්‍රතිඵල සඳහා දර්ශකයක් නොවේ.  
- Point blank හි අන්තර්ගතය මත පදනම්ව ගන්නා ඕනෑම ආයෝජන හෝ වෙළඳාම් තීරණ සඳහා පරිශීලකයින් පමණක් වගකිව යුතුය.  
- Point blank හි සංවර්ධකයින්, Malikහු, අනුබද්ධ සහ දායකයින් එහි භාවිතයෙන් සෘජුව හෝ වක්‍රව ඇතිවන ඕනෑම මූල්‍ය පාඩු, හානි හෝ ප්‍රතිවිපාක සඳහා **වගකීම් නොදරනු ඇත**।  

Point blank භාවිතා කිරීමෙන්, ඔබ මෙම අවදානම් තේරුම් ගත් බව පිළිගන්නා අතර වෙබ් අඩවිය ඔබේම විවේචනයට අනුව සහ වගකීමින් භාවිතා කිරීමට එකඟ වේ.  
වෙනම මූල්‍ය මඟපෙන්වීම් සඳහා, කරුණාකර බලපත්‍රලත් මූල්‍ය උපදේශකයෙකු සම්බන්ධ කර ගන්න.""",
    "accept_disclaimer": "මම වගකීම් නිෂේධනය කියෙව්වා සහ පිළිගන්නවා",
    "title": "POINT.BLANK",
    "ticker_label": "ටිකර්",
    "period_label": "ඉතිහාස කාල සීමාව",
    "interval_label": "විරාමය",
    "indicators_label": "Indicators පෙන්වන්න",
    "run_button": "සියල්ල ධාවනය කරන්න",
    "fetching_data": "කොටස් දත්ත ලබා ගැනීම සහ දර්ශක ගණනය කිරීම...",
    "no_data": "දත්ත ලබාගත නොහැක. ටිකර් හෝ ජාල සම්බන්ධතාව පරීක්ෂා කරන්න.",
    "price_chart": "මිල ප්‍රස්තාරය සහ තාක්ෂණික දර්ශක",
    "ai_forecasts": "AI පුරෝකථන",
    "running_models": "පුරෝකථන ආකෘති ධාවනය කරමින්...",
    "news": "පුවත්",
    "fetching_news": "නවතම පුවත් ලබා ගැනීම...",
    "no_articles": "මෑත ලිපි කිසිවක් හමු නොවීය.",
    "export_data": "දත්ත නිර්යාත කරන්න",
    "download_csv": "මූලික දත්ත බාගන්න (CSV)",
    "download_json": "Historical දත්ත බාගන්න (JSON)",
    "download_news": "පුවත් දත්ත බාගන්න (CSV)",
    "recent_data": "මෑත ඓතිහාසික දත්ත",
    "select_ticker": "පුරෝකථන සහ පුවත් සමඟ සවිස්තරාත්මක කොටස් විශ්ලේෂණය ලබා ගැනීමට ටිකරයක් තෝරන්න සහ **'ධාවනය කරන්න'** ඔබන්න!",
    "model_status": "මාදිලි ලබා ගත හැකි තත්ත්වය",
    "available": "ලබා ගත හැක",
    "missing": "නැත",
    "date": "දිනය",
    "open": "විවෘත",
    "high": "ඉහළ",
    "low": "පහළ",
    "close": "වසා දමන්න",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "ඓතිහාසික",
    "forecast": "පුරෝකථනය",
    "lower_bound": "පහළ සීමාව",
    "upper_bound": "ඉහළ සීමාව",
    "download": "බාගත කරන්න",
    "warning": "යෙදුම භාවිතා කිරීමට කරුණාකර වගකීම් නිෂේධනය පිළිගන්න.",
    "error_fetching": "දත්ත ලබා ගැනීමේ දෝෂය",
    "error_computing": "දර්ශක ගණනය කිරීමේ දෝෂය",
    "error_chart": "ප්‍රස්තාරය සෑදීමේ දෝෂය",
    "error_metrics": "මෙට්‍රික්ස් පෙන්වීමේ දෝෂය",
    "error_forecasts": "පුරෝකථන පෙන්වීමේ දෝෂය",
    "error_news": "පුවත් පෙන්වීමේ දෝෂය",
    "error_export": "නිර්යාත කොටස සෑදීමේ දෝෂය",
    "prophet_error": "වැඩිදියුණු කළ Prophet දෝෂය",
    "arima_error": "ARIMA දෝෂය",
    "rf_error": "RandomForest දෝෂය",
    "lstm_error": "වැඩිදියුණු කළ LSTM දෝෂය",
    "no_models": "පුරෝකථන ආකෘති නැත. අවශ්‍ය පුස්තකාල ස්ථාපනය කරන්න (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM සඳහා දත්ත සමූහය ඉතා කුඩාය. LSTM පුරෝකථනය මඟ හරිනු ලැබේ.",
    "lstm_warning2": "LSTM පුහුණුව සඳහා ප්‍රමාණවත් අනුක්‍රම නැත. LSTM මඟ හරිනු ලැබේ.",
    "language_select": "ඔබේ කැමති භාෂාව තෝරන්න",
    "city_select": "ගෝලයේ ඔබේ නගරය තෝරන්න",
    "current_time": "වර්තමාන වේලාව"
},
    "th": {
    "disclaimer_title": "ข้อจำกัดความรับผิดชอบ",
    "disclaimer_text": """Point blank ให้ข้อมูลตลาดหุ้น การวิเคราะห์ และเครื่องมือทำนาย **เพื่อวัตถุประสงค์ทางการศึกษาและข้อมูลเท่านั้น**  

- Point blank **ไม่ได้** ให้คำแนะนำทางการเงิน การลงทุน การซื้อขาย หรือกฎหมาย  
- ข้อมูลทั้งหมด การคาดการณ์ และการวิเคราะห์ที่สร้างโดย Point blank **เป็นเพียงการประมาณการ** และอาจไม่ถูกต้อง ไม่สมบูรณ์ หรือล้าสมัย  
- การลงทุนในตลาดหุ้นโดยธรรมชาติแล้ว **มีความเสี่ยงและมีความผันผวน** ผลการดำเนินงานในอดีตไม่ได้บ่งชี้ถึงผลลัพธ์ในอนาคต  
- ผู้ใช้เป็นผู้รับผิดชอบแต่เพียงผู้เดียวในการตัดสินใจลงทุนหรือซื้อขายใด ๆ ที่ทำบนพื้นฐานของเนื้อหา Point blank  
- นักพัฒนา เจ้าของ บริษัทในเครือ และผู้มีส่วนร่วมของ Point blank **จะไม่รับผิดชอบ** ต่อการสูญเสียทางการเงิน ความเสียหาย หรือผลที่ตามมาที่เกิดจากการใช้งานทั้งทางตรงและทางอ้อม  

โดยการใช้ Point blank คุณยอมรับว่าคุณเข้าใจความเสี่ยงเหล่านี้และตกลงที่จะใช้เว็บไซต์ตามดุลยพินิจและความรับผิดชอบของคุณเอง  
สำหรับคำแนะนำทางการเงินส่วนบุคคล โปรดปรึกษาที่ปรึกษาการเงินที่มีใบอนุญาต""",
    "accept_disclaimer": "ฉันได้อ่านและยอมรับข้อจำกัดความรับผิดชอบ",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "ช่วงเวลาประวัติศาสตร์",
    "interval_label": "ช่วงเวลา",
    "indicators_label": "แสดงตัวบ่งชี้",
    "run_button": "เรียกใช้งานทั้งหมด",
    "fetching_data": "กำลังดึงข้อมูลหุ้นและคำนวณตัวบ่งชี้...",
    "no_data": "ไม่พบข้อมูล ตรวจสอบ Ticker หรือการเชื่อมต่อเครือข่าย",
    "price_chart": "แผนภูมิราคาและตัวบ่งชี้ทางเทคนิค",
    "ai_forecasts": "การคาดการณ์ AI",
    "running_models": "กำลังเรียกใช้งานโมเดลการคาดการณ์...",
    "news": "ข่าวสาร",
    "fetching_news": "กำลังดึงข่าวล่าสุด...",
    "no_articles": "ไม่พบบทความล่าสุด",
    "export_data": "ส่งออกข้อมูล",
    "download_csv": "ดาวน์โหลดข้อมูลดิบ (CSV)",
    "download_json": "ดาวน์โหลดข้อมูลประวัติศาสตร์ (JSON)",
    "download_news": "ดาวน์โหลดข้อมูลข่าวสาร (CSV)",
    "recent_data": "ข้อมูลประวัติศาสตร์ล่าสุด",
    "select_ticker": "เลือก Ticker และกด **'เรียกใช้งาน'** เพื่อรับการวิเคราะห์หุ้นแบบครอบคลุมพร้อมการคาดการณ์และข่าวสาร!",
    "model_status": "สถานะความพร้อมใช้งานของโมเดล",
    "available": "พร้อมใช้งาน",
    "missing": "ขาดหาย",
    "date": "วันที่",
    "open": "เปิด",
    "high": "สูง",
    "low": "ต่ำ",
    "close": "ปิด",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "ประวัติศาสตร์",
    "forecast": "การคาดการณ์",
    "lower_bound": "ขีดจำกัดล่าง",
    "upper_bound": "ขีดจำกัดบน",
    "download": "ดาวน์โหลด",
    "warning": "โปรดยอมรับข้อจำกัดความรับผิดชอบเพื่อใช้แอปพลิเคชัน",
    "error_fetching": "ข้อผิดพลาดในการดึงข้อมูล",
    "error_computing": "ข้อผิดพลาดในการคำนวณตัวบ่งชี้",
    "error_chart": "ข้อผิดพลาดในการสร้างแผนภูมิ",
    "error_metrics": "ข้อผิดพลาดในการแสดงเมตริก",
    "error_forecasts": "ข้อผิดพลาดในการแสดงการคาดการณ์",
    "error_news": "ข้อผิดพลาดในการแสดงข่าวสาร",
    "error_export": "ข้อผิดพลาดในการสร้างส่วนส่งออก",
    "prophet_error": "ข้อผิดพลาด Prophet ที่ได้รับการปรับปรุง",
    "arima_error": "ข้อผิดพลาด ARIMA",
    "rf_error": "ข้อผิดพลาด Random Forest",
    "lstm_error": "ข้อผิดพลาด LSTM ที่ได้รับการปรับปรุง",
    "no_models": "ไม่มีโมเดลการคาดการณ์พร้อมใช้งาน ติดตั้งไลบรารีที่ต้องการ (prophet, statsmodels, sklearn, tensorflow)",
    "lstm_warning1": "ชุดข้อมูลเล็กเกินไปสำหรับ LSTM ข้ามการคาดการณ์ LSTM",
    "lstm_warning2": "ลำดับไม่เพียงพอสำหรับการฝึก LSTM ข้าม LSTM",
    "language_select": "เลือกภาษาที่คุณต้องการ",
    "city_select": "เลือกเมืองของคุณบนโลก",
    "current_time": "เวลาปัจจุบัน"
},
    "ms": {
    "disclaimer_title": "PENOLAKAN TANGGUNGJAWAB",
    "disclaimer_text": """Point blank menyediakan data pasaran saham, analisis dan alat ramalan **hanya untuk tujuan pendidikan dan maklumat sahaja**.  

- Point blank **tidak** menyediakan nasihat kewangan, pelaburan, perdagangan atau undang-undang.  
- Semua maklumat, ramalan dan analisis yang dihasilkan oleh Point blank **hanya anggaran** dan mungkin tidak tepat, tidak lengkap atau ketinggalan zaman.  
- Pelaburan pasaran saham secara semula jadi **berisiko dan tidak menentu**. Prestasi lalu bukan petunjuk hasil masa depan.  
- Pengguna semata-mata bertanggungjawab atas sebarang keputusan pelaburan atau perdagangan yang dibuat berdasarkan kandungan Point blank.  
- Pembangun, pemilik, sekutu dan penyumbang Point blank **tidak akan bertanggungjawab** untuk sebarang kerugian kewangan, kerosakan atau akibat yang timbul secara langsung atau tidak langsung daripada penggunaannya.  

Dengan menggunakan Point blank, anda mengakui bahawa anda memahami risiko ini dan bersetuju untuk menggunakan laman web mengikut budi bicara dan tanggungjawab anda sendiri.  
Untuk panduan kewangan peribadi, sila berunding dengan penasihat kewangan berlesen.""",
    "accept_disclaimer": "Saya telah membaca dan menerima penolakan tanggungjawab",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Tempoh sejarah",
    "interval_label": "Selang",
    "indicators_label": "Tunjuk Penunjuk",
    "run_button": "Jalankan Semua",
    "fetching_data": "Mengambil data saham dan mengira penunjuk...",
    "no_data": "Tiada data diperoleh. Semak ticker atau sambungan rangkaian.",
    "price_chart": "Carta Harga & Penunjuk Teknikal",
    "ai_forecasts": "Ramalan AI",
    "running_models": "Menjalankan model ramalan...",
    "news": "BERITA",
    "fetching_news": "Mengambil berita terkini...",
    "no_articles": "Tiada artikel terkini ditemui.",
    "export_data": "Eksport Data",
    "download_csv": "Muat Turun Data Mentalah (CSV)",
    "download_json": "Muat Turun Data Sejarah (JSON)",
    "download_news": "Muat Turun Data Berita (CSV)",
    "recent_data": "Data Sejarah Terkini",
    "select_ticker": "Pilih ticker dan tekan **'Jalankan'** untuk mendapatkan analisis saham komprehensif dengan ramalan dan berita!",
    "model_status": "Status Ketersediaan Model",
    "available": "Tersedia",
    "missing": "Tiada",
    "date": "Tarikh",
    "open": "Buka",
    "high": "Tinggi",
    "low": "Rendah",
    "close": "Tutup",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Sejarah",
    "forecast": "Ramalan",
    "lower_bound": "Had Bawah",
    "upper_bound": "Had Atas",
    "download": "Muat Turun",
    "warning": "Sila terima penolakan tanggungjawab untuk menggunakan apl.",
    "error_fetching": "Ralat mengambil data",
    "error_computing": "Ralat mengira penunjuk",
    "error_chart": "Ralat mencipta carta",
    "error_metrics": "Ralat memaparkan metrik",
    "error_forecasts": "Ralat memaparkan ramalan",
    "error_news": "Ralat memaparkan berita",
    "error_export": "Ralat mencipta bahagian eksport",
    "prophet_error": "Ralat Prophet dipertingkat",
    "arima_error": "Ralat ARIMA",
    "rf_error": "Ralat Random Forest",
    "lstm_error": "Ralat LSTM dipertingkat",
    "no_models": "Tiada model ramalan tersedia. Pasang pustaka yang diperlukan (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Set data terlalu kecil untuk LSTM. Melangkau ramalan LSTM.",
    "lstm_warning2": "Tidak cukup jujukan untuk latihan LSTM. Melangkau LSTM.",
    "language_select": "Pilih bahasa pilihan anda",
    "city_select": "Pilih bandar anda di glob",
    "current_time": "Masa Semasa"
},
    "id": {
    "disclaimer_title": "PENOLAKAN TANGGUNG JAWAB",
    "disclaimer_text": """Point blank menyediakan data pasar saham, analisis, dan alat prediksi **hanya untuk tujuan pendidikan dan informasi saja**.  

- Point blank **tidak** memberikan nasihat keuangan, investasi, perdagangan, atau hukum.  
- Semua informasi, prakiraan, dan analisis yang dihasilkan oleh Point blank **hanya perkiraan** dan mungkin tidak akurat, tidak lengkap, atau kedaluwarsa.  
- Investasi pasar saham secara alami **berisiko dan volatil**. Kinerja masa lalu tidak menunjukkan hasil di masa depan.  
- Pengguna bertanggung jawab penuh atas segala keputusan investasi atau perdagangan yang dibuat berdasarkan konten Point blank.  
- Pengembang, pemilik, afiliasi, dan kontributor Point blank **tidak akan bertanggung jawab** atas kerugian keuangan, kerusakan, atau konsekuensi yang timbul secara langsung atau tidak langsung dari penggunaannya.  

Dengan menggunakan Point blank, Anda mengakui bahwa Anda memahami risiko ini dan setuju untuk menggunakan situs web atas kebijaksanaan dan tanggung jawab sendiri.  
Untuk panduan keuangan pribadi, silakan konsultasikan dengan penasihat keuangan berlisensi.""",
    "accept_disclaimer": "Saya telah membaca dan menerima penolakan tanggung jawab",
    "title": "POINT.BLANK",
    "ticker_label": "Ticker",
    "period_label": "Periode sejarah",
    "interval_label": "Interval",
    "indicators_label": "Tampilkan Indikator",
    "run_button": "Jalankan Semua",
    "fetching_data": "Mengambil data saham dan menghitung indikator...",
    "no_data": "Tidak ada data yang diambil. Periksa ticker atau koneksi jaringan.",
    "price_chart": "Bagan Harga & Indikator Teknis",
    "ai_forecasts": "Prakiraan AI",
    "running_models": "Menjalankan model peramalan...",
    "news": "BERITA",
    "fetching_news": "Mengambil berita terbaru...",
    "no_articles": "Tidak ada artikel terbaru ditemukan.",
    "export_data": "Ekspor Data",
    "download_csv": "Unduh Data Mentah (CSV)",
    "download_json": "Unduh Data Historis (JSON)",
    "download_news": "Unduh Data Berita (CSV)",
    "recent_data": "Data Historis Terbaru",
    "select_ticker": "Pilih ticker dan tekan **'Jalankan'** untuk mendapatkan analisis saham komprehensif dengan prakiraan dan berita!",
    "model_status": "Status Ketersediaan Model",
    "available": "Tersedia",
    "missing": "Hilang",
    "date": "Tanggal",
    "open": "Buka",
    "high": "Tinggi",
    "low": "Rendah",
    "close": "Tutup",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "Historis",
    "forecast": "Prakiraan",
    "lower_bound": "Batas Bawah",
    "upper_bound": "Batas Atas",
    "download": "Unduh",
    "warning": "Silakan terima penolakan tanggung jawab untuk menggunakan aplikasi.",
    "error_fetching": "Kesalahan mengambil data",
    "error_computing": "Kesalahan menghitung indikator",
    "error_chart": "Kesalahan membuat bagan",
    "error_metrics": "Kesalahan menampilkan metrik",
    "error_forecasts": "Kesalahan menampilkan prakiraan",
    "error_news": "Kesalahan menampilkan berita",
    "error_export": "Kesalahan membuat bagian ekspor",
    "prophet_error": "Kesalahan Prophet yang ditingkatkan",
    "arima_error": "Kesalahan ARIMA",
    "rf_error": "Kesalahan Random Forest",
    "lstm_error": "Kesalahan LSTM yang ditingkatkan",
    "no_models": "Tidak ada model peramalan yang tersedia. Instal pustaka yang diperlukan (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Dataset terlalu kecil untuk LSTM. Melewati peramalan LSTM.",
    "lstm_warning2": "Tidak cukup urutan untuk pelatihan LSTM. Melewati LSTM.",
    "language_select": "Pilih bahasa pilihan Anda",
    "city_select": "Pilih kota Anda di globe",
    "current_time": "Waktu Saat Ini"
},
    "zh": {
    "disclaimer_title": "免责声明",
    "disclaimer_text": """Point blank 提供股市数据、分析和预测工具**仅用于教育和信息目的**。  

- Point blank **不**提供财务、投资、交易或法律建议。  
- Point blank 生成的所有信息、预测和分析**仅为估计**，可能不准确、不完整或过时。  
- 股市投资本质上**具有风险且波动性大**。过往表现不预示未来结果。  
- 用户对基于 Point blank 内容做出的任何投资或交易决定全权负责。  
- Point blank 的开发人员、所有者、关联公司和贡献者**不对**因使用其内容直接或间接产生的任何财务损失、损害或后果承担责任。  

使用 Point blank，即表示您承认了解这些风险，并同意自行决定和责任使用本网站。  
如需个性化财务指导，请咨询持牌财务顾问。""",
    "accept_disclaimer": "我已阅读并接受免责声明",
    "title": "POINT.BLANK",
    "ticker_label": "代码",
    "period_label": "历史期间",
    "interval_label": "间隔",
    "indicators_label": "显示指标",
    "run_button": "全部运行",
    "fetching_data": "正在获取股票数据并计算指标...",
    "no_data": "未检索到数据。请检查代码或网络连接。",
    "price_chart": "价格图表和技术指标",
    "ai_forecasts": "AI预测",
    "running_models": "正在运行预测模型...",
    "news": "新闻",
    "fetching_news": "正在获取最新新闻...",
    "no_articles": "未找到近期文章。",
    "export_data": "导出数据",
    "download_csv": "下载原始数据 (CSV)",
    "download_json": "下载历史数据 (JSON)",
    "download_news": "下载新闻数据 (CSV)",
    "recent_data": "近期历史数据",
    "select_ticker": "选择一个代码并按**'运行'**以获取包含预测和新闻的全面股票分析！",
    "model_status": "模型可用性状态",
    "available": "可用",
    "missing": "缺失",
    "date": "日期",
    "open": "开盘",
    "high": "最高",
    "low": "最低",
    "close": "收盘",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "随机森林",
    "lstm": "LSTM",
    "historical": "历史",
    "forecast": "预测",
    "lower_bound": "下限",
    "upper_bound": "上限",
    "download": "下载",
    "warning": "请接受免责声明以使用应用程序。",
    "error_fetching": "获取数据时出错",
    "error_computing": "计算指标时出错",
    "error_chart": "创建图表时出错",
    "error_metrics": "显示指标时出错",
    "error_forecasts": "显示预测时出错",
    "error_news": "显示新闻时出错",
    "error_export": "创建导出部分时出错",
    "prophet_error": "增强 Prophet 错误",
    "arima_error": "ARIMA 错误",
    "rf_error": "随机森林错误",
    "lstm_error": "增强 LSTM 错误",
    "no_models": "没有可用的预测模型。安装所需的库 (prophet, statsmodels, sklearn, tensorflow)。",
    "lstm_warning1": "数据集对于 LSTM 太小。跳过 LSTM 预测。",
    "lstm_warning2": "LSTM 训练序列不足。跳过 LSTM。",
    "language_select": "选择您偏好的语言",
    "city_select": "在地球上选择您的城市",
    "current_time": "当前时间"
},
    "ja": {
    "disclaimer_title": "免責事項",
    "disclaimer_text": """Point blank は株式市場データ、分析、予測ツールを**教育および情報提供の目的のみ**で提供します。  

- Point blank は**金融、投資、取引、または法的アドバイス**を提供しません。  
- Point blank によって生成されたすべての情報、予測、分析は**単なる推定値**であり、不正確、不完全、または時代遅れである可能性があります。  
- 株式市場への投資は本質的に**リスクが高く変動が激しい**です。過去の実績は将来の結果を示すものではありません。  
- ユーザーは Point blank のコンテンツに基づいて行われた投資または取引の決定に対して単独で責任を負います。  
- Point blank の開発者、所有者、関連会社、貢献者は、その使用から直接的または間接的に生じるいかなる財務的損失、損害、結果についても**責任を負いません**。  

Point blank を使用することで、あなたはこれらのリスクを理解し、自身の裁量と責任においてウェブサイトを使用することに同意したものとみなされます。  
個別の金融ガイダンスについては、ライセンスを持つ金融アドバイザーに相談してください。""",
    "accept_disclaimer": "免責事項を読み、同意します",
    "title": "POINT.BLANK",
    "ticker_label": "ティッカー",
    "period_label": "履歴期間",
    "interval_label": "間隔",
    "indicators_label": "指標を表示",
    "run_button": "すべて実行",
    "fetching_data": "株価データを取得し、指標を計算しています...",
    "no_data": "データが取得できませんでした。ティッカーまたはネットワーク接続を確認してください。",
    "price_chart": "価格チャートとテクニカル指標",
    "ai_forecasts": "AI予測",
    "running_models": "予測モデルを実行しています...",
    "news": "ニュース",
    "fetching_news": "最新ニュースを取得しています...",
    "no_articles": "最近の記事は見つかりませんでした。",
    "export_data": "データをエクスポート",
    "download_csv": "生データをダウンロード (CSV)",
    "download_json": "履歴データをダウンロード (JSON)",
    "download_news": "ニュースデータをダウンロード (CSV)",
    "recent_data": "最近の履歴データ",
    "select_ticker": "ティッカーを選択し、**'実行'**を押して予測とニュースを含む包括的な株式分析を取得してください！",
    "model_status": "モデル可用性ステータス",
    "available": "利用可能",
    "missing": "欠落",
    "date": "日付",
    "open": "始値",
    "high": "高値",
    "low": "安値",
    "close": "終値",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "ランダムフォレスト",
    "lstm": "LSTM",
    "historical": "履歴",
    "forecast": "予測",
    "lower_bound": "下限",
    "upper_bound": "上限",
    "download": "ダウンロード",
    "warning": "アプリを使用するには免責事項をご承諾ください。",
    "error_fetching": "データ取得エラー",
    "error_computing": "指標計算エラー",
    "error_chart": "チャート作成エラー",
    "error_metrics": "メトリクス表示エラー",
    "error_forecasts": "予測表示エラー",
    "error_news": "ニュース表示エラー",
    "error_export": "エクスポートセクション作成エラー",
    "prophet_error": "拡張 Prophet エラー",
    "arima_error": "ARIMA エラー",
    "rf_error": "ランダムフォレストエラー",
    "lstm_error": "拡張 LSTM エラー",
    "no_models": "予測モデルが利用できません。必要なライブラリをインストールしてください (prophet, statsmodels, sklearn, tensorflow)。",
    "lstm_warning1": "LSTM にはデータセットが小さすぎます。LSTM 予測をスキップします。",
    "lstm_warning2": "LSTM トレーニングのシーケンスが不足しています。LSTM をスキップします。",
    "language_select": "希望の言語を選択",
    "city_select": "地球上で都市を選択",
    "current_time": "現在時刻"
},
    "ko": {
    "disclaimer_title": "면책 조항",
    "disclaimer_text": """Point blank는 주식 시장 데이터, 분석 및 예측 도구를 **교육 및 정보 제공 목적으로만** 제공합니다.  

- Point blank는 **금융, 투자, 거래 또는 법률 조언**을 제공하지 않습니다.  
- Point blank에서 생성된 모든 정보, 예측 및 분석은 **단순한 추정치**이며 부정확하거나 불완전하거나 오래된 것일 수 있습니다.  
- 주식 시장 투자는 본질적으로 **위험하고 변동성이 큽니다**. 과거 성과는 미래 결과를 나타내는 지표가 아닙니다.  
- 사용자는 Point blank 콘텐츠를 기반으로 한 모든 투자 또는 거래 결정에 대해 단독으로 책임을 집니다.  
- Point blank의 개발자, 소유자, 제휴사 및 기여자는 사용으로 인해 직간접적으로 발생하는 모든 금전적 손실, 손해 또는 결과에 대해 **책임을 지지 않습니다**.  

Point blank를 사용함으로써, 귀하는 이러한 위험을 이해하고 웹사이트를 자신의 재량과 책임 하에 사용하는 데 동의하는 것으로 간주됩니다.  
개인화된 금융 지도를 위해서는 면허를 보유한 금융 자문가와 상담하십시오.""",
    "accept_disclaimer": "면책 조항을 읽고 동의합니다",
    "title": "POINT.BLANK",
    "ticker_label": "티커",
    "period_label": "기간",
    "interval_label": "간격",
    "indicators_label": "지표 표시",
    "run_button": "모두 실행",
    "fetching_data": "주식 데이터를 가져오고 지표를 계산하는 중...",
    "no_data": "데이터를 검색하지 못했습니다. 티커 또는 네트워크 연결을 확인하세요.",
    "price_chart": "가격 차트 및 기술 지표",
    "ai_forecasts": "AI 예측",
    "running_models": "예측 모델을 실행하는 중...",
    "news": "뉴스",
    "fetching_news": "최신 뉴스를 가져오는 중...",
    "no_articles": "최근 기사를 찾을 수 없습니다.",
    "export_data": "데이터 내보내기",
    "download_csv": "원시 데이터 다운로드 (CSV)",
    "download_json": "역사적 데이터 다운로드 (JSON)",
    "download_news": "뉴스 데이터 다운로드 (CSV)",
    "recent_data": "최근 역사적 데이터",
    "select_ticker": "티커를 선택하고 **'실행'**을 눌러 예측 및 뉴스가 포함된 포괄적인 주식 분석을 받으세요!",
    "model_status": "모델 가용성 상태",
    "available": "사용 가능",
    "missing": "누락됨",
    "date": "날짜",
    "open": "시가",
    "high": "고가",
    "low": "저가",
    "close": "종가",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "랜덤 포레스트",
    "lstm": "LSTM",
    "historical": "역사적",
    "forecast": "예측",
    "lower_bound": "하한",
    "upper_bound": "상한",
    "download": "다운로드",
    "warning": "앱을 사용하려면 면책 조항을 수락하세요.",
    "error_fetching": "데이터 가져오기 오류",
    "error_computing": "지표 계산 오류",
    "error_chart": "차트 생성 오류",
    "error_metrics": "지표 표시 오류",
    "error_forecasts": "예측 표시 오류",
    "error_news": "뉴스 표시 오류",
    "error_export": "내보내기 섹션 생성 오류",
    "prophet_error": "향상된 Prophet 오류",
    "arima_error": "ARIMA 오류",
    "rf_error": "랜덤 포레스트 오류",
    "lstm_error": "향상된 LSTM 오류",
    "no_models": "사용 가능한 예측 모델이 없습니다. 필요한 라이브러리를 설치하세요 (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM에 대한 데이터 세트가 너무 작습니다. LSTM 예측을 건너뜁니다.",
    "lstm_warning2": "LSTM 훈련을 위한 충분한 시퀀스가 없습니다. LSTM을 건너뜁니다.",
    "language_select": "선호하는 언어 선택",
    "city_select": "지구본에서 도시 선택",
    "current_time": "현재 시간"
},
    "kk": {
    "disclaimer_title": "ЖАУАПКЕРШІЛІКТЕН БОСАТУ",
    "disclaimer_text": """Point blank фонд нарығы деректерін, талдауларды және болжамдық құралдарды **тек білім беру және ақпараттық мақсаттар үшін** ұсынады.  

- Point blank **қаржылық, инвестициялық, сауда-саттық немесе заңды кеңес** бермейді.  
- Point blank арқылы жасалған барлық ақпарат, болжамдар және талдаулар **тек болжамдар** болып табылады және дәл емес, толық емес немесе ескіруі мүмкін.  
- Фонд нарығына инвестициялар табиғаты бойынша **тәуекелді және тұрақсыз**. Өткен өнімділік болашақ нәтижелердің көрсеткіші емес.  
- Пайдаланушылар Point blank мазмұны негізінде қабылданған кез келген инвестициялық немесе сауда шешімдеріне толық жауапты.  
- Point blank әзірлеушілері, иелері, серіктестері және үлес қосушылары оны пайдаланудан тікелей немесе жанама түрде туындаған кез келген қаржылық шығындар, зияндар немесе салдарлар үшін **жауапты болмайды**.  

Point blank пайдалану арқылы сіз бұл тәуекелдерді түсінетініңізді мойындайсыз және веб-сайтты өз еркіңізбен және жауапкершілігіңізбен пайдалануға келісесіз.  
Жеке қаржылық нұсқаулық үшін, лицензияланған қаржы кеңесшісіне хабарласыңыз.""",
    "accept_disclaimer": "Мен жауапкершіліктен босатуды оқыдым және қабылдаймын",
    "title": "POINT.BLANK",
    "ticker_label": "Тикер",
    "period_label": "Тарихи кезең",
    "interval_label": "Аралық",
    "indicators_label": "Көрсеткіштерді көрсету",
    "run_button": "Барлығын іске қосу",
    "fetching_data": "Акция деректерін алу және көрсеткіштерді есептеу...",
    "no_data": "Деректер алынған жоқ. Тикерді немесе желі қосылымын тексеріңіз.",
    "price_chart": "Баға графигі және техникалық көрсеткіштер",
    "ai_forecasts": "Жасанды интеллект болжамдары",
    "running_models": "Болжам модельдерін іске қосу...",
    "news": "ЖАҢАЛЫҚТАР",
    "fetching_news": "Соңғы жаңалықтарды алу...",
    "no_articles": "Соңғы мақалалар табылған жоқ.",
    "export_data": "Деректерді экспорттау",
    "download_csv": "Қамтылған деректерді жүктеу (CSV)",
    "download_json": "Тарихи деректерді жүктеу (JSON)",
    "download_news": "Жаңалықтар деректерін жүктеу (CSV)",
    "recent_data": "Соңғы тарихи деректер",
    "select_ticker": "Толық акция талдауын, болжамдар мен жаңалықтарды алу үшін тикерді таңдаңыз және **'Іске қосу'** түймесін басыңыз!",
    "model_status": "Модель қолжетімділік күйі",
    "available": "Қолжетімді",
    "missing": "Жоқ",
    "date": "Күні",
    "open": "Ашылған",
    "high": "Жоғары",
    "low": "Төмен",
    "close": "Жабылған",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Кездейсоқ орман",
    "lstm": "LSTM",
    "historical": "Тарихи",
    "forecast": "Болжам",
    "lower_bound": "Төменгі шек",
    "upper_bound": "Жоғарғы шек",
    "download": "Жүктеу",
    "warning": "Қолданбаны пайдалану үшін жауапкершіліктен босатуды қабылдаңыз.",
    "error_fetching": "Деректерді алу қатесі",
    "error_computing": "Көрсеткіштерді есептеу қатесі",
    "error_chart": "График жасау қатесі",
    "error_metrics": "Метрикаларды көрсету қатесі",
    "error_forecasts": "Болжамдарды көрсету қатесі",
    "error_news": "Жаңалықтарды көрсету қатесі",
    "error_export": "Экспорт бөлімін жасау қатесі",
    "prophet_error": "Жетілдірілген Prophet қатесі",
    "arima_error": "ARIMA қатесі",
    "rf_error": "Кездейсоқ орман қатесі",
    "lstm_error": "Жетілдірілген LSTM қатесі",
    "no_models": "Болжам модельдері қолжетімді емес. Қажетті кітапханаларды орнатыңыз (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM үшін деректер жиынтығы тым кішкентай. LSTM болжамы өткізіп жіберіледі.",
    "lstm_warning2": "LSTM оқыту үшін жеткілікті тізбектер жоқ. LSTM өткізіп жіберіледі.",
    "language_select": "Өзіңіздің сүйікті тіліңізді таңдаңыз",
    "city_select": "Жер шарында өз қалаңызды таңдаңыз",
    "current_time": "Ағымдағы уақыт"
},
    "ru": {
    "disclaimer_title": "ОТКАЗ ОТ ОТВЕТСТВЕННОСТИ",
    "disclaimer_text": """Point blank предоставляет данные фондового рынка, аналитику и прогностические инструменты **только в образовательных и информационных целях**.  

- Point blank **не** предоставляет финансовые, инвестиционные, торговые или юридические консультации.  
- Вся информация, прогнозы и аналитика, созданные Point blank, **являются лишь оценками** и могут быть неточными, неполными или устаревшими.  
- Инвестиции на фондовом рынке по своей природе **рискованны и волатильны**. Прошлые результаты не являются показателем будущих результатов.  
- Пользователи несут единоличную ответственность за любые инвестиционные или торговые решения, принятые на основе контента Point blank.  
- Разработчики, владельцы, партнеры и участники Point blank **не несут ответственности** за любые финансовые потери, ущерб или последствия, возникшие прямо или косвенно от его использования.  

Используя Point blank, вы подтверждаете, что понимаете эти риски и соглашаетесь использовать сайт по своему усмотрению и на свой страх и риск.  
Для получения персональных финансовых рекомендаций обратитесь к лицензированному финансовому консультанту.""",
    "accept_disclaimer": "Я прочитал и принимаю отказ от ответственности",
    "title": "POINT.BLANK",
    "ticker_label": "Тикер",
    "period_label": "Исторический период",
    "interval_label": "Интервал",
    "indicators_label": "Показать индикаторы",
    "run_button": "Запустить все",
    "fetching_data": "Получение данных акций и вычисление индикаторов...",
    "no_data": "Данные не получены. Проверьте тикер или сетевое соединение.",
    "price_chart": "График цен и технические индикаторы",
    "ai_forecasts": "Прогнозы ИИ",
    "running_models": "Запуск моделей прогнозирования...",
    "news": "НОВОСТИ",
    "fetching_news": "Получение последних новостей...",
    "no_articles": "Последние статьи не найдены.",
    "export_data": "Экспорт данных",
    "download_csv": "Скачать исходные данные (CSV)",
    "download_json": "Скачать исторические данные (JSON)",
    "download_news": "Скачать данные новостей (CSV)",
    "recent_data": "Недавние исторические данные",
    "select_ticker": "Выберите тикер и нажмите **'Запустить'**, чтобы получить комплексный анализ акций с прогнозами и новостями!",
    "model_status": "Статус доступности моделей",
    "available": "Доступно",
    "missing": "Отсутствует",
    "date": "Дата",
    "open": "Открытие",
    "high": "Максимум",
    "low": "Минимум",
    "close": "Закрытие",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Случайный лес",
    "lstm": "LSTM",
    "historical": "Исторический",
    "forecast": "Прогноз",
    "lower_bound": "Нижняя граница",
    "upper_bound": "Верхняя граница",
    "download": "Скачать",
    "warning": "Пожалуйста, примите отказ от ответственности, чтобы использовать приложение.",
    "error_fetching": "Ошибка получения данных",
    "error_computing": "Ошибка вычисления индикаторов",
    "error_chart": "Ошибка создания графика",
    "error_metrics": "Ошибка отображения метрик",
    "error_forecasts": "Ошибка отображения прогнозов",
    "error_news": "Ошибка отображения новостей",
    "error_export": "Ошибка создания раздела экспорта",
    "prophet_error": "Улучшенная ошибка Prophet",
    "arima_error": "Ошибка ARIMA",
    "rf_error": "Ошибка случайного леса",
    "lstm_error": "Улучшенная ошибка LSTM",
    "no_models": "Нет доступных моделей прогнозирования. Установите необходимые библиотеки (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "Набор данных слишком мал для LSTM. Пропуск прогноза LSTM.",
    "lstm_warning2": "Недостаточно последовательностей для обучения LSTM. Пропуск LSTM.",
    "language_select": "Выберите предпочитаемый язык",
    "city_select": "Выберите свой город на глобусе",
    "current_time": "Текущее время"
},
    "uz": {
    "disclaimer_title": "MAS'ULIYATDAN BO'SHATISH",
    "disclaimer_text": """Point blank fond bozori ma'lumotlari, tahlillari va bashorat vositalarini **faqat ma'limiy va axborot maqsadlarida** taqdim etadi.  

- Point blank **moliyaviy, investitsion, savdo yoki yuridik maslahat** bermaydi.  
- Point blank tomonidan yaratilgan barcha ma'lumotlar, bashoratlar va tahlillar **faqat taxminlar** bo'lib, noaniq, to'liq bo'lmagan yoki eskirgan bo'lishi mumkin.  
- Fond bozoridagi investitsiyalar tabiiy jihatdan **xavfli va o'zgaruvchan**. O'tgan natijalar kelajak natijalarining ko'rsatkichi emas.  
- Foydalanuvchilar Point blank kontentiga asoslangan har qanday investitsion yoki savdo qarorlari uchun yagona javobgardir.  
- Point blank ishlab chiquvchilari, egasi, hamkorlari va hissa qo'shganlari uning foydalanishidan bevosita yoki bilvosita kelib chiqadigan har qanday moliyaviy yo'qotishlar, zararlar yoki oqibatlar uchun **javobgar bo'lmaydi**.  

Point blank-dan foydalanish orqali siz ushbu xavflarni tushunganingizni va veb-saytdan o'z ixtiyoringiz va mas'uliyatingiz bilan foydalanishga roziligingizni bildirasiz.  
Shaxsiy moliyaviy yo'riqnoma uchun, iltimos, litsenziyalangan moliyaviy maslahatchiga murojaat qiling.""",
    "accept_disclaimer": "Men mas'uliyatdan bo'shatishni o'qidim va qabul qilaman",
    "title": "POINT.BLANK",
    "ticker_label": "Tiker",
    "period_label": "Tarixiy davr",
    "interval_label": "Interval",
    "indicators_label": "Ko'rsatkichlarni ko'rsatish",
    "run_button": "Barchasini ishga tushirish",
    "fetching_data": "Aksiya ma'lumotlarini olish va ko'rsatkichlarni hisoblash...",
    "no_data": "Ma'lumot olinmadi. Tiker yoki tarmoq ulanishini tekshiring.",
    "price_chart": "Narx grafigi va texnik ko'rsatkichlar",
    "ai_forecasts": "Sun'iy intellekt bashoratlari",
    "running_models": "Bashorat modellarini ishga tushirish...",
    "news": "YANGILIKLAR",
    "fetching_news": "So'nggi yangiliklarni olish...",
    "no_articles": "So'nggi maqolalar topilmadi.",
    "export_data": "Ma'lumotlarni eksport qilish",
    "download_csv": "Xom ma'lumotlarni yuklab olish (CSV)",
    "download_json": "Tarixiy ma'lumotlarni yuklab olish (JSON)",
    "download_news": "Yangiliklar ma'lumotlarini yuklab olish (CSV)",
    "recent_data": "So'nggi tarixiy ma'lumotlar",
    "select_ticker": "Bashoratlar va yangiliklarni o'z ichiga olgan keng qamrovli aksiya tahlilini olish uchun tiker tanlang va **'Ishga tushirish'** tugmasini bosing!",
    "model_status": "Model mavjudligi holati",
    "available": "Mavjud",
    "missing": "Yo'q",
    "date": "Sana",
    "open": "Ochilish",
    "high": "Yuqori",
    "low": "Past",
    "close": "Yopilish",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Tasodifiy o'rmon",
    "lstm": "LSTM",
    "historical": "Tarixiy",
    "forecast": "Bashorat",
    "lower_bound": "Quyi chegara",
    "upper_bound": "Yuqori chegara",
    "download": "Yuklab olish",
    "warning": "Ilovadan foydalanish uchun mas'uliyatdan bo'shatishni qabul qiling.",
    "error_fetching": "Ma'lumotlarni olishda xatolik",
    "error_computing": "Ko'rsatkichlarni hisoblashda xatolik",
    "error_chart": "Grafik yaratishda xatolik",
    "error_metrics": "Metrikalarni ko'rsatishda xatolik",
    "error_forecasts": "Bashoratlarni ko'rsatishda xatolik",
    "error_news": "Yangiliklarni ko'rsatishda xatolik",
    "error_export": "Eksport bo'limini yaratishda xatolik",
    "prophet_error": "Yaxshilangan Prophet xatosi",
    "arima_error": "ARIMA xatosi",
    "rf_error": "Tasodifiy o'rmon xatosi",
    "lstm_error": "Yaxshilangan LSTM xatosi",
    "no_models": "Bashorat modellari mavjud emas. Kerakli kutubxonalarni o'rnating (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM uchun ma'lumotlar to'plami juda kichik. LSTM bashorati o'tkazib yuboriladi.",
    "lstm_warning2": "LSTM o'qitishi uchun etarli ketma-ketliklar yo'q. LSTM o'tkazib yuboriladi.",
    "language_select": "O'zingizning tilingizni tanlang",
    "city_select": "Globusda o'zingizning shahringizni tanlang",
    "current_time": "Joriy vaqt"
},
    "mn": {
    "disclaimer_title": "ХАРИУЦАЛГААС ЧӨЛӨӨЛӨХ",
    "disclaimer_text": """Point blank нь хөрөнгийн зах зээлийн мэдээлэл, шинжилгээ, урьдчилан таамаглах хэрэгслүүдийг **зөвхөн боловсролын болон мэдээллийн зорилгоор** нийлүүлдэг.  

- Point blank нь **санхүү, хөрөнгө оруулалт, арилжааны эсвэл хуулийн зөвлөгөө** өгдөггүй.  
- Point blank-ээр үйлдвэрлэгдсэн бүх мэдээлэл, урьдчилан таамаглал, шинжилгээ нь **зөвхөн тооцоолол** бөгөөд буруу, бүрэн бус эсвэл хуучирсан байж болно.  
- Хөрөнгийн зах зээлийн хөрөнгө оруулалт нь байгалийн хувьд **эрсдэлтэй, тогтворгүй** байдаг. Өмнөх гүйцэтгэл нь ирээдүйн үр дүнгийн үзүүлэлт биш юм.  
- Хэрэглэгчид Point blank-ийн агуулгад үндэслэн авсан аливаа хөрөнгө оруулалт, арилжааны шийдвэрийн хувьд дангаараа хариуцлага хүлээнэ.  
- Point blank-ийн хөгжүүлэгчид, эзэд, түншүүд болон хувь нэмэр оруулагчид түүний хэрэглээнээс шууд ба шууд бус үүсэх аливаа санхүүгийн алдагдал, хохирол, үр дагаврын хувьд **хариуцлага хүлээхгүй**.  

Point blank-ийг ашигласнаар та эдгээр эрсдэлийг ойлгож, вэбсайтыг өөрийн үзэмж, хариуцлагаар ашиглахад зөвшөөрч байна.  
Хувийн санхүүгийн зөвлөгөө авахыг хүсвэл, лицензтэй санхүүгийн зөвлөхтэй зөвлөлдөнө үү.""",
    "accept_disclaimer": "Би хариуцлагаас чөлөөлөлтийг уншиж, хүлээн зөвшөөрч байна",
    "title": "POINT.BLANK",
    "ticker_label": "Тикер",
    "period_label": "Түүхэн хугацаа",
    "interval_label": "Завсар",
    "indicators_label": "Үзүүлэлтүүдийг харуулах",
    "run_button": "Бүгдийг ажиллуулах",
    "fetching_data": "Хувьцааны мэдээлэл авах, үзүүлэлтүүдийг тооцоолох...",
    "no_data": "Мэдээлэл авагдаагүй. Тикер эсвэл сүлжээний холболтыг шалгана уу.",
    "price_chart": "Үнийн график ба Техникийн үзүүлэлтүүд",
    "ai_forecasts": "Хиймэл оюун ухааны урьдчилан таамаглал",
    "running_models": "Урьдчилан таамаглах загваруудыг ажиллуулж байна...",
    "news": "МЭДЭЭ",
    "fetching_news": "Сүүлийн үеийн мэдээлэл авах...",
    "no_articles": "Сүүлийн үеийн нийтлэл олдсонгүй.",
    "export_data": "Мэдээллийг экспортлох",
    "download_csv": "Түүхий мэдээллийг татах (CSV)",
    "download_json": "Түүхэн мэдээллийг татах (JSON)",
    "download_news": "Мэдээний мэдээллийг татах (CSV)",
    "recent_data": "Сүүлийн үеийн түүхэн мэдээлэл",
    "select_ticker": "Тикер сонгоод **'Ажиллуулах'** товчийг дарж урьдчилан таамаглал, мэдээллийг багтаасан цогц хувьцааны шинжилгээг аваарай!",
    "model_status": "Загварын бэлэн байдлын төлөв",
    "available": "Боломжтой",
    "missing": "Дутуу",
    "date": "Огноо",
    "open": "Нээлт",
    "high": "Дээд",
    "low": "Доод",
    "close": "Хаалт",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Санамсаргүй ой",
    "lstm": "LSTM",
    "historical": "Түүхэн",
    "forecast": "Урьдчилан таамаглал",
    "lower_bound": "Доод хязгаар",
    "upper_bound": "Дээд хязгаар",
    "download": "Татах",
    "warning": "Хэрэглээг ашиглахын тулд хариуцлагаас чөлөөлөлтийг хүлээн зөвшөөрнө үү.",
    "error_fetching": "Мэдээлэл авах алдаа",
    "error_computing": "Үзүүлэлтүүдийг тооцоолох алдаа",
    "error_chart": "График үүсгэх алдаа",
    "error_metrics": "Үзүүлэлтүүдийг харуулах алдаа",
    "error_forecasts": "Урьдчилан таамаглалыг харуулах алдаа",
    "error_news": "Мэдээг харуулах алдаа",
    "error_export": "Экспорт хэсгийг үүсгэх алдаа",
    "prophet_error": "Сайжруулсан Prophet алдаа",
    "arima_error": "ARIMA алдаа",
    "rf_error": "Санамсаргүй ойны алдаа",
    "lstm_error": "Сайжруулсан LSTM алдаа",
    "no_models": "Урьдчилан таамаглах загвар байхгүй. Шаардлагатай номын сангуудыг суулгана уу (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "LSTM-ийн мэдээллийн багц хэт жижиг байна. LSTM урьдчилан таамаглалыг алгасах.",
    "lstm_warning2": "LSTM сургалтанд хангалттай дараалал байхгүй. LSTM-ийг алгасах.",
    "language_select": "Өөрийн хэл сонгоно уу",
    "city_select": "Дэлхийн бөмбөрцөг дээрх хотоо сонгоно уу",
    "current_time": "Одоогийн цаг"
},
    "my": {
    "disclaimer_title": "တာဝန်ခံကြေညာချက်",
    "disclaimer_text": """Point blank သည် စတော့စျေးကွက်ဒေတာ၊ ဆန်းစစ်လေ့လာမှုများနှင့် ခန့်မှန်းရေးကိရိယာများကို **ပညာရေးနှင့် အချက်အလက်ရည်ရွယ်ချက်များအတွက်သာ** ပံ့ပိုးပေးသည်။  

- Point blank သည် **ငွေကြေး၊ ရင်းနှီးမြှုပ်နှံမှု၊ ကုန်သွယ်မှု သို့မဟုတ် ဥပဒေရေးရာအကြံဉာဏ်** မပေးပါ။  
- Point blank မှ ထုတ်လုပ်သော အချက်အလက်အားလုံး၊ ခန့်မှန်းချက်များနှင့် ဆန်းစစ်လေ့လာမှုများသည် **ခန့်မှန်းချက်များသာဖြစ်ပြီး** မတိကျ၊ မပြည့်စုံသို့မဟုတ် ခေတ်နောက်ကျနိုင်သည်။  
- စတော့စျေးကွက်ရင်းနှီးမြှုပ်နှံမှုများသည် သဘာဝအားဖြင့် **အန္တရာယ်များပြီး မတည်ငြိမ်ပါ**။ အတိတ်က စွမ်းဆောင်ရည်သည် အနာဂတ်ရလဒ်များ၏ အညွှန်းကိန်းမဟုတ်ပါ။  
- Point blank ၏ အကြောင်းအရာများအပေါ် အခြေခံ၍ ဆောင်ရွက်သော မည်သည့် ရင်းနှီးမြှုပ်နှံမှု သို့မဟုတ် ကုန်သွယ်မှုဆိုင်ရာ ဆုံးဖြတ်ချက်အတွက် အသုံးပြုသူများသာ တာဝန်ရှိသည်။  
- Point blank ၏ ဖွံ့ဖြိုးတိုးတက်ရေးဆိုင်ရာ ပညာရှင်များ၊ ပိုင်ရှင်များ၊ လွှဲပြောင်းပေးသူများနှင့် ပံ့ပိုးကူညီသူများသည် ၎င်း၏အသုံးပြုမှုမှ တိုက်ရိုက်သို့မဟုတ် သွယ်ဝိုက်၍ ဖြစ်ပေါ်လာသော မည်သည့် ငွေကြေးဆုံးရှုံးမှု၊ ပျက်စီးမှုသို့မဟုတ် နောက်ဆက်တွဲများအတွက် **တာဝန်မယူပါ**။  

Point blank ကို အသုံးပြုခြင်းဖြင့်၊ သင်သည် ဤအန္တရာယ်များကို နားလည်ကြောင်း ဝန်ခံပြီး ဝဘ်ဆိုဒ်ကို သင့်ကိုယ်ပိုင်ဆုံးဖြတ်ချက်နှင့် တာဝန်ယူမှုဖြင့် အသုံးပြုရန် သဘောတူပါသည်။  
တစ်ဦးချင်းစီအတွက် ငွေကြေးဆိုင်ရာ လမ်းညွှန်မှုအတွက်၊ လိုင်စင်ရ ငွေကြေးအကြံပေးနှင့် တိုင်ပင်ပါ။""",
    "accept_disclaimer": "ကျွန်ုပ် တာဝန်ခံကြေညာချက်ကို ဖတ်ပြီး လက်ခံပါသည်",
    "title": "POINT.BLANK",
    "ticker_label": "တစ်ကယ်",
    "period_label": "သမိုင်းကာလ",
    "interval_label": "ကြားကာလ",
    "indicators_label": "ညွှန်ကိန်းများပြရန်",
    "run_button": "အားလုံးကို လုပ်ဆောင်ရန်",
    "fetching_data": "စတော့ဒေတာရယူခြင်းနှင့် ညွှန်ကိန်းများ တွက်ချက်နေသည်...",
    "no_data": "ဒေတာရယူမရပါ။ တစ်ကယ် သို့မဟုတ် ကွန်ရက်ချိတ်ဆက်မှုကို စစ်ဆေးပါ။",
    "price_chart": "စျေးနှုန်းဇယားနှင့် နည်းပညာဆိုင်ရာ ညွှန်ကိန်းများ",
    "ai_forecasts": "AI ခန့်မှန်းချက်များ",
    "running_models": "ခန့်မှန်းချက်မော်ဒယ်များ လုပ်ဆောင်နေသည်...",
    "news": "သတင်းများ",
    "fetching_news": "နောက်ဆုံးရသတင်းများ ရယူနေသည်...",
    "no_articles": "မကြာသေးမီက ဆောင်းပါးများ မတွေ့ရပါ။",
    "export_data": "ဒေတာကို တင်ပို့ရန်",
    "download_csv": "ကုဒ်ဒေတာကို ဒေါင်းလုဒ်လုပ်ရန် (CSV)",
    "download_json": "သမိုင်းဆိုင်ရာ ဒေတာကို ဒေါင်းလုဒ်လုပ်ရန် (JSON)",
    "download_news": "သတင်းဒေတာကို ဒေါင်းလုဒ်လုပ်ရန် (CSV)",
    "recent_data": "မကြာသေးမီက သမိုင်းဆိုင်ရာ ဒေတာ",
    "select_ticker": "တစ်ကယ်တစ်ခုကို ရွေးချယ်ပြီး ခန့်မှန်းချက်များနှင့် သတင်းများပါဝင်သော စတော့ဆန်းစစ်လေ့လာမှုကို ရယူရန် **'လုပ်ဆောင်ရန်'** ကို နှိပ်ပါ!",
    "model_status": "မော်ဒယ် ရရှိနိုင်မှု အခြေအနေ",
    "available": "ရရှိနိုင်သည်",
    "missing": "ပျောက်ဆုံးနေသည်",
    "date": "ရက်စွဲ",
    "open": "ဖွင့်သည်",
    "high": "မြင့်သည်",
    "low": "နိမ့်သည်",
    "close": "ပိတ်သည်",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Random Forest",
    "lstm": "LSTM",
    "historical": "သမိုင်းဆိုင်ရာ",
    "forecast": "ခန့်မှန်းချက်",
    "lower_bound": "အောက်ခြေအတိုင်းအတာ",
    "upper_bound": "ထိပ်ဆုံးအတိုင်းအတာ",
    "download": "ဒေါင်းလုဒ်",
    "warning": "အက်ပ်ကို အသုံးပြုရန် တာဝန်ခံကြေညာချက်ကို လက်ခံပါ။",
    "error_fetching": "ဒေတာရယူရာတွင် အမှား",
    "error_computing": "ညွှန်ကိန်းများ တွက်ချက်ရာတွင် အမှား",
    "error_chart": "ဇယားဖန်တီးရာတွင် အမှား",
    "error_metrics": "မက်ထရစ်များ ပြသရာတွင် အမှား",
    "error_forecasts": "ခန့်မှန်းချက်များ ပြသရာတွင် အမှား",
    "error_news": "သတင်းများ ပြသရာတွင် အမှား",
    "error_export": "တင်ပို့ရန်ကဏ္ဍ ဖန်တီးရာတွင် အမှား",
    "prophet_error": "မြှင့်တင်ထားသော Prophet အမှား",
    "arima_error": "ARIMA အမှား",
    "rf_error": "RandomForest အမှား",
    "lstm_error": "မြှင့်တင်ထားသော LSTM အမှား",
    "no_models": "ခန့်မှန်းချက်မော်ဒယ်များ မရရှိနိုင်ပါ။ လိုအပ်သော စာကြည့်တိုက်များကို တပ်ဆင်ပါ (prophet, statsmodels, sklearn, tensorflow)။",
    "lstm_warning1": "LSTM အတွက် ဒေတာအစုံသည် အလွန်သေးငယ်သည်။ LSTM ခန့်မှန်းချက်ကို ကျော်သွားသည်။",
    "lstm_warning2": "LSTM လေ့ကျင့်ရန်အတွက် အစီအစဉ်များ မလုံလောက်ပါ။ LSTM ကို ကျော်သွားသည်။",
    "language_select": "သင့်နှစ်သက်ရာ ဘာသာစကားကို ရွေးချယ်ပါ",
    "city_select": "ကမ္ဘာလုံးပေါ်ရှိ သင့်မြို့ကို ရွေးချယ်ပါ",
    "current_time": "လက်ရှိအချိန်"
},
    "mi": {
    "disclaimer_title": "WHAKAPAPAHA",
    "disclaimer_text": """Ka whakarato a Point blank i ngā raraunga mākete hokohoko, tātaritanga me ngā taputapu matapae **mō ngā whāinga whakaako me te whakamōhio anake**.  

- **Kāore** a Point blank e whakarato i ngā tohutohu pūtea, haumitanga, hokohoko, ture rānei.  
- Ko ngā kōrero katoa, ngā matapae me ngā tātaritanga i whakaputaina e Point blank **he whakatau tata noa** ā, tērā pea he hē, kāore i te katoa, kua tawhito rānei.  
- He **tūtuki, he taurangi** te āhua o ngā haumitanga mākete hokohoko. Kāore te mahi o mua hei tohu i ngā hua o anamata.  
- Ko ngā kaiwhakamahi anake hei kawenga mō ngā whakatau haumitanga, hokohoko rānei i mahia i runga i ngā ihirangi o Point blank.  
- **Kāore** ngā kaiwhanake, ngā rangatira, ngā hononga me ngā kaiwhakauru o Point blank e kawenga mō ngā ngaro pūtea, kerēme, pānga rānei e ara ake ana, tōtika, whai pānga rānei i tōna whakamahinga.  

Mā te whakamahi i a Point blank, e whakaae ana koe kua mārama koe ki ēnei tūraru, ā, e whakaae ana koe ki te whakamahi i te paetukutuku ki tō ake whakaaro me tō kawenga.  
Mō ngā ārahitanga pūtea whaiaro, tēnā whakapā atu ki tētahi kaitohutohu pūtea whai raihana.""",
    "accept_disclaimer": "Kua pānuitia e au te whakapapaha, ā, e whakaae ana",
    "title": "POINT.BLANK",
    "ticker_label": "Tohu",
    "period_label": "Wā hītori",
    "interval_label": "Wāhi",
    "indicators_label": "Whakaatu Tohu",
    "run_button": "Whakahaere Katoa",
    "fetching_data": "Te tiki raraunga hokohoko me te tātari tohu...",
    "no_data": "Kāore he raraunga i tiki. Tirohia te tohu, te hononga whatunga rānei.",
    "price_chart": "Kauwhata Utu & Tohu Hangarau",
    "ai_forecasts": "Ngā Matapae Atamai Iahiko",
    "running_models": "Te whakahaere i ngā tauira matapae...",
    "news": "RONGOPĀ",
    "fetching_news": "Te tiki i ngā rongopā hou...",
    "no_articles": "Kāore he tuhinga hou i kitea.",
    "export_data": "Kaweake Raraunga",
    "download_csv": "Tikiake Raraunga Matua (CSV)",
    "download_json": "Tikiake Raraunga Hītori (JSON)",
    "download_news": "Tikiake Raraunga Rongopā (CSV)",
    "recent_data": "Raraunga Hītori Ināia Tonu Nei",
    "select_ticker": "Kōwhiria he tohu, pēhi i te **'Whakahaere'** kia tiki ai i te tātari hokohoko whānui me ngā matapae me ngā rongopā!",
    "model_status": "Tūnga Wātea Tauira",
    "available": "Wātea",
    "missing": "Ngaro",
    "date": "Rā",
    "open": "Huaki",
    "high": "Teitei",
    "low": "Iti",
    "close": "Katia",
    "prophet": "Prophet",
    "arima": "ARIMA",
    "random_forest": "Ngahere Tūmatanui",
    "lstm": "LSTM",
    "historical": "Hītori",
    "forecast": "Matapae",
    "lower_bound": "Tepe Hōkai",
    "upper_bound": "Tepe Runga",
    "download": "Tikiake",
    "warning": "Tēnā whakaae i te whakapapaha hei whakamahi i te taupānga.",
    "error_fetching": "Hē te tiki raraunga",
    "error_computing": "Hē te tātari tohu",
    "error_chart": "Hē te waihanga kauwhata",
    "error_metrics": "Hē te whakaatu ine",
    "error_forecasts": "Hē te whakaatu matapae",
    "error_news": "Hē te whakaatu rongopā",
    "error_export": "Hē te waihanga wāhanga kaweake",
    "prophet_error": "Hē Prophet Whakapai Ake",
    "arima_error": "Hē ARIMA",
    "rf_error": "Hē Ngahere Tūmatanui",
    "lstm_error": "Hē LSTM Whakapai Ake",
    "no_models": "Kāore he tauira matapae e wātea ana. Tāuta ngā puna kōrero e hiahiatia ana (prophet, statsmodels, sklearn, tensorflow).",
    "lstm_warning1": "He iti rawa te huinga raraunga mō te LSTM. Te ware i te matapae LSTM.",
    "lstm_warning2": "Kāore he raupapa e rite ana mō te whakangungu LSTM. Te ware i te LSTM.",
    "language_select": "Kōwhiria tō reo pai",
    "city_select": "Kōwhiria tō tāone i runga i te ao",
    "current_time": "Te Wā o nāianei"
}
}

# Language mapping for cities
city_languages = {
    "New York": {"languages": ["en", "ta"], "default": "en"},
    "Toronto": {"languages": ["en", "fr", "ta"], "default": "en"},
    "Mexico City": {"languages": ["es", "ta"], "default": "es"},
    "São Paulo": {"languages": ["pt", "ta"], "default": "pt"},
    "Buenos Aires": {"languages": ["es", "ta"], "default": "es"},
    "Santiago": {"languages": ["es", "ta"], "default": "es"},
    "Lima": {"languages": ["es", "ta"], "default": "es"},
    "Bogotá": {"languages": ["es", "ta"], "default": "es"},
    "London": {"languages": ["en", "ta"], "default": "en"},
    "Paris": {"languages": ["fr", "ta"], "default": "fr"},
    "Frankfurt": {"languages": ["de", "ta"], "default": "de"},
    "Milan": {"languages": ["it", "ta"], "default": "it"},
    "Rome": {"languages": ["it", "ta"], "default": "it"},
    "Madrid": {"languages": ["es", "ta"], "default": "es"},
    "Dublin": {"languages": ["en", "ta"], "default": "en"},
    "Athens": {"languages": ["el", "ta"], "default": "el"},
    "Helsinki": {"languages": ["fi", "sv", "ta"], "default": "fi"},
    "Warsaw": {"languages": ["pl", "ta"], "default": "pl"},
    "Istanbul": {"languages": ["tr", "ta"], "default": "tr"},
    "Cairo": {"languages": ["ar", "ta"], "default": "ar"},
    "Johannesburg": {"languages": ["en", "zu", "xh", "af", "nso", "tn", "st", "ts", "ss", "ve", "nr", "ta"], "default": "en"},
    "Nairobi": {"languages": ["en", "sw", "ta"], "default": "en"},
    "Lagos": {"languages": ["en", "ha", "yo", "ig", "ta"], "default": "en"},
    "Casablanca": {"languages": ["ar", "ber", "ta"], "default": "ar"},
    "Dubai": {"languages": ["ar", "ta"], "default": "ar"},
    "Tel Aviv": {"languages": ["he", "ar", "ta"], "default": "he"},
    "Amman": {"languages": ["ar", "ta"], "default": "ar"},
    "Karachi": {"languages": ["ur", "en", "ta"], "default": "ur"},
    "Delhi": {"languages": ["hi", "en", "ta"], "default": "hi"},
    "Kathmandu": {"languages": ["ne", "ta"], "default": "ne"},
    "Dhaka": {"languages": ["bn", "ta"], "default": "bn"},
    "Colombo": {"languages": ["si", "ta"], "default": "si"},
    "Bangkok": {"languages": ["th", "ta"], "default": "th"},
    "Singapore": {"languages": ["en", "ms", "zh", "ta"], "default": "en"},
    "Kuala Lumpur": {"languages": ["ms", "ta"], "default": "ms"},
    "Jakarta": {"languages": ["id", "ta"], "default": "id"},
    "Shanghai": {"languages": ["zh", "ta"], "default": "zh"},
    "Taipei": {"languages": ["zh", "ta"], "default": "zh"},
    "Tokyo": {"languages": ["ja", "ta"], "default": "ja"},
    "Seoul": {"languages": ["ko", "ta"], "default": "ko"},
    "Almaty": {"languages": ["kk", "ru", "ta"], "default": "kk"},
    "Tashkent": {"languages": ["uz", "ta"], "default": "uz"},
    "Ulaanbaatar": {"languages": ["mn", "ta"], "default": "mn"},
    "Yangon": {"languages": ["my", "ta"], "default": "my"},
    "Sydney": {"languages": ["en", "ta"], "default": "en"},
    "Melbourne": {"languages": ["en", "ta"], "default": "en"},
    "Auckland": {"languages": ["en", "mi", "ta"], "default": "en"},
}

# Language names for display
language_names = {
    "en": "English",
    "es": "Español",
    "fr": "Français",
    "pt": "Português",
    "ta": "தமிழ்",
    "de": "Deutsch",
    "it": "Italiano",
    "el": "Ελληνικά",
    "fi": "Suomi",
    "sv": "Svenska",
    "pl": "Polski",
    "tr": "Türkçe",
    "ar": "العربية",
    "zu": "Zulu",
    "xh": "Xhosa",
    "af": "Afrikaans",
    "nso": "Northern Sotho",
    "tn": "Tswana",
    "st": "Southern Sotho",
    "ts": "Tsonga",
    "ss": "Swati",
    "ve": "Venda",
    "nr": "Ndebele",
    "sw": "Swahili",
    "ber": "Berber",
    "he": "עברית",
    "ur": "Urdu",
    "hi": "Hindi",
    "ne": "Nepali",
    "bn": "Bengali",
    "si": "Sinhala",
    "th": "ไทย",
    "ms": "Malay",
    "id": "Indonesian",
    "zh": "中文",
    "ja": "日本語",
    "ko": "한국어",
    "kk": "Kazakh",
    "ru": "Russian",
    "uz": "Uzbek",
    "mn": "Mongolian",
    "my": "Burmese",
    "mi": "Māori"
}

# For languages without translations, copy from English
for lang_code in translations:
    if not translations[lang_code]:
        translations[lang_code] = translations["en"].copy()

# Function to get translation
def tr(key, lang="en"):
    return translations.get(lang, translations["en"]).get(key, key)

# ------------------------------
# Expanded City list with timezones (covering all major zones)
# ------------------------------
cities = [
    # Pacific & Americas
    {"city": "Honolulu", "lat": 21.3069, "lon": -157.8583, "timezone": "Pacific/Honolulu"},
    {"city": "Anchorage", "lat": 61.2181, "lon": -149.9003, "timezone": "America/Anchorage"},
    {"city": "Los Angeles", "lat": 34.0522, "lon": -118.2437, "timezone": "America/Los_Angeles"},
    {"city": "Denver", "lat": 39.7392, "lon": -104.9903, "timezone": "America/Denver"},
    {"city": "Chicago", "lat": 41.8781, "lon": -87.6298, "timezone": "America/Chicago"},
    {"city": "New York", "lat": 40.7128, "lon": -74.0060, "timezone": "America/New_York"},
    {"city": "Toronto", "lat": 43.6532, "lon": -79.3832, "timezone": "America/Toronto"},
    {"city": "Mexico City", "lat": 19.4326, "lon": -99.1332, "timezone": "America/Mexico_City"},
    {"city": "São Paulo", "lat": -23.5505, "lon": -46.6333, "timezone": "America/Sao_Paulo"},
    {"city": "Buenos Aires", "lat": -34.6037, "lon": -58.3816, "timezone": "America/Argentina/Buenos_Aires"},
    {"city": "Santiago", "lat": -33.4489, "lon": -70.6693, "timezone": "America/Santiago"},
    {"city": "Lima", "lat": -12.0464, "lon": -77.0428, "timezone": "America/Lima"},
    {"city": "Caracas", "lat": 10.4806, "lon": -66.9036, "timezone": "America/Caracas"},
    {"city": "Bogotá", "lat": 4.7110, "lon": -74.0721, "timezone": "America/Bogota"},
    {"city": "Phoenix", "lat": 33.4484, "lon": -112.0740, "timezone": "America/Phoenix"},
    {"city": "Adak", "lat": 51.8780, "lon": -176.6581, "timezone": "America/Adak"},

    # Europe & Africa
    {"city": "London", "lat": 51.5074, "lon": -0.1278, "timezone": "Europe/London"},
    {"city": "Lisbon", "lat": 38.7169, "lon": -9.1390, "timezone": "Europe/Lisbon"},
    {"city": "Paris", "lat": 48.8566, "lon": 2.3522, "timezone": "Europe/Paris"},
    {"city": "Berlin", "lat": 52.5200, "lon": 13.4050, "timezone": "Europe/Berlin"},
    {"city": "Rome", "lat": 41.9028, "lon": 12.4964, "timezone": "Europe/Rome"},
    {"city": "Madrid", "lat": 40.4168, "lon": -3.7038, "timezone": "Europe/Madrid"},
    {"city": "Dublin", "lat": 53.3331, "lon": -6.2489, "timezone": "Europe/Dublin"},
    {"city": "Athens", "lat": 37.9838, "lon": 23.7275, "timezone": "Europe/Athens"},
    {"city": "Helsinki", "lat": 60.1699, "lon": 24.9384, "timezone": "Europe/Helsinki"},
    {"city": "Warsaw", "lat": 52.2297, "lon": 21.0122, "timezone": "Europe/Warsaw"},
    {"city": "Moscow", "lat": 55.7558, "lon": 37.6173, "timezone": "Europe/Moscow"},
    {"city": "Istanbul", "lat": 41.0082, "lon": 28.9784, "timezone": "Europe/Istanbul"},
    {"city": "Cairo", "lat": 30.0444, "lon": 31.2357, "timezone": "Africa/Cairo"},
    {"city": "Johannesburg", "lat": -26.2041, "lon": 28.0473, "timezone": "Africa/Johannesburg"},
    {"city": "Nairobi", "lat": -1.2921, "lon": 36.8219, "timezone": "Africa/Nairobi"},
    {"city": "Lagos", "lat": 6.5244, "lon": 3.3792, "timezone": "Africa/Lagos"},
    {"city": "Casablanca", "lat": 33.5731, "lon": -7.5898, "timezone": "Africa/Casablanca"},

    # Middle East & Asia
    {"city": "Dubai", "lat": 25.276987, "lon": 55.296249, "timezone": "Asia/Dubai"},
    {"city": "Tehran", "lat": 35.6892, "lon": 51.3890, "timezone": "Asia/Tehran"},
    {"city": "Jerusalem", "lat": 31.7683, "lon": 35.2137, "timezone": "Asia/Jerusalem"},
    {"city": "Amman", "lat": 31.9497, "lon": 35.9323, "timezone": "Asia/Amman"},
    {"city": "Karachi", "lat": 24.8607, "lon": 67.0011, "timezone": "Asia/Karachi"},
    {"city": "Delhi", "lat": 28.6139, "lon": 77.2090, "timezone": "Asia/Kolkata"},
    {"city": "Kathmandu", "lat": 27.7172, "lon": 85.3240, "timezone": "Asia/Kathmandu"},
    {"city": "Dhaka", "lat": 23.8103, "lon": 90.4125, "timezone": "Asia/Dhaka"},
    {"city": "Colombo", "lat": 6.9271, "lon": 79.8612, "timezone": "Asia/Colombo"},
    {"city": "Bangkok", "lat": 13.7563, "lon": 100.5018, "timezone": "Asia/Bangkok"},
    {"city": "Singapore", "lat": 1.3521, "lon": 103.8198, "timezone": "Asia/Singapore"},
    {"city": "Kuala Lumpur", "lat": 3.1390, "lon": 101.6869, "timezone": "Asia/Kuala_Lumpur"},
    {"city": "Jakarta", "lat": -6.2088, "lon": 106.8456, "timezone": "Asia/Jakarta"},
    {"city": "Shanghai", "lat": 31.2304, "lon": 121.4737, "timezone": "Asia/Shanghai"},
    {"city": "Taipei", "lat": 25.0330, "lon": 121.5654, "timezone": "Asia/Taipei"},
    {"city": "Tokyo", "lat": 35.6762, "lon": 139.6503, "timezone": "Asia/Tokyo"},
    {"city": "Seoul", "lat": 37.5665, "lon": 126.9780, "timezone": "Asia/Seoul"},
    {"city": "Almaty", "lat": 43.2220, "lon": 76.8512, "timezone": "Asia/Almaty"},
    {"city": "Tashkent", "lat": 41.2995, "lon": 69.2401, "timezone": "Asia/Tashkent"},
    {"city": "Ulaanbaatar", "lat": 47.8864, "lon": 106.9057, "timezone": "Asia/Ulaanbaatar"},
    {"city": "Yangon", "lat": 16.8409, "lon": 96.1735, "timezone": "Asia/Yangon"},

    # Oceania
    {"city": "Sydney", "lat": -33.8688, "lon": 151.2093, "timezone": "Australia/Sydney"},
    {"city": "Melbourne", "lat": -37.8136, "lon": 144.9631, "timezone": "Australia/Melbourne"},
    {"city": "Brisbane", "lat": -27.4698, "lon": 153.0251, "timezone": "Australia/Brisbane"},
    {"city": "Adelaide", "lat": -34.9285, "lon": 138.6007, "timezone": "Australia/Adelaide"},
    {"city": "Perth", "lat": -31.9505, "lon": 115.8605, "timezone": "Australia/Perth"},
    {"city": "Auckland", "lat": -36.8485, "lon": 174.7633, "timezone": "Pacific/Auckland"},
    {"city": "Fiji", "lat": -18.1416, "lon": 178.4419, "timezone": "Pacific/Fiji"},
    {"city": "Noumea", "lat": -22.2763, "lon": 166.4572, "timezone": "Pacific/Noumea"},
    {"city": "Guadalcanal", "lat": -9.4456, "lon": 160.1960, "timezone": "Pacific/Guadalcanal"},
]

# ------------------------------
# Session state initialization
# ------------------------------
if "selected_city_index" not in st.session_state:
    st.session_state.selected_city_index = 0

if "accepted_disclaimer" not in st.session_state:
    st.session_state.accepted_disclaimer = False

if "user_lang" not in st.session_state:
    st.session_state.user_lang = "en"

# ------------------------------
# Prepare ScatterGeo figure
# ------------------------------
st.markdown(f"### {tr('city_select', st.session_state.user_lang)}")

lons = [c["lon"] for c in cities]
lats = [c["lat"] for c in cities]
texts = [c["city"] for c in cities]

fig = go.Figure(go.Scattergeo(
    lon=lons,
    lat=lats,
    mode="markers+text",
    text=texts,
    textposition="top center",
    marker=dict(size=7, color="red", symbol="circle")
))

fig.update_geos(
    projection_type="orthographic",
    showland=True,
    landcolor="rgb(255, 255, 255)",
    showcountries=True,
    countrycolor="black",
    showocean=True,
    oceancolor="rgb(255, 255, 255)",
    showcoastlines=True,
    coastlinecolor="black",
    showframe=False,
    showlakes=False,
    showrivers=False,
    lonaxis=dict(showgrid=True, gridcolor="lightgray", dtick=30),
    lataxis=dict(showgrid=True, gridcolor="lightgray", dtick=15),
)

fig.update_layout(
    geo=dict(projection_scale=0.6, center=dict(lat=0, lon=0)),
    margin={"r":0,"t":0,"l":0,"b":0},
    paper_bgcolor="white",
    font_color="black"
)

# Show the globe (only click selection)
clicked_points = plotly_events(fig, click_event=True, hover_event=False)

if clicked_points:
    st.session_state.selected_city_index = clicked_points[0]["pointNumber"]

selected_city = cities[st.session_state.selected_city_index]

# ------------------------------
# Language selection
# ------------------------------
city_name = selected_city["city"]
city_langs_info = city_languages.get(city_name, {"languages": ["en","ta"], "default": "en"})
available_lang_codes = list(dict.fromkeys(["en", "ta"] + city_langs_info.get("languages", [])))
default_lang = city_langs_info.get("default", "en")

lang_options = [(code, language_names.get(code, code)) for code in available_lang_codes]
select_display = [f"{code} — {language_names.get(code, code)}" for code in available_lang_codes]

st.markdown(f"### {tr('language_select', st.session_state.user_lang)}")
chosen_display = st.selectbox("", options=select_display, index=available_lang_codes.index(st.session_state.user_lang))
chosen_code = chosen_display.split(" — ")[0].strip()
if chosen_code != st.session_state.user_lang:
    st.session_state.user_lang = chosen_code

# ------------------------------
# Digital live clock
# ------------------------------
tz = pytz.timezone(selected_city["timezone"])
current_time = datetime.now(tz).strftime("%I:%M:%S %p")

st.markdown(
    f"""
    <div style="font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Helvetica Neue', Arial, sans-serif;
                font-size: 36px; font-weight: 600; color: white;">
        {tr('current_time', st.session_state.user_lang)} — {selected_city['city']}: {current_time}
    </div>
    """,
    unsafe_allow_html=True
)

# --------------------------
# Disclaimer Gate
# --------------------------
st.markdown("---")
st.markdown(f"## {tr('disclaimer_title', st.session_state.user_lang)}")
st.markdown(tr('disclaimer_text', st.session_state.user_lang), unsafe_allow_html=True)

accept = st.checkbox(tr('accept_disclaimer', st.session_state.user_lang))
if accept:
    st.session_state.accepted_disclaimer = True
else:
    st.session_state.accepted_disclaimer = False
    st.warning(tr('warning', st.session_state.user_lang))
    st.stop()

# --------------------------
# Streamlit page config + CSS
# --------------------------
st.set_page_config(page_title=tr("title", st.session_state.user_lang), layout="wide")

st.markdown("""
<style>
:root {
    --bg: #000000;
    --card: #1C1C1E;
    --muted: #8E8E93;
    --accent: #0A84FF;
    --border: #38383A;
    --text: #FFFFFF;
    --secondary-text: #EBEBF599;
}

body, .stApp {
    background-color: var(--bg);
    color: var(--text);
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Helvetica Neue', sans-serif;
}

.block-container {
    padding-top: 1rem;
    max-width: 1150px;
    margin-left: auto;
    margin-right: auto;
}

.stButton>button {
    background-color: var(--card);
    color: var(--text);
    border-radius: 12px;
    border: 1px solid var(--border);
    padding: 0.55em 1em;
    font-weight: 500;
    transition: all 0.2s ease;
}

.stButton>button:hover {
    background-color: var(--accent);
    color: var(--bg);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(10, 132, 255, 0.3);
}

/* Enhanced Dropdown Styles */
.stSelectbox>div>div {
    background-color: var(--card) !important;
    color: var(--text) !important;
    border-radius: 12px !important;
    border: 1px solid var(--border) !important;
    padding: 0.5rem !important;
    transition: all 0.2s ease;
    min-height: 44px;
    display: flex;
    align-items: center;
}

.stSelectbox>div>div:hover {
    border-color: var(--accent) !important;
    box-shadow: 0 0 0 1px var(--accent);
}

.stSelectbox>div>div:focus-within {
    border-color: var(--accent) !important;
    box-shadow: 0 0 0 2px rgba(10, 132, 255, 0.3);
}

.stSelectbox>div>div>div {
    color: var(--text) !important;
    font-weight: 500;
}

/* Dropdown options container */
div[data-baseweb="popover"] {
    border-radius: 12px !important;
    overflow: hidden;
}

div[data-baseweb="menu"] {
    background-color: var(--card) !important;
    border: 1px solid var(--border) !important;
    border-radius: 12px !important;
    margin-top: 4px;
}

/* Dropdown options */
div[data-baseweb="menu"] li {
    background-color: var(--card) !important;
    color: var(--text) !important;
    padding: 12px 16px !important;
    border-bottom: 1px solid var(--border);
    transition: all 0.2s ease;
    font-weight: 500;
}

div[data-baseweb="menu"] li:hover {
    background-color: var(--accent) !important;
    color: var(--bg) !important;
}

div[data-baseweb="menu"] li:last-child {
    border-bottom: none;
}

/* Checkbox styling */
.stCheckbox>label {
    color: var(--text) !important;
    font-weight: 500;
}

.stCheckbox>div>div {
    background-color: var(--card);
    border: 1px solid var(--border);
    border-radius: 6px;
}

.stCheckbox>div>div:hover {
    border-color: var(--accent);
}

.stTextInput>div>div>input, .stSlider>div>div {
    background-color: var(--card);
    color: var(--text);
    border-radius: 10px;
    border: 1px solid var(--border);
    padding: 0.5rem;
}

.stCheckbox>div, .stRadio>div {
    color: var(--text);
}

h1, h2, h3, h4 {
    color: var(--text);
    text-align: center;
    font-weight: 600;
}

.model-availability {
    background-color: var(--card);
    padding: 12px;
    border-radius: 12px;
    border: 1px solid var(--border);
}

.news-list {
    margin-top: 12px;
}

a.card-link {
    text-decoration: none;
    color: inherit;
    display: block;
}

.news-card {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: 14px;
    padding: 16px;
    margin-bottom: 12px;
    display: flex;
    gap: 16px;
    align-items: flex-start;
    transition: all 0.2s ease;
}

.news-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(0,0,0,0.3);
}

.news-img {
    width: 100px;
    height: 70px;
    object-fit: cover;
    border-radius: 8px;
    flex-shrink: 0;
    background: #2C2C2E;
}

.news-content {
    flex: 1;
    min-width: 0;
}

.news-title {
    font-weight: 600;
    color: var(--text);
    font-size: 16px;
    line-height: 1.4;
    margin-bottom: 6px;
    overflow-wrap: anywhere;
}

.news-meta {
    font-size: 13px;
    color: var(--muted);
}

.empty {
    color: var(--muted);
    padding: 16px;
    border-radius: 12px;
    background: var(--card);
    border: 1px solid var(--border);
    text-align: center;
}

[data-testid="stMetric"] {
    background-color: var(--card);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 16px;
}

[data-testid="stMetricLabel"] {
    color: var(--muted);
    font-size: 14px;
}

[data-testid="stMetricValue"] {
    color: var(--text);
    font-size: 24px;
    font-weight: 600;
}

.streamlit-expanderHeader {
    background-color: var(--card);
    border-radius: 10px;
    border: 1px solid var(--border);
    font-weight: 600;
}

.streamlit-expanderContent {
    background-color: var(--card);
    border-radius: 0 0 10px 10px;
    border: 1px solid var(--border);
    border-top: none;
}

/* Custom scrollbar for dropdown */
div[data-baseweb="menu"] ul {
    scrollbar-width: thin;
    scrollbar-color: var(--accent) var(--border);
}

div[data-baseweb="menu"] ul::-webkit-scrollbar {
    width: 6px;
}

div[data-baseweb="menu"] ul::-webkit-scrollbar-track {
    background: var(--border);
    border-radius: 3px;
}

div[data-baseweb="menu"] ul::-webkit-scrollbar-thumb {
    background: var(--accent);
    border-radius: 3px;
}

div[data-baseweb="menu"] ul::-webkit-scrollbar-thumb:hover {
    background: #007AFF;
}
</style>
""", unsafe_allow_html=True)

# --------------------------
# Data fetching and processing functions
# --------------------------
@st.cache_data(ttl=300)
def fetch_yahoo_data(ticker: str, period="6mo", interval="1d", max_retries=3) -> pd.DataFrame:
    """
    Fetch historical market data from Yahoo Finance with retry logic and error handling.
    
    Args:
        ticker: Stock symbol to fetch data for
        period: Time period to fetch (1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max)
        interval: Data interval (1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo, 3mo)
        max_retries: Maximum number of retry attempts
    
    Returns:
        pd.DataFrame: DataFrame containing the historical data or empty DataFrame on failure
    """
    import time
    from requests.exceptions import RequestException
    
    # Clean the ticker symbol (in case it's in the "SYMBOL — Description" format)
    m = re.match(r"^([A-Za-z0-9\-\._=]+)", ticker or "")
    clean_ticker = m.group(1) if m else ticker
    
    if not clean_ticker:
        st.error("No ticker symbol provided")
        return pd.DataFrame()
    
    # Set user agent to prevent rate limiting
    # Note: pdr_override() is not available in current yfinance versions
    
    for attempt in range(max_retries):
        try:
            # Create Ticker object
            t = yf.Ticker(clean_ticker)
            
            # Fetch data with timeout
            df = t.history(period=period, interval=interval)
            
            # Validate data
            if df is None or df.empty:
                if attempt < max_retries - 1:
                    st.warning(f"Attempt {attempt + 1} failed for {clean_ticker}. Retrying...")
                    time.sleep(2 ** attempt)  # Exponential backoff
                    continue
                st.error(f"❌ No data returned for {clean_ticker} after {max_retries} attempts.")
                st.info(" **Troubleshooting tips:**")
                st.info("• Check if the ticker symbol is correct (e.g., AAPL, TSLA, BTC-USD)")
                st.info("• Try different ticker formats (e.g., .TO for Canadian stocks)")
                st.info("• Verify the ticker exists on Yahoo Finance")
                st.info("• Check your internet connection")
                return pd.DataFrame()
            
            # Reset index and clean up
            df = df.reset_index()
            
            # Handle date column
            if 'Date' in df.columns:
                df['Date'] = pd.to_datetime(df['Date'])
                try:
                    if df['Date'].dt.tz is not None:
                        df['Date'] = df['Date'].dt.tz_convert(None)
                except Exception:
                    try:
                        df['Date'] = df['Date'].dt.tz_localize(None)
                    except Exception:
                        pass
            
            # Convert numeric columns
            numeric_cols = ['Open', 'High', 'Low', 'Close', 'Volume', 'Dividends', 'Stock Splits']
            for col in numeric_cols:
                if col in df.columns:
                    df[col] = pd.to_numeric(df[col], errors='coerce')
            
            # Ensure we have required columns
            required_cols = ['Date', 'Close']
            if not all(col in df.columns for col in required_cols):
                if attempt < max_retries - 1:
                    time.sleep(2 ** attempt)
                    continue
                st.error(f"Incomplete data received for {clean_ticker}")
                return pd.DataFrame()
            
            # Clean and return data
            df = df.dropna(subset=['Date', 'Close']).reset_index(drop=True)
            
            if df.empty:
                st.warning(f"No valid data points for {clean_ticker} after cleaning")
                return pd.DataFrame()
                
            return df
            
        except RequestException as e:
            if attempt == max_retries - 1:
                st.error(f"🌐 Network error while fetching data for {clean_ticker}")
                st.error(f"Error details: {str(e)}")
                st.info(" **Network troubleshooting:**")
                st.info("• Check your internet connection")
                st.info("• Try again in a few moments")
                st.info("• The Yahoo Finance API might be temporarily unavailable")
                return pd.DataFrame()
            st.warning(f"Network error on attempt {attempt + 1}. Retrying...")
            time.sleep(2 ** attempt)
            
        except Exception as e:
            if attempt == max_retries - 1:
                st.error(f"❌ Unexpected error while fetching data for {clean_ticker}")
                st.error(f"Error details: {str(e)}")
                st.info(" **Please try:**")
                st.info("• Verifying the ticker symbol is correct")
                st.info("• Using a different ticker format")
                st.info("• Refreshing the page and trying again")
                return pd.DataFrame()
            st.warning(f"Error on attempt {attempt + 1}. Retrying...")
            time.sleep(2 ** attempt)
    
    return pd.DataFrame()

def compute_indicators(df: pd.DataFrame) -> pd.DataFrame:
    df = df.copy().reset_index(drop=True)
    df['MA20'] = df['Close'].rolling(20).mean()
    df['MA50'] = df['Close'].rolling(50).mean()
    df['EMA12'] = df['Close'].ewm(span=12, adjust=False).mean()
    df['EMA26'] = df['Close'].ewm(span=26, adjust=False).mean()
    df['MACD'] = df['EMA12'] - df['EMA26']
    df['Signal'] = df['MACD'].ewm(span=9, adjust=False).mean()
    df['BB_MID'] = df['Close'].rolling(20).mean()
    df['BB_STD'] = df['Close'].rolling(20).std(ddof=0).fillna(0)
    df['BB_UP'] = df['BB_MID'] + 2*df['BB_STD']
    df['BB_LOW'] = df['BB_MID'] - 2*df['BB_STD']
    delta = df['Close'].diff()
    up = delta.clip(lower=0)
    down = -delta.clip(upper=0)
    roll_up = up.rolling(14).mean()
    roll_down = down.rolling(14).mean()
    rs = roll_up / (roll_down + 1e-8)
    df['RSI'] = 100 - (100 / (1 + rs))
    df['RSI'] = df['RSI'].clip(0,100).fillna(50)
    return df

def plot_advanced(df: pd.DataFrame, title: str, show_indicators: bool = True):
    fig = make_subplots(rows=3, cols=1, shared_xaxes=True,
                        row_heights=[0.6,0.18,0.22],
                        vertical_spacing=0.03)
    fig.add_trace(go.Candlestick(x=df['Date'], open=df['Open'], high=df['High'],
                                 low=df['Low'], close=df['Close'], name='Price'), row=1, col=1)
    if show_indicators:
        fig.add_trace(go.Scatter(x=df['Date'], y=df['MA20'], name='MA20', line=dict(width=1.4)), row=1, col=1)
        fig.add_trace(go.Scatter(x=df['Date'], y=df['MA50'], name='MA50', line=dict(width=1.4, dash='dash')), row=1, col=1)
        fig.add_trace(go.Scatter(x=df['Date'], y=df['BB_UP'], name='BB_UP', line=dict(width=1, dash='dot')), row=1, col=1)
        fig.add_trace(go.Scatter(x=df['Date'], y=df['BB_LOW'], name='BB_LOW', line=dict(width=1, dash='dot')), row=1, col=1)
    fig.add_trace(go.Bar(x=df['Date'], y=df['Volume'], name='Volume', marker_color='gray', opacity=0.3), row=2, col=1)
    fig.add_trace(go.Scatter(x=df['Date'], y=df['RSI'], name='RSI', line=dict(width=1.2)), row=3, col=1)
    fig.add_hline(y=70, line_dash='dot', row=3, col=1)
    fig.add_hline(y=30, line_dash='dot', row=3, col=1)
    fig.update_layout(template='plotly_dark', title=title,
                      margin=dict(l=20,r=20,t=40,b=10),
                      paper_bgcolor='#000000', plot_bgcolor='#000000',
                      legend=dict(orientation='h', yanchor='bottom', y=1.02, xanchor='right', x=1))
    st.plotly_chart(fig, use_container_width=True, theme=None)

# --------------------------
# Currency formatting function
# --------------------------
def format_currency(value, currency_code="USD"):
    """Format currency values based on currency code"""
    if pd.isna(value):
        return "N/A"
    
    try:
        # For major currencies, use appropriate symbols
        if currency_code == "USD":
            return f"${value:,.2f}"
        elif currency_code == "EUR":
            return f"€{value:,.2f}"
        elif currency_code == "GBP":
            return f"£{value:,.2f}"
        elif currency_code == "JPY":
            return f"¥{value:,.0f}"
        elif currency_code == "CNY":
            return f"¥{value:,.2f}"
        elif currency_code == "INR":
            return f"₹{value:,.2f}"
        elif currency_code == "CAD":
            return f"C${value:,.2f}"
        elif currency_code == "AUD":
            return f"A${value:,.2f}"
        elif currency_code == "CHF":
            return f"CHF {value:,.2f}"
        elif currency_code == "BTC" or currency_code == "ETH":
            return f"{value:,.6f}"
        else:
            # For other currencies, use code + value
            return f"{currency_code} {value:,.2f}"
    except:
        return f"{value:,.2f}"

# --------------------------
# Get currency information
# --------------------------
@st.cache_data(ttl=3600)
def get_currency_info(ticker: str):
    """Get currency information for a ticker"""
    try:
        info = yf.Ticker(ticker).info
        currency = info.get("currency", "USD")
        market = info.get("market", "us_market")
        return currency, market
    except:
        return "USD", "us_market"

# --------------------------
# Forecasting Models
# --------------------------
def forecast_all(df: pd.DataFrame, periods: int = 30):
    forecasts = {}

    # ==============================
    # Enhanced Prophet
    # ==============================
    if HAS_PROPHET:
        try:
            prophet_df = df[['Date', 'Close']].rename(columns={'Date': 'ds', 'Close': 'y'}).copy()
            prophet_df['ds'] = pd.to_datetime(prophet_df['ds']).dt.tz_localize(None)

            # Dynamic changepoint scale (more flexible if volatile)
            vol = prophet_df['y'].pct_change().std()
            changepoint_scale = 0.05 if vol < 0.02 else 0.2

            m = Prophet(
                growth='linear',
                daily_seasonality=True,
                weekly_seasonality=True,
                yearly_seasonality=True,
                seasonality_mode='multiplicative',
                changepoint_prior_scale=changepoint_scale,
                seasonality_prior_scale=15.0,
                holidays_prior_scale=15.0,
                interval_width=0.95,
                uncertainty_samples=1000
            )

            # Add custom seasonalities
            m.add_seasonality(name='monthly', period=30.5, fourier_order=8)
            m.add_seasonality(name='quarterly', period=91.25, fourier_order=10)

            # Add known regressors
            for col in ['Volume', 'RSI', 'MACD', 'MA20', 'MA50']:
                if col in df.columns:
                    prophet_df[col.lower()] = df[col].fillna(df[col].mean())
                    m.add_regressor(col.lower())

            m.fit(prophet_df)

            # Future DataFrame
            future = m.make_future_dataframe(periods=periods, freq='D')
            future['ds'] = pd.to_datetime(future['ds']).dt.tz_localize(None)

            for col in ['volume', 'rsi', 'macd', 'ma20', 'ma50']:
                if col in prophet_df.columns:
                    last_val = prophet_df[col].iloc[-1]
                    future[col] = last_val

            forecast = m.predict(future)
            fc = forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].rename(columns={'ds': 'Date'})
            forecasts['Prophet'] = fc

        except Exception as e:
            st.error(f"{tr('prophet_error', st.session_state.user_lang)}: {e}")

    # ==============================
    # ARIMA Forecast
    # ==============================
    if HAS_ARIMA:
        try:
            series = df.set_index('Date')['Close'].sort_index()
            series.index = pd.to_datetime(series.index).tz_localize(None)

            # Fill missing dates
            daily_idx = pd.date_range(series.index.min(), series.index.max(), freq='D')
            series = series.reindex(daily_idx).ffill().bfill()  # forward & backward fill

            # Automatic order selection if dataset is large enough
            try:
                # Use simple ARIMA if dataset is small
                order = (5, 1, 0) if len(series) < 500 else None
                if order is None:
                    import pmdarima as pm
                    model = pm.auto_arima(series, seasonal=False, stepwise=True, suppress_warnings=True, max_p=10, max_q=10)
                    order = model.order
            except Exception:
                order = (5, 1, 0)  # fallback

            model = ARIMA(series, order=order).fit()
            fc = model.forecast(steps=periods)
            dates = pd.date_range(start=series.index[-1] + timedelta(days=1), periods=periods)
            forecasts['ARIMA'] = pd.DataFrame({'Date': dates, 'yhat': fc.values})

        except Exception as e:
            st.error(f"{tr('arima_error', st.session_state.user_lang)}: {e}")

    # ==============================
    # RandomForest Forecast
    # ==============================
    if HAS_SKLEARN:
        try:
            data = df[['Close']].copy()
            n_lags = min(10, len(data)//2)  # dynamic lag selection for small datasets

            for lag in range(1, n_lags+1):
                data[f'lag_{lag}'] = data['Close'].shift(lag)
            data = data.dropna()

            X = data[[f'lag_{i}' for i in range(1, n_lags+1)]].values
            y = data['Close'].values

            model = RandomForestRegressor(n_estimators=500, max_depth=None, random_state=42, n_jobs=-1)
            model.fit(X, y)

            # Iterative multi-step forecast
            last_window = X[-1].tolist()
            preds = []
            for _ in range(periods):
                p = float(model.predict([last_window]))
                preds.append(p)
                last_window = [p] + last_window[:-1]

            dates = pd.date_range(start=df['Date'].iloc[-1] + timedelta(days=1), periods=periods)
            forecasts['RandomForest'] = pd.DataFrame({'Date': dates, 'yhat': preds})

        except Exception as e:
            st.error(f"{tr('rf_error', st.session_state.user_lang)}: {e}")

    # ==============================
    # Enhanced LSTM
    # ==============================
    if HAS_TF and HAS_SKLEARN:
        try:
            features_df = df.copy()
            feature_cols = ['Close', 'Volume', 'High', 'Low', 'Open']
            extra_cols = ['RSI', 'MACD', 'MA20', 'MA50']
            feature_cols.extend([c for c in extra_cols if c in df.columns])

            feature_data = features_df[feature_cols].fillna(method='ffill').fillna(method='bfill')

            scaler = MinMaxScaler()
            scaled_data = scaler.fit_transform(feature_data)

            # Adjust sequence length for small datasets
            default_sequence_length = 60
            sequence_length = min(default_sequence_length, len(scaled_data) // 2)
            if sequence_length < 10:
                st.warning(tr('lstm_warning1', st.session_state.user_lang))
                forecasts['LSTM'] = None
            else:
                X_sequences, y_sequences = [], []

                for i in range(sequence_length, len(scaled_data)):
                    X_sequences.append(scaled_data[i - sequence_length:i])
                    y_sequences.append(scaled_data[i, 0])  # Close price

                X_sequences, y_sequences = np.array(X_sequences), np.array(y_sequences)

                # Skip if still too few sequences
                if len(X_sequences) < 50:
                    st.warning(tr('lstm_warning2', st.session_state.user_lang))
                    forecasts['LSTM'] = None
                else:
                    # Train-test split
                    train_size = int(len(X_sequences) * 0.8)
                    X_train, X_test = X_sequences[:train_size], X_sequences[train_size:]
                    y_train, y_test = y_sequences[:train_size], y_sequences[train_size:]

                    tf.keras.backend.clear_session()

                    model = Sequential([
                        LSTM(128, return_sequences=True, input_shape=(sequence_length, len(feature_cols))),
                        Dropout(0.3),
                        BatchNormalization(),

                        Bidirectional(LSTM(64, return_sequences=True)),
                        Dropout(0.3),
                        BatchNormalization(),

                        LSTM(32, return_sequences=False),
                        Dropout(0.2),

                        Dense(64, activation='relu'),
                        Dense(32, activation='relu'),
                        Dense(1, activation='linear')
                    ])

                    optimizer = optimizers.Adam(learning_rate=0.001)
                    model.compile(
                        optimizer=optimizer,
                        loss=tf.keras.losses.Huber(),
                        metrics=['mae', 'mse']
                    )

                    callbacks_list = [
                        callbacks.EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True),
                        callbacks.ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=5, min_lr=1e-5),
                        callbacks.ModelCheckpoint("best_lstm.h5", save_best_only=True, monitor="val_loss")
                    ]

                    model.fit(
                        X_train, y_train,
                        epochs=100,
                        batch_size=32,
                        validation_data=(X_test, y_test),
                        callbacks=callbacks_list,
                        verbose=0
                    )

                    # Iterative forecasting
                    last_sequence = scaled_data[-sequence_length:]
                    predictions_scaled = []

                    for _ in range(periods):
                        seq_input = last_sequence.reshape(1, sequence_length, len(feature_cols))
                        pred_scaled = float(model.predict(seq_input, verbose=0)[0, 0])
                        predictions_scaled.append(pred_scaled)

                        new_row = last_sequence[-1].copy()
                        new_row[0] = pred_scaled
                        last_sequence = np.vstack([last_sequence[1:], new_row])

                    # Inverse scaling
                    pred_array = np.zeros((periods, len(feature_cols)))
                    pred_array[:, 0] = predictions_scaled
                    for i in range(1, len(feature_cols)):
                        pred_array[:, i] = scaled_data[-1, i]

                    pred_inverse = scaler.inverse_transform(pred_array)
                    predictions = pred_inverse[:, 0].tolist()

                    dates = pd.date_range(start=df['Date'].iloc[-1] + timedelta(days=1), periods=periods)
                    forecasts['LSTM'] = pd.DataFrame({'Date': dates, 'yhat': predictions})

        except Exception as e:
            st.error(f"{tr('lstm_error', st.session_state.user_lang)}: {e}")

    return forecasts       

                 
                  
                      

# --------------------------
# News Utilities
# --------------------------
@st.cache_data(ttl=360)
def get_company_name(ticker: str) -> str:
    if not ticker:
        return ""
    try:
        info = yf.Ticker(ticker).info
        return info.get("shortName") or info.get("longName") or ""
    except Exception:
        return ""

def _format_time(entry) -> str:
    try:
        if entry.get("published_parsed"):
            ts = time.mktime(entry.published_parsed)
            return datetime.fromtimestamp(ts).strftime("%a, %d %b %Y %H:%M:%S")
        if entry.get("published"):
            return str(entry.get("published"))
    except Exception:
        pass
    return "Unknown time"

def _extract_image(entry) -> str | None:
    # try common RSS fields
    mc = entry.get("media_content") or entry.get("mediaContents")
    if mc and isinstance(mc, (list, tuple)) and mc:
        first = mc[0]
        if isinstance(first, dict):
            url = first.get("url") or first.get("value")
            if url:
                return url
    mt = entry.get("media_thumbnail")
    if mt and isinstance(mt, (list, tuple)) and mt:
        try:
            return mt[0].get("url")
        except Exception:
            pass
    for l in entry.get("links", []):
        t = l.get("type", "")
        if t and t.startswith("image"):
            return l.get("href")
        if l.get("rel") == "enclosure" and l.get("href"):
            return l.get("href")
    # fallback: parse summary/description <img>
    summary = entry.get("summary", "") or entry.get("description", "")
    m = re.search(r'<img[^>]+src=["\']([^"\']+)["\']', summary or "", re.IGNORECASE)
    if m:
        return m.group(1)
    return None

def _resolve_link(entry, feed) -> str:
    # 1) prefer a non-news.google.com alternate link (links array)
    for l in entry.get("links", []):
        href = l.get("href") or ""
        rel = l.get("rel", "")
        typ = l.get("type", "")
        if href and "news.google.com" not in href and (rel == "alternate" or typ.startswith("text/html") or typ == ""):
            return href
    # 2) look in summary/description for first external href
    summary = entry.get("summary", "") or entry.get("description", "")
    m = re.search(r'href=["\'](https?://[^"\']+)["\']', summary or "", re.IGNORECASE)
    if m:
        href = m.group(1)
        if "news.google.com" not in href:
            return href
    # 3) try extracting 'url=' query param from entry.link (google redirect)
    link = entry.get("link", "") or ""
    if "url=" in link:
        qs = urllib.parse.parse_qs(urllib.parse.urlparse(link).query).get("url")
        if qs:
            candidate = qs[0]
            if candidate and "news.google.com" not in candidate:
                return candidate
    # 4) fallback: entry.link (may be Google News article)
    if link:
        return link
    # 5) feed-level link fallback
    return feed.feed.get("link") or ""

@st.cache_data(ttl=300)
def fetch_google_news(query: str, max_items: int = 8, hl: str = "en-US", gl: str = "US", ceid: str = "US:en"):
    if not query:
        return []
    
    try:
        encoded = urllib.parse.quote_plus(query)
        rss_url = f"https://news.google.com/rss/search?q={encoded}&hl={hl}&gl={gl}&ceid={ceid}"
        
        # Add timeout and user agent
        import requests
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        
        response = requests.get(rss_url, headers=headers, timeout=10)
        response.raise_for_status()
        
        feed = feedparser.parse(response.content)
        
        if not feed.entries:
            return []
            
        entries = feed.entries or []
        items = []
        seen = set()
        
        for entry in entries:
            try:
                title = html.unescape(entry.get("title", "")).strip() or "(no title)"
                published = _format_time(entry)
                # source
                src = ""
                s = entry.get("source")
                if isinstance(s, dict):
                    src = s.get("title", "") or ""
                if not src:
                    src = feed.feed.get("title", "") or entry.get("publisher", "") or "Unknown source"
                image = _extract_image(entry)
                link = _resolve_link(entry, feed)
                if not link:
                    continue
                # dedupe by resolved link
                if link in seen:
                    continue
                seen.add(link)
                items.append({
                    "title": title,
                    "link": link,
                    "published": published,
                    "source": src,
                    "image": image
                })
                if len(items) >= max_items:
                    break
            except Exception as e:
                # Log the error but continue processing other entries
                continue
        return items
        
    except requests.exceptions.RequestException as e:
        st.warning(f"⚠️ News fetching failed: {str(e)}")
        return []
    except Exception as e:
        st.warning(f"⚠️ Unexpected error in news fetching: {str(e)}")
        return []

# --------------------------
# Technical Analysis Functions
# --------------------------
@st.cache_data(ttl=300)
def generate_technical_analysis(df: pd.DataFrame, ticker: str) -> dict:
    """Generate comprehensive technical analysis for a stock"""
    if df.empty or len(df) < 20:
        return {}
    
    analysis = {}
    latest = df.iloc[-1]
    prev = df.iloc[-2] if len(df) > 1 else latest
    
    # Price Analysis
    price_change = latest['Close'] - prev['Close']
    price_change_pct = (price_change / prev['Close']) * 100
    
    analysis['price'] = {
        'current': latest['Close'],
        'change': price_change,
        'change_pct': price_change_pct,
        'trend': 'Bullish' if price_change > 0 else 'Bearish' if price_change < 0 else 'Neutral'
    }
    
    # Moving Averages Analysis
    if 'SMA_20' in df.columns and 'SMA_50' in df.columns:
        sma_20 = latest['SMA_20']
        sma_50 = latest['SMA_50']
        current_price = latest['Close']
        
        if current_price > sma_20 > sma_50:
            ma_signal = "Strong Bullish"
        elif current_price > sma_20 and sma_20 < sma_50:
            ma_signal = "Mixed"
        elif current_price < sma_20 < sma_50:
            ma_signal = "Strong Bearish"
        else:
            ma_signal = "Neutral"
            
        analysis['moving_averages'] = {
            'sma_20': sma_20,
            'sma_50': sma_50,
            'signal': ma_signal
        }
    
    # RSI Analysis
    if 'RSI' in df.columns:
        rsi = latest['RSI']
        if rsi > 70:
            rsi_signal = "Overbought"
        elif rsi < 30:
            rsi_signal = "Oversold"
        else:
            rsi_signal = "Neutral"
            
        analysis['rsi'] = {
            'value': rsi,
            'signal': rsi_signal
        }
    
    # MACD Analysis
    if 'MACD' in df.columns and 'MACD_Signal' in df.columns:
        macd = latest['MACD']
        macd_signal = latest['MACD_Signal']
        macd_hist = latest.get('MACD_Hist', macd - macd_signal)
        
        if macd > macd_signal and macd_hist > 0:
            macd_trend = "Bullish"
        elif macd < macd_signal and macd_hist < 0:
            macd_trend = "Bearish"
        else:
            macd_trend = "Neutral"
            
        analysis['macd'] = {
            'macd': macd,
            'signal': macd_signal,
            'histogram': macd_hist,
            'trend': macd_trend
        }
    
    # Bollinger Bands Analysis
    if 'BB_Upper' in df.columns and 'BB_Lower' in df.columns:
        bb_upper = latest['BB_Upper']
        bb_lower = latest['BB_Lower']
        bb_middle = latest.get('BB_Middle', (bb_upper + bb_lower) / 2)
        current_price = latest['Close']
        
        if current_price > bb_upper:
            bb_signal = "Overbought"
        elif current_price < bb_lower:
            bb_signal = "Oversold"
        else:
            bb_signal = "Normal"
            
        analysis['bollinger_bands'] = {
            'upper': bb_upper,
            'lower': bb_lower,
            'middle': bb_middle,
            'signal': bb_signal
        }
    
    # Volume Analysis
    if 'Volume' in df.columns:
        avg_volume = df['Volume'].tail(20).mean()
        current_volume = latest['Volume']
        volume_ratio = current_volume / avg_volume if avg_volume > 0 else 1
        
        if volume_ratio > 1.5:
            volume_signal = "High Volume"
        elif volume_ratio < 0.5:
            volume_signal = "Low Volume"
        else:
            volume_signal = "Normal Volume"
            
        analysis['volume'] = {
            'current': current_volume,
            'average': avg_volume,
            'ratio': volume_ratio,
            'signal': volume_signal
        }
    
    # Overall Technical Score
    bullish_signals = 0
    total_signals = 0
    
    if 'moving_averages' in analysis:
        total_signals += 1
        if 'Strong Bullish' in analysis['moving_averages']['signal']:
            bullish_signals += 1
        elif 'Mixed' in analysis['moving_averages']['signal']:
            bullish_signals += 0.5
    
    if 'rsi' in analysis:
        total_signals += 1
        if analysis['rsi']['signal'] == 'Oversold':
            bullish_signals += 1
        elif analysis['rsi']['signal'] == 'Overbought':
            bullish_signals += 0
    
    if 'macd' in analysis:
        total_signals += 1
        if analysis['macd']['trend'] == 'Bullish':
            bullish_signals += 1
        elif analysis['macd']['trend'] == 'Neutral':
            bullish_signals += 0.5
    
    if 'bollinger_bands' in analysis:
        total_signals += 1
        if analysis['bollinger_bands']['signal'] == 'Oversold':
            bullish_signals += 1
        elif analysis['bollinger_bands']['signal'] == 'Overbought':
            bullish_signals += 0
    
    if total_signals > 0:
        technical_score = (bullish_signals / total_signals) * 100
        if technical_score >= 70:
            overall_signal = "Strong Buy"
        elif technical_score >= 60:
            overall_signal = "Buy"
        elif technical_score >= 40:
            overall_signal = "Hold"
        elif technical_score >= 30:
            overall_signal = "Sell"
        else:
            overall_signal = "Strong Sell"
    else:
        technical_score = 50
        overall_signal = "Hold"
    
    analysis['overall'] = {
        'score': technical_score,
        'signal': overall_signal
    }
    
    return analysis

@st.cache_data(ttl=3600)
def validate_ticker(ticker: str) -> dict:
    """Validate if a ticker symbol exists on Yahoo Finance"""
    if not ticker:
        return {"valid": False, "error": "No ticker provided"}
    
    try:
        # Clean the ticker symbol
        m = re.match(r"^([A-Za-z0-9\-\._=]+)", ticker)
        clean_ticker = m.group(1) if m else ticker
        
        # Try to get basic info
        t = yf.Ticker(clean_ticker)
        info = t.info
        
        # Check if we got meaningful data
        if not info or len(info) < 5:
            return {"valid": False, "error": "Ticker not found or no data available"}
        
        # Check for required fields
        required_fields = ['symbol', 'shortName', 'longName']
        has_required = any(field in info and info[field] for field in required_fields)
        
        if not has_required:
            return {"valid": False, "error": "Invalid ticker - missing basic information"}
        
        return {
            "valid": True, 
            "symbol": clean_ticker,
            "name": info.get('shortName') or info.get('longName', clean_ticker),
            "exchange": info.get('exchange', 'Unknown'),
            "currency": info.get('currency', 'USD'),
            "market_cap": info.get('marketCap'),
            "sector": info.get('sector'),
            "industry": info.get('industry')
        }
        
    except Exception as e:
        return {"valid": False, "error": f"Error validating ticker: {str(e)}"}

# --------------------------
# Main App
# --------------------------
st.title(tr("title", st.session_state.user_lang))
st.markdown("---")

# Base tickers list
tickers_list = [
    # 🌎 Americas - Stocks
    "    ","AAPL","MSFT","AMZN","TSLA","JPM",   # New York
    "RY.TO","SHOP.TO","ENB.TO","ABX.TO", # Toronto
    "VALE","PBR","ITUB","BBD",         # São Paulo
    "BMA","GGAL","PAM","YPF",          # Buenos Aires
    "BCH","BAP","FEMSAUBD.MX","WALMEX.MX", # Mexico City
    "EC","BAP","SCCO","BVN",           # Lima
    "B3SA3.SA","ITUB4.SA","PETR4.SA",   # São Paulo (B3)
    "MELI","BIDU","PAGS","BBDC4.SA",   # Other Americas

    # 🌍 Europe - Stocks
    "SAP.DE","SIE.DE","DTE.DE","VOW3.DE",  # Frankfurt
    "SHEL","HSBA.L","BP.L","ULVR.L",    # London
    "AIR.PA","SAN.PA","OR.PA","MC.PA",   # Paris
    "ENEL.MI","ENI.MI","ISP.MI","UCG.MI", # Milan
    "IBE.MC","SAN.MC","BBVA.MC","TEF.MC", # Madrid
    "NOVOb.CO","NOVO-B.CO","ORSTED.CO",   # Copenhagen
    "EQNR.OL","DNB.OL","TEL.OL","NHY.OL", # Oslo
    "ASML.AS","UNA.AS","INGA.AS","PHIA.AS", # Amsterdam
    "ROG.SW","NOVN.SW","NESN.SW","UBSG.SW", # Zurich
    "KER.PA","AI.PA","CAP.PA","BNP.PA",  # Other Europe

    # 🌏 Asia & Oceania - Stocks
    "005930.KS","000660.KS","035420.KS",   # Seoul
    "7203.T","9984.T","9433.T","8035.T",  # Tokyo
    "BABA","TCEHY","JD","BIDU",          # China/HK (US-listed)
    "601318.SS","600519.SS","601398.SS",  # Shanghai
    "0700.HK","1299.HK","0941.HK","0005.HK", # Hong Kong
    "TCS.NS","HDFCBANK.NS","INFY.NS",     # Mumbai
    "BHP.AX","CSL.AX","NAB.AX","WOW.AX",  # Sydney
    "AIA.NZ","FRE.NZ","MFT.NZ","RYM.NZ",  # Auckland
    "S68.SI","D05.SI","U11.SI","O39.SI",  # Singapore
    "PTT.BK","CPALL.BK","ADVANC.BK",      # Bangkok
    "FMI.MM","MTSH.MM",                  # Yangon

    # 🌊 Oceania - Stocks
    "BHP.AX","CBA.AX","CSL.AX","WBC.AX", # Australia
    "AIA.NZ","SPK.NZ","FPH.NZ",          # New Zealand

    # 🌎 Americas - Currencies
    "USD=X","CAD=X","MXN=X","BRL=X","ARS=X","CLP=X","PEN=X","COP=X",

    # 🌍 Europe & Africa - Currencies
    "GBP=X","EUR=X","PLN=X","TRY=X","EGP=X","ZAR=X","KES=X","NGN=X","MAD=X",

    # 🌏 Middle East & Asia - Currencies
    "AED=X","ILS=X","JOD=X","PKR=X","INR=X","NPR=X","BDT=X","LKR=X","THB=X",
    "SGD=X","MYR=X","IDR=X","CNY=X","TWD=X","JPY=X","KRW=X","KZT=X","UZS=X",
    "MNT=X","MMK=X",

    # 🌊 Oceania - Currencies
    "AUD=X","NZD=X",

    # 🪙 Crypto
    "BTC-USD","ETH-USD"
]

# Enhanced dropdown controls with better styling
controls = st.columns([2,2,2,2,1])
with controls[0]:
    ticker_selected = st.selectbox(tr("ticker_label", st.session_state.user_lang), tickers_list, index=0)
    # Extract the raw ticker symbol from the selected string (works for both normal symbols and our "SYMBOL — Label" format)
    m = re.match(r"^([A-Za-z0-9\-\._=]+)", ticker_selected or "")
    selected_ticker = m.group(1) if m else (ticker_selected or "")

# --------------------------
# Custom ticker search
# --------------------------
st.markdown("---")  # separator line for clarity
st.subheader(" " + tr("search_any_ticker", st.session_state.user_lang))

custom_ticker = st.text_input(
    tr("enter_yahoo_symbol", st.session_state.user_lang),
    placeholder=tr("ticker_placeholder", st.session_state.user_lang)
)

# Final ticker selection logic with validation
ticker = None
ticker_info = None

if custom_ticker and custom_ticker.strip():
    ticker = custom_ticker.strip().upper()
    # Validate ticker format first
    if not re.match(r'^[A-Za-z0-9\-\._=]+$', ticker):
        st.error(f"❌ Invalid ticker format: {ticker}")
        st.info(" **Valid formats:** Letters, numbers, hyphens, dots, underscores, and equals signs only")
        ticker = None
    else:
        # Validate ticker exists on Yahoo Finance
        with st.spinner(" Validating ticker..."):
            ticker_info = validate_ticker(ticker)
        
        if ticker_info["valid"]:
            st.success(f"✅ **{ticker_info['name']}** ({ticker_info['symbol']})")
            st.info(f" Exchange: {ticker_info['exchange']} |  Currency: {ticker_info['currency']}")
            if ticker_info.get('sector'):
                st.info(f" Sector: {ticker_info['sector']}")
        else:
            st.error(f"❌ {ticker_info['error']}")
            st.info(" **Try:**")
            st.info("• Check spelling (e.g., AAPL, TSLA, BTC-USD)")
            st.info("• Use correct exchange suffix (e.g., .TO for Canadian stocks)")
            st.info("• Verify the ticker exists on Yahoo Finance")
            ticker = None
else:
    ticker = selected_ticker
    if ticker:
        st.info(f"{tr('using_selected_ticker', st.session_state.user_lang)}: **{ticker}**")
with controls[1]:
    period = st.selectbox(tr("period_label", st.session_state.user_lang), ["1mo","3mo","6mo","1y","2y","5y","10y","max"], index=2)
with controls[2]:
    interval = st.selectbox(tr("interval_label", st.session_state.user_lang), ["1d","1wk","1mo"], index=0)
with controls[3]:
    show_indicators = st.checkbox(tr("indicators_label", st.session_state.user_lang), value=True)
with controls[4]:
    run = st.button(tr("run_button", st.session_state.user_lang), type="primary")

st.markdown("---")

if run:
    # Validate ticker before proceeding
    if not ticker:
        st.error("Please select or enter a valid ticker symbol.")
        st.stop()
    
    # Fetch and process stock data
    with st.spinner(tr("fetching_data", st.session_state.user_lang)):
        df = fetch_yahoo_data(ticker, period, interval)
    
    if df.empty:
        st.error(tr("no_data", st.session_state.user_lang))
        st.stop()
    
    df = compute_indicators(df)
    
    # Get currency information
    currency_code, market = get_currency_info(ticker)

    # Display company information if available
    if ticker_info and ticker_info.get('valid'):
        st.markdown("---")
        st.subheader(" Company Information")
        info_cols = st.columns([2, 1, 1])
        with info_cols[0]:
            st.write(f"**Company:** {ticker_info.get('name', ticker)}")
            if ticker_info.get('sector'):
                st.write(f"**Sector:** {ticker_info['sector']}")
            if ticker_info.get('industry'):
                st.write(f"**Industry:** {ticker_info['industry']}")
        with info_cols[1]:
            st.write(f"**Exchange:** {ticker_info.get('exchange', 'Unknown')}")
            st.write(f"**Currency:** {ticker_info.get('currency', 'USD')}")
        with info_cols[2]:
            if ticker_info.get('market_cap'):
                market_cap = ticker_info['market_cap']
                if market_cap > 1e12:
                    cap_str = f"${market_cap/1e12:.2f}T"
                elif market_cap > 1e9:
                    cap_str = f"${market_cap/1e9:.2f}B"
                elif market_cap > 1e6:
                    cap_str = f"${market_cap/1e6:.2f}M"
                else:
                    cap_str = f"${market_cap:,.0f}"
                st.write(f"**Market Cap:** {cap_str}")

    # Display key metrics
    last = df.iloc[-1]
    st.markdown("---")
    st.subheader(" Current Market Data")
    metrics_cols = st.columns([1,1,1,1,1])
    with metrics_cols[0]: st.metric(tr("date", st.session_state.user_lang), str(pd.to_datetime(last['Date']).date()))
    with metrics_cols[1]: st.metric(tr("open", st.session_state.user_lang), format_currency(last['Open'], currency_code))
    with metrics_cols[2]: st.metric(tr("high", st.session_state.user_lang), format_currency(last['High'], currency_code))
    with metrics_cols[3]: st.metric(tr("low", st.session_state.user_lang), format_currency(last['Low'], currency_code))
    with metrics_cols[4]: st.metric(tr("close", st.session_state.user_lang), format_currency(last['Close'], currency_code))

    # Plot price chart with indicators
    st.subheader(tr("price_chart", st.session_state.user_lang))
    plot_advanced(df, f"{ticker} — {tr('price_chart', st.session_state.user_lang)}", show_indicators)

    # Technical Analysis Section
    st.markdown("---")
    st.subheader(" Technical Analysis")
    
    # Generate technical analysis
    analysis = generate_technical_analysis(df, ticker)
    
    if analysis:
        # Overall Signal
        overall_signal = analysis.get('overall', {})
        if overall_signal:
            signal_color = {
                'Strong Buy': '🟢',
                'Buy': '🟢', 
                'Hold': '🟡',
                'Sell': '🔴',
                'Strong Sell': '🔴'
            }.get(overall_signal.get('signal', 'Hold'), '🟡')
            
            col1, col2, col3 = st.columns([1, 1, 1])
            with col1:
                st.metric("Overall Signal", f"{signal_color} {overall_signal.get('signal', 'Hold')}")
            with col2:
                st.metric("Technical Score", f"{overall_signal.get('score', 50):.1f}/100")
            with col3:
                price_info = analysis.get('price', {})
                trend_emoji = "📈" if price_info.get('trend') == 'Bullish' else "📉" if price_info.get('trend') == 'Bearish' else "➡️"
                st.metric("Price Trend", f"{trend_emoji} {price_info.get('trend', 'Neutral')}")
        
        # Detailed Analysis
        analysis_cols = st.columns(2)
        
        with analysis_cols[0]:
            st.markdown("#### 📈 Price & Moving Averages")
            price_info = analysis.get('price', {})
            if price_info:
                st.write(f"**Current Price:** {format_currency(price_info.get('current', 0), currency_code)}")
                change = price_info.get('change', 0)
                change_pct = price_info.get('change_pct', 0)
                change_color = "🟢" if change >= 0 else "🔴"
                st.write(f"**Change:** {change_color} {format_currency(change, currency_code)} ({change_pct:.2f}%)")
            
            ma_info = analysis.get('moving_averages', {})
            if ma_info:
                st.write(f"**SMA 20:** {format_currency(ma_info.get('sma_20', 0), currency_code)}")
                st.write(f"**SMA 50:** {format_currency(ma_info.get('sma_50', 0), currency_code)}")
                st.write(f"**Signal:** {ma_info.get('signal', 'Neutral')}")
        
        with analysis_cols[1]:
            st.markdown("####  Technical Indicators")
            
            rsi_info = analysis.get('rsi', {})
            if rsi_info:
                rsi_value = rsi_info.get('value', 0)
                rsi_signal = rsi_info.get('signal', 'Neutral')
                rsi_color = "🔴" if rsi_signal == "Overbought" else "🟢" if rsi_signal == "Oversold" else "🟡"
                st.write(f"**RSI (14):** {rsi_color} {rsi_value:.1f} - {rsi_signal}")
            
            macd_info = analysis.get('macd', {})
            if macd_info:
                macd_trend = macd_info.get('trend', 'Neutral')
                macd_color = "🟢" if macd_trend == "Bullish" else "🔴" if macd_trend == "Bearish" else "🟡"
                st.write(f"**MACD:** {macd_color} {macd_trend}")
            
            bb_info = analysis.get('bollinger_bands', {})
            if bb_info:
                bb_signal = bb_info.get('signal', 'Normal')
                bb_color = "🔴" if bb_signal == "Overbought" else "🟢" if bb_signal == "Oversold" else "🟡"
                st.write(f"**Bollinger Bands:** {bb_color} {bb_signal}")
        
        # Volume Analysis
        volume_info = analysis.get('volume', {})
        if volume_info:
            st.markdown("####  Volume Analysis")
            vol_cols = st.columns(3)
            with vol_cols[0]:
                st.metric("Current Volume", f"{volume_info.get('current', 0):,}")
            with vol_cols[1]:
                st.metric("Avg Volume (20d)", f"{volume_info.get('average', 0):,}")
            with vol_cols[2]:
                ratio = volume_info.get('ratio', 1)
                ratio_color = "🟢" if ratio > 1.5 else "🔴" if ratio < 0.5 else "🟡"
                st.metric("Volume Ratio", f"{ratio_color} {ratio:.2f}x")
    else:
        st.warning("⚠️ Insufficient data for technical analysis. Please try a longer time period.")

    # Create two columns for forecasts and news
    forecast_col, news_col = st.columns([1, 1])
    
    with forecast_col:
        st.subheader(tr("ai_forecasts", st.session_state.user_lang))
        with st.spinner(tr("running_models", st.session_state.user_lang)):
            forecasts = forecast_all(df, periods=30)
        
        if forecasts:
            for model_name, fc in forecasts.items():
                if fc is not None:
                    with st.expander(f" {tr(model_name.lower(), st.session_state.user_lang)} {tr('model', st.session_state.user_lang)}", expanded=False):
                        # Format forecast values with appropriate currency
                        fc_display = fc.copy()
                        if 'yhat' in fc_display.columns:
                            fc_display['yhat'] = fc_display['yhat'].apply(lambda x: format_currency(x, currency_code))
                        if 'yhat_lower' in fc_display.columns:
                            fc_display['yhat_lower'] = fc_display['yhat_lower'].apply(lambda x: format_currency(x, currency_code))
                        if 'yhat_upper' in fc_display.columns:
                            fc_display['yhat_upper'] = fc_display['yhat_upper'].apply(lambda x: format_currency(x, currency_code))
                            
                        st.dataframe(fc_display.head(10), use_container_width=True)
                        
                        # Plot forecast
                        fig = go.Figure()
                        fig.add_trace(go.Scatter(x=df['Date'].tail(50), y=df['Close'].tail(50), 
                                               name=tr('historical', st.session_state.user_lang), line=dict(color='#E6E6E6')))
                        fig.add_trace(go.Scatter(x=fc['Date'], y=fc['yhat'], 
                                               name=f'{tr(model_name.lower(), st.session_state.user_lang)} {tr("forecast", st.session_state.user_lang)}', line=dict(color='#4DA6FF')))
                        
                        if model_name == "Prophet" and 'yhat_lower' in fc.columns and 'yhat_upper' in fc.columns:
                            fig.add_trace(go.Scatter(x=fc['Date'], y=fc['yhat_lower'], 
                                                   name=tr('lower_bound', st.session_state.user_lang), line=dict(dash='dot', color='#666')))
                            fig.add_trace(go.Scatter(x=fc['Date'], y=fc['yhat_upper'], 
                                                   name=tr('upper_bound', st.session_state.user_lang), line=dict(dash='dot', color='#666')))
                        
                        fig.update_layout(template='plotly_dark', height=300,
                                        paper_bgcolor='#000000', plot_bgcolor='#000000')
                        st.plotly_chart(fig, use_container_width=True, theme=None)
                        
                        st.download_button(f" {tr('download', st.session_state.user_lang)} {tr(model_name.lower(), st.session_state.user_lang)} CSV", 
                                         fc.to_csv(index=False), 
                                         file_name=f"{ticker}_{model_name}.csv", 
                                         mime="text/csv",
                                         key=f"download_{model_name}")
        else:
            st.warning(tr("no_models", st.session_state.user_lang))

    with news_col:
        st.subheader(tr("news", st.session_state.user_lang))
        
        # Get company name for better news search
        company_name = get_company_name(ticker)
        
        # Build news query
        query = ticker or ""
        if company_name:
            query = f'{ticker} OR "{company_name}"'
        
        # Language mapping for news API
        lang_map = {
    "en": ("en-US", "US", "US:en"),
    "es": ("es-ES", "ES", "ES:es"),
    "fr": ("fr-FR", "FR", "FR:fr"),
    "pt": ("pt-BR", "BR", "BR:pt"),
    "ta": ("ta-IN", "IN", "IN:ta"),
    "de": ("de-DE", "DE", "DE:de"),
    "it": ("it-IT", "IT", "IT:it"),
    "el": ("el-GR", "GR", "GR:el"),
    "fi": ("fi-FI", "FI", "FI:fi"),
    "sv": ("sv-SE", "SE", "SE:sv"),
    "pl": ("pl-PL", "PL", "PL:pl"),
    "tr": ("tr-TR", "TR", "TR:tr"),
    "ar": ("ar-SA", "SA", "SA:ar"),
    "zu": ("zu-ZA", "ZA", "ZA:zu"),
    "xh": ("xh-ZA", "ZA", "ZA:xh"),
    "af": ("af-ZA", "ZA", "ZA:af"),
    "nso": ("nso-ZA", "ZA", "ZA:nso"),
    "tn": ("tn-BW", "BW", "BW:tn"),
    "st": ("st-ZA", "ZA", "ZA:st"),
    "ts": ("ts-ZA", "ZA", "ZA:ts"),
    "ss": ("ss-ZA", "ZA", "ZA:ss"),
    "ve": ("ve-ZA", "ZA", "ZA:ve"),
    "nr": ("nr-ZA", "ZA", "ZA:nr"),
    "sw": ("sw-KE", "KE", "KE:sw"),
    "ber": ("ber-MA", "MA", "MA:ber"),
    "he": ("he-IL", "IL", "IL:he"),
    "ur": ("ur-PK", "PK", "PK:ur"),
    "hi": ("hi-IN", "IN", "IN:hi"),
    "ne": ("ne-NP", "NP", "NP:ne"),
    "bn": ("bn-IN", "IN", "IN:bn"),
    "si": ("si-LK", "LK", "LK:si"),
    "th": ("th-TH", "TH", "TH:th"),
    "ms": ("ms-MY", "MY", "MY:ms"),
    "id": ("id-ID", "ID", "ID:id"),
    "zh": ("zh-CN", "CN", "CN:zh"),
    "ja": ("ja-JP", "JP", "JP:ja"),
    "ko": ("ko-KR", "KR", "KR:ko"),
    "kk": ("kk-KZ", "KZ", "KZ:kk"),
    "ru": ("ru-RU", "RU", "RU:ru"),
    "uz": ("uz-UZ", "UZ", "UZ:uz"),
    "mn": ("mn-MN", "MN", "MN:mn"),
    "my": ("my-MM", "MM", "MM:my"),
    "mi": ("mi-NZ", "NZ", "NZ:mi"),
}

        
        hl, gl, ceid = lang_map.get(st.session_state.user_lang, ("en-US", "US", "US:en"))
        
        with st.spinner(tr("fetching_news", st.session_state.user_lang)):
            articles = fetch_google_news(query, max_items=8, hl=hl, gl=gl, ceid=ceid)

        if not articles:
            st.markdown(f'<div class="empty"> {tr("no_articles", st.session_state.user_lang)}</div>', unsafe_allow_html=True)
        else:
            html_out = ['<div class="news-list">']
            for a in articles:
                # make safe values
                link = a["link"]
                title = html.escape(a["title"])
                src = html.escape(a["source"])
                pub = html.escape(a["published"])
                img = a.get("image")
                img_tag = ""
                if img:
                    img_url = img
                    if img_url.startswith("//"):
                        img_url = "https:" + img_url
                    if img_url.startswith("http://") or img_url.startswith("https://"):
                        img_tag = f'<img class="news-img" src="{html.escape(img_url, quote=True)}" loading="lazy" alt="thumb"/>'
                
                if img_tag:
                    card = f'''
<a class="card-link" href="{html.escape(link, quote=True)}" target="_blank" rel="noopener noreferrer">
  <div class="news-card">
    {img_tag}
    <div class="news-content">
      <div class="news-title">{title}</div>
      <div class="news-meta">{src} • {pub}</div>
    </div>
  </div>
</a>
'''
                else:
                    card = f'''
<a class="card-link" href="{html.escape(link, quote=True)}" target="_blank" rel="noopener noreferrer">
  <div class="news-card" style="align-items:center;">
    <div style="flex:1;">
      <div class="news-title">{title}</div>
      <div class="news-meta">{src} • {pub}</div>
    </div>
  </div>
</a>
'''
                html_out.append(card)
            html_out.append('</div>')
            st.markdown("".join(html_out), unsafe_allow_html=True)

    # Download raw data
    st.markdown("---")
    st.subheader(tr("export_data", st.session_state.user_lang))
    export_cols = st.columns([1,1,1])
    with export_cols[0]:
        st.download_button(f" {tr('download_csv', st.session_state.user_lang)}", 
                         df.to_csv(index=False), 
                         file_name=f"{ticker}_complete_data.csv", 
                         mime="text/csv")
    with export_cols[1]:
        st.download_button(f" {tr('download_json', st.session_state.user_lang)}", 
                         df.to_json(orient='records', date_format='iso'), 
                         file_name=f"{ticker}_historical.json", 
                         mime="application/json")
    with export_cols[2]:
        if articles:
            news_df = pd.DataFrame(articles)
            st.download_button(f" {tr('download_news', st.session_state.user_lang)}", 
                             news_df.to_csv(index=False), 
                             file_name=f"{ticker}_news.csv", 
                             mime="text/csv")

    # Recent data table
    st.markdown("---")
    st.subheader(tr("recent_data", st.session_state.user_lang))
    st.dataframe(df.tail(20), use_container_width=True)

else:
    st.info(tr("select_ticker", st.session_state.user_lang))
    
    # Show model availability status
    st.markdown(f"### {tr('model_status', st.session_state.user_lang)}")
    status_cols = st.columns(4)
    with status_cols[0]:
        status = f" {tr('available', st.session_state.user_lang)}" if HAS_PROPHET else f" {tr('missing', st.session_state.user_lang)}"
        st.markdown(f"**{tr('prophet', st.session_state.user_lang)}:** {status}")
    with status_cols[1]:
        status = f" {tr('available', st.session_state.user_lang)}" if HAS_ARIMA else f" {tr('missing', st.session_state.user_lang)}"
        st.markdown(f"**{tr('arima', st.session_state.user_lang)}:** {status}")
    with status_cols[2]:
        status = f" {tr('available', st.session_state.user_lang)}" if HAS_SKLEARN else f" {tr('missing', st.session_state.user_lang)}"
        st.markdown(f"**{tr('random_forest', st.session_state.user_lang)}:** {status}")
    with status_cols[3]:
        status = f" {tr('available', st.session_state.user_lang)}" if HAS_TF else f" {tr('missing', st.session_state.user_lang)}"
        st.markdown(f"**{tr('lstm', st.session_state.user_lang)}:** {status}")



